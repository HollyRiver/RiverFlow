[
  {
    "objectID": "unrefined file/r_practice/Regression Analysis.html",
    "href": "unrefined file/r_practice/Regression Analysis.html",
    "title": "R Notebook",
    "section": "",
    "text": "options(repr.plot.width = 15, repr.plot.height = 8)  ## 플롯 크기 설정\n\n\nx &lt;- rnorm(100) ## rnorm() / dnorm() / pnorm() / qnorm()\nhist(x)\n\n\n\n\n\ndefault는 표준정규분포이다. (n, mean = 0, sd = 1)\n\n\nx &lt;- seq(-5, 5, 0.01)\nplot(x, dnorm(x), type = 'l', lwd = 2,\n     main = \"표준정규분포의 확률밀도함수\",\n     cex.main = 1,  ## character expansion.main : title\n     cex.lab = 1)   ## character expansion.lab : label\n\n\n\n\n\npnorm(q, mean, sd) | probability, cdf\n\n\nprint(pnorm(1.96))\n\n[1] 0.9750021\n\nprint(pnorm(4, 3, 1))\n\n[1] 0.8413447\n\nprint(pnorm(4, mean = 3, sd = 1))\n\n[1] 0.8413447\n\n\n\np_value를 구할 수 없다면 백분위수(quantile value)를 구해야 한다.\n\n\nprint(qnorm(0.95))\n\n[1] 1.644854\n\nprint(qnorm(0.975))\n\n[1] 1.959964\n\nprint(qnorm(0.995))\n\n[1] 2.575829\n\n\n\n\n\n\n자유도가 중요한 분포이다. &gt; 자유도 : t분포의 모양을 결정하는 것. parameter는 아니다. 그냥 아는 값.\n\n\n표본의 분포가 아닌 표본 통계량의 분포에 해당한다.\n\n\nx &lt;- rt(1000, 3)  ## 자유도가 3인 t분포에서의 샘플 1000개\nhist(x, cex.main = 1, cex.lab = 1)\n\n\n\n\n\n원리는 정규분포와 동일하다. rt(), pt(), dt(), qt()\n\n\nt분포의 확률밀도함수(probability Density function)\n\n\nx &lt;- seq(-5, 5, 0.01)\n\nplot(x, dt(x, 3), type = 'l',\n     main = \"t분포의 확률밀도함수\")\n\n\n\n\n\n여러 개의 확률밀도함수를 같이 그려보자.\n\n\nx &lt;- seq(-5, 5, 0.01)\n\nplot(x, dnorm(x), type = 'l', main = 't분포와 정규분포의 확률밀도함수'  ## , lty = 1\n     )\n\nlines(x, dt(x, 1), col = 'red', lty = 2)\nlines(x, dt(x, 3), col = 'blue', lty = 3)\nlines(x, dt(x, 30), col = 'green', lty = 4)\n\nlegend('topleft', c('N(0,1)', 't(1)', 't(3)', 't(30)'), ## query 문법처럼 사용가능한듯.\n       lty = 1:4, col = c('black', 'red', 'blue', 'green'))\n\n\n\n\n\n자유도 n이 커질 수록 표준정규분포의 확률밀도함수와 유사해진다.\n\n\\(T\\) ~ \\(t(df), ~~~ P(T≤t)\\)\n\\(T_0\\) ~ \\(t(df), ~~~ t_a(df) : P(T &gt; t_a(df)) = a\\)\n\nprint(pt(2, 3))  ## probability distribution function\n\n[1] 0.930337\n\nprint(qt(0.95, 3))  ## quantile\n\n[1] 2.353363\n\nprint(dt(0, 3))   ## probability density function\n\n[1] 0.3675526\n\n\n\n우측검정 시, 오른쪽 영역의 확률을 알고 싶을 경우\n\nStudent T distribution practice\n\npt(1,3, lower.tail = FALSE)   ## 낮은 값의 꼬리쪽으로 산출?\n\n[1] 0.1955011\n\nqt(0.05, 3, lower.tail = FALSE) ## 오른쪽에서의 a = 0.05인 quantile 값\n\n[1] 2.353363\n\nqt(0.95, 3)\n\n[1] 2.353363\n\n\n\n\n\n\nx &lt;- rchisq(1000, 4)\nhist(x)\n\n\n\n\n\\(x &gt; 0\\) 에서의 오른쪽으로 치우쳐진 분포가 나온다.\n\nx &lt;- seq(0, 20, 0.01)\nplot(x, dchisq(x, 5), type = 'l', lwd = 2,\n     main = '자유도가 5인 카이제곱분포의 확률밀도함수',\n     cex.main = 1, cex.lab = 1)\n\n\n\n\n\nx &lt;- seq(0, 200, 0.01)\nplot(x, dchisq(x, 100), type = 'l', lwd = 2,\n     main = '자유도가 100인 카이제곱분포의 확률밀도함수')\n\n\n\n\n자유도가 높을 수록 정규분포와 비슷한 모양을 띈다.\n- 이외 코드는 위와 유사하다…(t분포)\n\npchisq(100, 100)\n\n[1] 0.5188083\n\nqchisq(0.95, 100)\n\n[1] 124.3421\n\ndchisq(50, 50)\n\n[1] 0.03976148\n\n\n\n\n\n\nx &lt;- rf(1000, 4, 6)  ## n=100, 분자의 자유도(df1) = 4, 분모의 자유도(df2) = 6\nhist(x, breaks = 50)\n\n\n\n\n\nx &lt;- seq(0, 15, 0.01)\nplot(x, df(x, 4, 6), type = 'l', lwd = 2,\n     main = \"F분포의 확률밀도함수\")\nlines(x, df(x, 6, 4), col = 'red')\n\nlegend(\"topright\", c(\"F(4,6)\", \"F(6,4)\"), lty = 1:2, col = c('black', 'red'))\n\n\n\n\n\n활용 방법은 비슷하다.\n\n\nqf(0.95, 4, 6)\n\n[1] 4.533677\n\n\n\n\n\n\n\n예제) 비누공장데이터 : 9.0, 9.1, 8.8, 9.1, 9.0, 9.4, 9.2, 8.8, 8.6 (n=9)\n\n\nx &lt;- c(9.0, 9.1, 8.8, 9.1, 9.0, 9.4, 9.2, 8.8, 8.6)\n\nbar_x = mean(x); bar_x\n\n[1] 9\n\nS_x = var(x); S_x\n\n[1] 0.0575\n\ns_x = sd(x); s_x\n\n[1] 0.2397916\n\n\n\nlower_x = bar_x - qt(0.975, 8)*s_x/sqrt(9)  ## 자료의 수가 9이므로 자유도 8인 t분포\nupper_x = bar_x + qt(0.975, 8)*s_x/sqrt(9)\n\nc(lower_x, upper_x)\n\n[1] 8.81568 9.18432\n\n\n\n95% 신뢰구간이다.\nquantile 값이 0.975면 우측 확률이 0.025인 t_a와 같으니까…\n\n\n\n\nls(t.test(x))\n\n [1] \"alternative\" \"conf.int\"    \"data.name\"   \"estimate\"    \"method\"     \n [6] \"null.value\"  \"p.value\"     \"parameter\"   \"statistic\"   \"stderr\"     \n\n\n\nt.test(x)$conf.int  ## 해당 모듈의 하위 모듈인 conf.int : 신뢰구간 산출\n\n[1] 8.81568 9.18432\nattr(,\"conf.level\")\n[1] 0.95\n\n\n\nt.test(x, conf.level = 0.99)$conf.int ## 99% 신뢰구간, 디폴트는 95%\n\n[1] 8.731802 9.268198\nattr(,\"conf.level\")\n[1] 0.99\n\n\n\n\n\n\n\n\n\n예제) 공정온도에서의 제품의 강도(\\(N(73.7, 1)\\))\n\n두 가지 방법 : \\(p-value\\)와 \\(\\alpha\\)값 비교, 기각역과 관측값 비교\n\n가설 : \\(H_0 : \\mu = 73.7 ~ vs. ~ H_1 :\\mu &gt; 73.7\\)\n\n\\(\\bar{x} = 75.1, ~ n = 16, ~ \\alpha = 0.05\\)\n\nmu &lt;- 73.7; xbar &lt;- 75.1; sigma &lt;- 1; n &lt;- 16\n\n\n검정통계량의 관측값 : \\(z_0 = \\frac{\\bar{x} - \\mu_0}{\\frac{\\sigma}{n}}\\)\n\n\nz_0 &lt;- (xbar - mu)/(sigma/sqrt(n)); z_0\n\n[1] 5.6\n\n\n\n기각역\n\n\nqnorm(0.95)\n\n[1] 1.644854\n\n\n\n기각역보다 검정통계량의 관측값이 휠씬 크므로 귀무가설 기각 가능\n\n\n\n\n\n예제 2\n\n\nmu &lt;- 2; x_bar &lt;- 1.96; s &lt;- 0.05; n &lt;- 50\n\n\nt_0 &lt;- (x_bar - mu)/(s/sqrt(50)); t_0\n\n[1] -5.656854\n\n\n\n기각역\n\n\n-qt(0.95, n - 1)\n\n[1] -1.676551\n\n\n\n유의확률(p-value)\n\n\npt(t_0, n-1)\n\n[1] 3.93525e-07\n\n\n\n\n\n\n예제) 일전의 비누공장 데이터, 모분산은 알리가 없음.\n\n\n가설 : \\(H_0 : \\mu = 9.2 ~ vs. ~ H_1 : \\mu ≠ 9.2\\)\n\n\nx &lt;- c(9.0, 9.1, 8.8, 9.1, 9.0, 9.4, 9.2, 8.8, 8.6)\nxbar = mean(x)\nS_x = var(x)  ## r은 데이터 분석 툴이기 때문에 기본적으로 n-1로 나누어준다.\ns_x = sd(x)\n\n\n유의수준 \\(\\alpha = 0.05\\)\n검정통계량의 관측값 : \\(t_0 = \\frac{}{}, \\alpha = 0.05\\)\n\n\nt_0 &lt;- (xbar - 9.2)/(s_x/sqrt(9)); t_0\n\n[1] -2.502173\n\n\n\n기각역\n\n\nqt(0.975, 9-1)\n\n[1] 2.306004\n\n\n\n유의확률(p-balue)\n\n\npt(t_0, 8) + pt(-t_0, 8, lower.tail = FALSE)\n\n[1] 0.03681717\n\n\n\nt.test()\n\n\nt.test(x)\n\n\n    One Sample t-test\n\ndata:  x\nt = 112.6, df = 8, p-value = 4.325e-14\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n 8.81568 9.18432\nsample estimates:\nmean of x \n        9 \n\n\n\ndefault는 \\(\\mu = 0\\)이기 때문에 귀무가설을 입력해줘햐 한다.\n\n6.1\n\nt.test(x, mu = 9.2, conf.level = 0.95, alternative = 'two.sided')\n\n\n    One Sample t-test\n\ndata:  x\nt = -2.5022, df = 8, p-value = 0.03682\nalternative hypothesis: true mean is not equal to 9.2\n95 percent confidence interval:\n 8.81568 9.18432\nsample estimates:\nmean of x \n        9 \n\n## two.sided(de), less, greater"
  },
  {
    "objectID": "unrefined file/r_practice/Regression Analysis.html#분포",
    "href": "unrefined file/r_practice/Regression Analysis.html#분포",
    "title": "R Notebook",
    "section": "",
    "text": "options(repr.plot.width = 15, repr.plot.height = 8)  ## 플롯 크기 설정\n\n\nx &lt;- rnorm(100) ## rnorm() / dnorm() / pnorm() / qnorm()\nhist(x)\n\n\n\n\n\ndefault는 표준정규분포이다. (n, mean = 0, sd = 1)\n\n\nx &lt;- seq(-5, 5, 0.01)\nplot(x, dnorm(x), type = 'l', lwd = 2,\n     main = \"표준정규분포의 확률밀도함수\",\n     cex.main = 1,  ## character expansion.main : title\n     cex.lab = 1)   ## character expansion.lab : label\n\n\n\n\n\npnorm(q, mean, sd) | probability, cdf\n\n\nprint(pnorm(1.96))\n\n[1] 0.9750021\n\nprint(pnorm(4, 3, 1))\n\n[1] 0.8413447\n\nprint(pnorm(4, mean = 3, sd = 1))\n\n[1] 0.8413447\n\n\n\np_value를 구할 수 없다면 백분위수(quantile value)를 구해야 한다.\n\n\nprint(qnorm(0.95))\n\n[1] 1.644854\n\nprint(qnorm(0.975))\n\n[1] 1.959964\n\nprint(qnorm(0.995))\n\n[1] 2.575829\n\n\n\n\n\n\n자유도가 중요한 분포이다. &gt; 자유도 : t분포의 모양을 결정하는 것. parameter는 아니다. 그냥 아는 값.\n\n\n표본의 분포가 아닌 표본 통계량의 분포에 해당한다.\n\n\nx &lt;- rt(1000, 3)  ## 자유도가 3인 t분포에서의 샘플 1000개\nhist(x, cex.main = 1, cex.lab = 1)\n\n\n\n\n\n원리는 정규분포와 동일하다. rt(), pt(), dt(), qt()\n\n\nt분포의 확률밀도함수(probability Density function)\n\n\nx &lt;- seq(-5, 5, 0.01)\n\nplot(x, dt(x, 3), type = 'l',\n     main = \"t분포의 확률밀도함수\")\n\n\n\n\n\n여러 개의 확률밀도함수를 같이 그려보자.\n\n\nx &lt;- seq(-5, 5, 0.01)\n\nplot(x, dnorm(x), type = 'l', main = 't분포와 정규분포의 확률밀도함수'  ## , lty = 1\n     )\n\nlines(x, dt(x, 1), col = 'red', lty = 2)\nlines(x, dt(x, 3), col = 'blue', lty = 3)\nlines(x, dt(x, 30), col = 'green', lty = 4)\n\nlegend('topleft', c('N(0,1)', 't(1)', 't(3)', 't(30)'), ## query 문법처럼 사용가능한듯.\n       lty = 1:4, col = c('black', 'red', 'blue', 'green'))\n\n\n\n\n\n자유도 n이 커질 수록 표준정규분포의 확률밀도함수와 유사해진다.\n\n\\(T\\) ~ \\(t(df), ~~~ P(T≤t)\\)\n\\(T_0\\) ~ \\(t(df), ~~~ t_a(df) : P(T &gt; t_a(df)) = a\\)\n\nprint(pt(2, 3))  ## probability distribution function\n\n[1] 0.930337\n\nprint(qt(0.95, 3))  ## quantile\n\n[1] 2.353363\n\nprint(dt(0, 3))   ## probability density function\n\n[1] 0.3675526\n\n\n\n우측검정 시, 오른쪽 영역의 확률을 알고 싶을 경우\n\nStudent T distribution practice\n\npt(1,3, lower.tail = FALSE)   ## 낮은 값의 꼬리쪽으로 산출?\n\n[1] 0.1955011\n\nqt(0.05, 3, lower.tail = FALSE) ## 오른쪽에서의 a = 0.05인 quantile 값\n\n[1] 2.353363\n\nqt(0.95, 3)\n\n[1] 2.353363\n\n\n\n\n\n\nx &lt;- rchisq(1000, 4)\nhist(x)\n\n\n\n\n\\(x &gt; 0\\) 에서의 오른쪽으로 치우쳐진 분포가 나온다.\n\nx &lt;- seq(0, 20, 0.01)\nplot(x, dchisq(x, 5), type = 'l', lwd = 2,\n     main = '자유도가 5인 카이제곱분포의 확률밀도함수',\n     cex.main = 1, cex.lab = 1)\n\n\n\n\n\nx &lt;- seq(0, 200, 0.01)\nplot(x, dchisq(x, 100), type = 'l', lwd = 2,\n     main = '자유도가 100인 카이제곱분포의 확률밀도함수')\n\n\n\n\n자유도가 높을 수록 정규분포와 비슷한 모양을 띈다.\n- 이외 코드는 위와 유사하다…(t분포)\n\npchisq(100, 100)\n\n[1] 0.5188083\n\nqchisq(0.95, 100)\n\n[1] 124.3421\n\ndchisq(50, 50)\n\n[1] 0.03976148\n\n\n\n\n\n\nx &lt;- rf(1000, 4, 6)  ## n=100, 분자의 자유도(df1) = 4, 분모의 자유도(df2) = 6\nhist(x, breaks = 50)\n\n\n\n\n\nx &lt;- seq(0, 15, 0.01)\nplot(x, df(x, 4, 6), type = 'l', lwd = 2,\n     main = \"F분포의 확률밀도함수\")\nlines(x, df(x, 6, 4), col = 'red')\n\nlegend(\"topright\", c(\"F(4,6)\", \"F(6,4)\"), lty = 1:2, col = c('black', 'red'))\n\n\n\n\n\n활용 방법은 비슷하다.\n\n\nqf(0.95, 4, 6)\n\n[1] 4.533677"
  },
  {
    "objectID": "unrefined file/r_practice/Regression Analysis.html#신뢰구간",
    "href": "unrefined file/r_practice/Regression Analysis.html#신뢰구간",
    "title": "R Notebook",
    "section": "",
    "text": "예제) 비누공장데이터 : 9.0, 9.1, 8.8, 9.1, 9.0, 9.4, 9.2, 8.8, 8.6 (n=9)\n\n\nx &lt;- c(9.0, 9.1, 8.8, 9.1, 9.0, 9.4, 9.2, 8.8, 8.6)\n\nbar_x = mean(x); bar_x\n\n[1] 9\n\nS_x = var(x); S_x\n\n[1] 0.0575\n\ns_x = sd(x); s_x\n\n[1] 0.2397916\n\n\n\nlower_x = bar_x - qt(0.975, 8)*s_x/sqrt(9)  ## 자료의 수가 9이므로 자유도 8인 t분포\nupper_x = bar_x + qt(0.975, 8)*s_x/sqrt(9)\n\nc(lower_x, upper_x)\n\n[1] 8.81568 9.18432\n\n\n\n95% 신뢰구간이다.\nquantile 값이 0.975면 우측 확률이 0.025인 t_a와 같으니까…\n\n\n\n\nls(t.test(x))\n\n [1] \"alternative\" \"conf.int\"    \"data.name\"   \"estimate\"    \"method\"     \n [6] \"null.value\"  \"p.value\"     \"parameter\"   \"statistic\"   \"stderr\"     \n\n\n\nt.test(x)$conf.int  ## 해당 모듈의 하위 모듈인 conf.int : 신뢰구간 산출\n\n[1] 8.81568 9.18432\nattr(,\"conf.level\")\n[1] 0.95\n\n\n\nt.test(x, conf.level = 0.99)$conf.int ## 99% 신뢰구간, 디폴트는 95%\n\n[1] 8.731802 9.268198\nattr(,\"conf.level\")\n[1] 0.99"
  },
  {
    "objectID": "unrefined file/r_practice/Regression Analysis.html#가설검정",
    "href": "unrefined file/r_practice/Regression Analysis.html#가설검정",
    "title": "R Notebook",
    "section": "",
    "text": "예제) 공정온도에서의 제품의 강도(\\(N(73.7, 1)\\))\n\n두 가지 방법 : \\(p-value\\)와 \\(\\alpha\\)값 비교, 기각역과 관측값 비교\n\n가설 : \\(H_0 : \\mu = 73.7 ~ vs. ~ H_1 :\\mu &gt; 73.7\\)\n\n\\(\\bar{x} = 75.1, ~ n = 16, ~ \\alpha = 0.05\\)\n\nmu &lt;- 73.7; xbar &lt;- 75.1; sigma &lt;- 1; n &lt;- 16\n\n\n검정통계량의 관측값 : \\(z_0 = \\frac{\\bar{x} - \\mu_0}{\\frac{\\sigma}{n}}\\)\n\n\nz_0 &lt;- (xbar - mu)/(sigma/sqrt(n)); z_0\n\n[1] 5.6\n\n\n\n기각역\n\n\nqnorm(0.95)\n\n[1] 1.644854\n\n\n\n기각역보다 검정통계량의 관측값이 휠씬 크므로 귀무가설 기각 가능\n\n\n\n\n\n예제 2\n\n\nmu &lt;- 2; x_bar &lt;- 1.96; s &lt;- 0.05; n &lt;- 50\n\n\nt_0 &lt;- (x_bar - mu)/(s/sqrt(50)); t_0\n\n[1] -5.656854\n\n\n\n기각역\n\n\n-qt(0.95, n - 1)\n\n[1] -1.676551\n\n\n\n유의확률(p-value)\n\n\npt(t_0, n-1)\n\n[1] 3.93525e-07\n\n\n\n\n\n\n예제) 일전의 비누공장 데이터, 모분산은 알리가 없음.\n\n\n가설 : \\(H_0 : \\mu = 9.2 ~ vs. ~ H_1 : \\mu ≠ 9.2\\)\n\n\nx &lt;- c(9.0, 9.1, 8.8, 9.1, 9.0, 9.4, 9.2, 8.8, 8.6)\nxbar = mean(x)\nS_x = var(x)  ## r은 데이터 분석 툴이기 때문에 기본적으로 n-1로 나누어준다.\ns_x = sd(x)\n\n\n유의수준 \\(\\alpha = 0.05\\)\n검정통계량의 관측값 : \\(t_0 = \\frac{}{}, \\alpha = 0.05\\)\n\n\nt_0 &lt;- (xbar - 9.2)/(s_x/sqrt(9)); t_0\n\n[1] -2.502173\n\n\n\n기각역\n\n\nqt(0.975, 9-1)\n\n[1] 2.306004\n\n\n\n유의확률(p-balue)\n\n\npt(t_0, 8) + pt(-t_0, 8, lower.tail = FALSE)\n\n[1] 0.03681717\n\n\n\nt.test()\n\n\nt.test(x)\n\n\n    One Sample t-test\n\ndata:  x\nt = 112.6, df = 8, p-value = 4.325e-14\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n 8.81568 9.18432\nsample estimates:\nmean of x \n        9 \n\n\n\ndefault는 \\(\\mu = 0\\)이기 때문에 귀무가설을 입력해줘햐 한다.\n\n6.1\n\nt.test(x, mu = 9.2, conf.level = 0.95, alternative = 'two.sided')\n\n\n    One Sample t-test\n\ndata:  x\nt = -2.5022, df = 8, p-value = 0.03682\nalternative hypothesis: true mean is not equal to 9.2\n95 percent confidence interval:\n 8.81568 9.18432\nsample estimates:\nmean of x \n        9 \n\n## two.sided(de), less, greater"
  },
  {
    "objectID": "unrefined file/datavisuallization/강신성(202014107)_5.html",
    "href": "unrefined file/datavisuallization/강신성(202014107)_5.html",
    "title": "1. 사전작업",
    "section": "",
    "text": "숙제 | mpg데이터를 이용하여 아래와 같은 그림을 그려라.\n\n라이브러리 설치\n\n\n#!pip install plotnine\n\n\nimport pandas as pd\nimport numpy as np\n\nfrom plotnine import *\nimport plotnine\n\n\nfigure 사이즈 설정\n\n\nplotnine.options.dpi= 150\nplotnine.options.figure_size = (6, 5)\n\n\n데이터 가져오기\n\n\ndf = pd.read_csv('https://raw.githubusercontent.com/guebin/DV2022/master/posts/mpg.csv')\ndf.head()\n\n\n  \n    \n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n\n2. 데이터 전처리\n\nmpg = df.assign(cyl_cut = pd.cut(df.cyl, bins = 2))   ## cyl : 실린더 수에 해당하는 열을 두 층으로 분해한다.\nmpg.head()\n\n\n  \n    \n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\ncyl_cut\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n(3.996, 6.0]\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n(3.996, 6.0]\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n(3.996, 6.0]\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n(3.996, 6.0]\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n(3.996, 6.0]\n\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n\n필요한 자료는 cyl, displ, cty이다.\n\n\nx축에 displ, y축에 cty, 그리고 cyl을 두 구간으로 나눈 cyl_cut을 두 색상으로 구분하여 산출하여야 한다.\n\n\n\n3. 그래프 산출\n\nfig = ggplot(mpg)\npoint = geom_point(aes(x = 'displ', y = 'cty', color = 'cyl_cut'))\nsmooth = geom_smooth(aes(x = 'displ', y = 'cty', color = 'cyl_cut'))\n\n\n따라서 아래와 같은 결과를 산출시킨다.\n\n\nfig + point + smooth\n\n/usr/local/lib/python3.10/dist-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n/usr/local/lib/python3.10/dist-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n\n\n\n\n\n&lt;Figure Size: (900 x 750)&gt;"
  },
  {
    "objectID": "unrefined file/datavisuallization/강신성(202014107)_3.html",
    "href": "unrefined file/datavisuallization/강신성(202014107)_3.html",
    "title": "분할된 그래프 그리기",
    "section": "",
    "text": "1. 사전작업\n\n라이브러리 설치\n\n\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport matplotlib\n\n\n그래프 사이즈 및 dpi 설정\n\n\nmatplotlib.rcParams['figure.figsize'] = (3, 2)\nmatplotlib.rcParams['figure.dpi'] = 75\n\n2. x와 y값 입력\n\nx, y = [1,2,3,4], [1,2,4,3]\n\n3. 객체 설정 및 그래프 산출\n\nfig, ((ax1, ax2, ax3),(ax4, ax5, ax6)) = plt.subplots(2,3, figsize = (5,3.5)) ## fig, axes 지정\nax1.plot(x, y, 'or')  ## ax1, marker = 'o', color = 'red'\nax2.plot(x, y, 'og')\nax3.plot(x, y, 'ob')\nax4.plot(x, y, '--or')  ## ax4, marker = 'o', linetype = '--', color = 'red'\nax5.plot(x, y, '--og')\nax6.plot(x, y, '--ob')\n\nfig.tight_layout()\n\n\n\n\n\n%%shell\njupyter nbconvert --to html /content/강신성_데이터시각화_02wk_1_hw.ipynb ## &lt;- file derectory\n\n[NbConvertApp] Converting notebook /content/강신성_데이터시각화_02wk_1_hw.ipynb to html\n[NbConvertApp] Writing 597400 bytes to /content/강신성_데이터시각화_02wk_1_hw.html"
  },
  {
    "objectID": "unrefined file/datavisuallization/강신성(202014107)_1.html",
    "href": "unrefined file/datavisuallization/강신성(202014107)_1.html",
    "title": "RiverFlow",
    "section": "",
    "text": "라이브러리 설치\n\n\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport cv2\n\n\n파일 불러오기 및 행렬로 저장\n\n\n!wget https://raw.githubusercontent.com/guebin/2021DV/master/_notebooks/hw_img.png\nimg = cv2.imread(\"hw_img.png\")\n!rm hw_img.png\n\n--2023-09-04 11:31:23--  https://raw.githubusercontent.com/guebin/2021DV/master/_notebooks/hw_img.png\nResolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.108.133, 185.199.109.133, 185.199.110.133, ...\nConnecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.108.133|:443... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 120618 (118K) [image/png]\nSaving to: ‘hw_img.png’\n\nhw_img.png          100%[===================&gt;] 117.79K  --.-KB/s    in 0.003s  \n\n2023-09-04 11:31:23 (45.8 MB/s) - ‘hw_img.png’ saved [120618/120618]\n\n\n\n\nplt.imshow(img);\n\n\n\n\n\nimg.shape\n\n(531, 468, 3)\n\n\n\n색상별 행렬 재분류 및 명도 변환\n\n\nr = img[:,:,0]\ng = img[:,:,1]\nb = img[:,:,2]\n\n\nrr = cv2.equalizeHist(r)\ngg = cv2.equalizeHist(g)\nbb = cv2.equalizeHist(b)\n\n\nimg_equalized = np.stack([rr,gg,bb], axis = -1)\n\n\n결과값 출력 및 비교\n\n\nplt.imshow(img_equalized);\n\n\n\n\n\nplt.imshow(np.concatenate([img, img_equalized], axis = 1));"
  },
  {
    "objectID": "unrefined file/datavisuallization/learning materials/강신성_0925.html",
    "href": "unrefined file/datavisuallization/learning materials/강신성_0925.html",
    "title": "1. import",
    "section": "",
    "text": "오늘 한 내용은 왠만해선 다 알아두는 게 좋다.\nimport pandas as pd\nimport numpy as np\ndf = pd.DataFrame(np.random.randn(3, 2))\ndf\n\n\n  \n    \n\n\n\n\n\n\n0\n1\n\n\n\n\n0\n1.715680\n0.327035\n\n\n1\n-0.931626\n0.472884\n\n\n2\n1.902886\n-1.643391"
  },
  {
    "objectID": "unrefined file/datavisuallization/learning materials/강신성_0925.html#pandas-기본기능",
    "href": "unrefined file/datavisuallization/learning materials/강신성_0925.html#pandas-기본기능",
    "title": "1. import",
    "section": "2. Pandas 기본기능",
    "text": "2. Pandas 기본기능\n\nA. 열의 이름 변경\n- df.columns에 대입\n\ndf.columns = ['A', 'B']\ndf\n\n\n  \n    \n\n\n\n\n\n\nA\nB\n\n\n\n\n0\n-1.079852\n-0.637533\n\n\n1\n0.759506\n0.237517\n\n\n2\n-0.871811\n-0.325153\n\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n- df.set_axis()\n\ndf2 = pd.DataFrame(np.random.randn(5,3))\ndf2\n\n\n  \n    \n\n\n\n\n\n\n0\n1\n2\n\n\n\n\n0\n-0.639476\n0.154820\n-1.142040\n\n\n1\n1.092790\n-0.140529\n1.749416\n\n\n2\n0.497990\n1.006000\n0.133886\n\n\n3\n0.800762\n0.915722\n1.447229\n\n\n4\n-0.470032\n-0.545448\n-0.318221\n\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n\ndf2 = df2.set_axis(['A','B','C'], axis = 1)\ndf2\n\n\n  \n    \n\n\n\n\n\n\nA\nB\nC\n\n\n\n\n0\n-0.639476\n0.154820\n-1.142040\n\n\n1\n1.092790\n-0.140529\n1.749416\n\n\n2\n0.497990\n1.006000\n0.133886\n\n\n3\n0.800762\n0.915722\n1.447229\n\n\n4\n-0.470032\n-0.545448\n-0.318221\n\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n\ndf2.set_axis(['a','b','c','d','e'], axis = 0)\n\n\n  \n    \n\n\n\n\n\n\n0\n1\n2\n\n\n\n\na\n-0.639476\n0.154820\n-1.142040\n\n\nb\n1.092790\n-0.140529\n1.749416\n\n\nc\n0.497990\n1.006000\n0.133886\n\n\nd\n0.800762\n0.915722\n1.447229\n\n\ne\n-0.470032\n-0.545448\n-0.318221\n\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n- df.rename()\n\ndf3 = pd.DataFrame(np.random.randn(5,3))\ndf3\n\n\n  \n    \n\n\n\n\n\n\n0\n1\n2\n\n\n\n\n0\n-0.237318\n-0.851183\n0.322254\n\n\n1\n0.983012\n0.249586\n-0.951911\n\n\n2\n0.712327\n1.049104\n-1.998271\n\n\n3\n-0.440946\n-0.162180\n-0.742113\n\n\n4\n-0.454311\n-0.398484\n-1.972987\n\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n\ndf3.rename({0 : 'A'}, axis = 1) ## dictionary 형태로 지정\n\n\n  \n    \n\n\n\n\n\n\nA\n1\n2\n\n\n\n\n0\n-0.237318\n-0.851183\n0.322254\n\n\n1\n0.983012\n0.249586\n-0.951911\n\n\n2\n0.712327\n1.049104\n-1.998271\n\n\n3\n-0.440946\n-0.162180\n-0.742113\n\n\n4\n-0.454311\n-0.398484\n-1.972987\n\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n\ndf3.rename(columns = {0 : 'A'})\n\n\n  \n    \n\n\n\n\n\n\nA\n1\n2\n\n\n\n\n0\n0.530369\n-0.136149\n1.122968\n\n\n1\n1.247519\n0.814793\n0.142766\n\n\n2\n0.114050\n-0.821587\n0.920281\n\n\n3\n0.459944\n0.811753\n1.373191\n\n\n4\n-1.138097\n0.232429\n-0.936851\n\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n\n\nB. 행의 이름 변경\n- df.index에 대입\n\ndf = pd.DataFrame(np.random.randn(2,3))\ndf\n\n\n  \n    \n\n\n\n\n\n\n0\n1\n2\n\n\n\n\n0\n0.528203\n-1.687762\n-0.459782\n\n\n1\n0.224143\n-1.367343\n1.092839\n\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n\ndf.index = [1, 2]\ndf\n\n\n  \n    \n\n\n\n\n\n\n0\n1\n2\n\n\n\n\n1\n0.528203\n-1.687762\n-0.459782\n\n\n2\n0.224143\n-1.367343\n1.092839\n\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n- df.set_axis()\n\ndf = pd.DataFrame(np.random.randn(2,3))\ndf\n\n\n  \n    \n\n\n\n\n\n\n0\n1\n2\n\n\n\n\n0\n-0.454264\n-0.475760\n-0.237963\n\n\n1\n-1.744315\n-1.026659\n1.071473\n\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n\ndf.set_axis(['1','2'], axis = 0)\n\n\n  \n    \n\n\n\n\n\n\n0\n1\n2\n\n\n\n\n1\n-0.454264\n-0.475760\n-0.237963\n\n\n2\n-1.744315\n-1.026659\n1.071473\n\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n- df.rename()\n\ndf = pd.DataFrame(np.random.randn(2,3))\ndf\n\n\n  \n    \n\n\n\n\n\n\n0\n1\n2\n\n\n\n\n0\n-0.051285\n1.185885\n0.841335\n\n\n1\n0.118555\n1.527457\n0.544870\n\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n\ndf.rename({0 : 'A'}, axis = 0)    ## default = 0\n\n\n  \n    \n\n\n\n\n\n\n0\n1\n2\n\n\n\n\nA\n-0.051285\n1.185885\n0.841335\n\n\n1\n0.118555\n1.527457\n0.544870\n\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n- 임의의 열을 행이름으로 지정 | 이미 있던 열 하나를 인덱스로 잡고 싶을 시\n\ndf = pd.DataFrame({'id':['2020-43052','2021-43053'], 'X1':[1,2],'X2':[2,3]})\ndf\n\n\n  \n    \n\n\n\n\n\n\nid\nX1\nX2\n\n\n\n\n0\n2020-43052\n1\n2\n\n\n1\n2021-43053\n2\n3\n\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n\ndf.set_index('id')\n\n\n  \n    \n\n\n\n\n\n\nX1\nX2\n\n\nid\n\n\n\n\n\n\n2020-43052\n1\n2\n\n\n2021-43053\n2\n3"
  },
  {
    "objectID": "unrefined file/datavisuallization/learning materials/강신성_0925.html#ab에-대한-연습문제",
    "href": "unrefined file/datavisuallization/learning materials/강신성_0925.html#ab에-대한-연습문제",
    "title": "1. import",
    "section": "# A~B에 대한 연습문제",
    "text": "# A~B에 대한 연습문제\n- 데이터 load\n\ndf = pd.read_csv('https://raw.githubusercontent.com/guebin/DV2022/master/posts/FIFA23_official_data.csv')\ndf.head()\n\n\n  \n    \n\n\n\n\n\n\nID\nName\nAge\nPhoto\nNationality\nFlag\nOverall\nPotential\nClub\nClub Logo\n...\nReal Face\nPosition\nJoined\nLoaned From\nContract Valid Until\nHeight\nWeight\nRelease Clause\nKit Number\nBest Overall Rating\n\n\n\n\n0\n209658\nL. Goretzka\n27\nhttps://cdn.sofifa.net/players/209/658/23_60.png\nGermany\nhttps://cdn.sofifa.net/flags/de.png\n87\n88\nFC Bayern München\nhttps://cdn.sofifa.net/teams/21/30.png\n...\nYes\n&lt;span class=\"pos pos28\"&gt;SUB\nJul 1, 2018\nNaN\n2026\n189cm\n82kg\n€157M\n8.0\nNaN\n\n\n1\n212198\nBruno Fernandes\n27\nhttps://cdn.sofifa.net/players/212/198/23_60.png\nPortugal\nhttps://cdn.sofifa.net/flags/pt.png\n86\n87\nManchester United\nhttps://cdn.sofifa.net/teams/11/30.png\n...\nYes\n&lt;span class=\"pos pos15\"&gt;LCM\nJan 30, 2020\nNaN\n2026\n179cm\n69kg\n€155M\n8.0\nNaN\n\n\n2\n224334\nM. Acuña\n30\nhttps://cdn.sofifa.net/players/224/334/23_60.png\nArgentina\nhttps://cdn.sofifa.net/flags/ar.png\n85\n85\nSevilla FC\nhttps://cdn.sofifa.net/teams/481/30.png\n...\nNo\n&lt;span class=\"pos pos7\"&gt;LB\nSep 14, 2020\nNaN\n2024\n172cm\n69kg\n€97.7M\n19.0\nNaN\n\n\n3\n192985\nK. De Bruyne\n31\nhttps://cdn.sofifa.net/players/192/985/23_60.png\nBelgium\nhttps://cdn.sofifa.net/flags/be.png\n91\n91\nManchester City\nhttps://cdn.sofifa.net/teams/10/30.png\n...\nYes\n&lt;span class=\"pos pos13\"&gt;RCM\nAug 30, 2015\nNaN\n2025\n181cm\n70kg\n€198.9M\n17.0\nNaN\n\n\n4\n224232\nN. Barella\n25\nhttps://cdn.sofifa.net/players/224/232/23_60.png\nItaly\nhttps://cdn.sofifa.net/flags/it.png\n86\n89\nInter\nhttps://cdn.sofifa.net/teams/44/30.png\n...\nYes\n&lt;span class=\"pos pos13\"&gt;RCM\nSep 1, 2020\nNaN\n2026\n172cm\n68kg\n€154.4M\n23.0\nNaN\n\n\n\n\n\n5 rows × 29 columns\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n# 예제1: 열의 이름 출력하고, 열의 이름중 공백()이 있을 경우 언더바(_) 로 바꾸자.\n\ndf.columns\n\nIndex(['ID', 'Name', 'Age', 'Photo', 'Nationality', 'Flag', 'Overall',\n       'Potential', 'Club', 'Club Logo', 'Value', 'Wage', 'Special',\n       'Preferred Foot', 'International Reputation', 'Weak Foot',\n       'Skill Moves', 'Work Rate', 'Body Type', 'Real Face', 'Position',\n       'Joined', 'Loaned From', 'Contract Valid Until', 'Height', 'Weight',\n       'Release Clause', 'Kit Number', 'Best Overall Rating'],\n      dtype='object')\n\n\n- 1. df.columns에 직접 대입\n\n[i.replace(' ', '_') for i in df.columns] ## str.replace(,)특정 문자열을 특정 문자열로 바꾸는 함수\n\n['ID',\n 'Name',\n 'Age',\n 'Photo',\n 'Nationality',\n 'Flag',\n 'Overall',\n 'Potential',\n 'Club',\n 'Club_Logo',\n 'Value',\n 'Wage',\n 'Special',\n 'Preferred_Foot',\n 'International_Reputation',\n 'Weak_Foot',\n 'Skill_Moves',\n 'Work_Rate',\n 'Body_Type',\n 'Real_Face',\n 'Position',\n 'Joined',\n 'Loaned_From',\n 'Contract_Valid_Until',\n 'Height',\n 'Weight',\n 'Release_Clause',\n 'Kit_Number',\n 'Best_Overall_Rating']\n\n\n\ntemp = df\ntemp.columns = [i.replace(' ', '_') for i in df.columns]\n\n\ntemp.columns\n\nIndex(['ID', 'Name', 'Age', 'Photo', 'Nationality', 'Flag', 'Overall',\n       'Potential', 'Club', 'Club_Logo', 'Value', 'Wage', 'Special',\n       'Preferred_Foot', 'International_Reputation', 'Weak_Foot',\n       'Skill_Moves', 'Work_Rate', 'Body_Type', 'Real_Face', 'Position',\n       'Joined', 'Loaned_From', 'Contract_Valid_Until', 'Height', 'Weight',\n       'Release_Clause', 'Kit_Number', 'Best_Overall_Rating'],\n      dtype='object')\n\n\n- 2. set_axis() 이용\n\ntemp2 = [s.replace()]\n\n- 3. rename() 이용(안중요함)\n\ntemp3 = df\n\ndic = {i:i.replace(' ','_') for i in df.columns}\ntemp3.rename(dic, axis = 1).columns\n\nIndex(['ID', 'Name', 'Age', 'Photo', 'Nationality', 'Flag', 'Overall',\n       'Potential', 'Club', 'Club_Logo', 'Value', 'Wage', 'Special',\n       'Preferred_Foot', 'International_Reputation', 'Weak_Foot',\n       'Skill_Moves', 'Work_Rate', 'Body_Type', 'Real_Face', 'Position',\n       'Joined', 'Loaned_From', 'Contract_Valid_Until', 'Height', 'Weight',\n       'Release_Clause', 'Kit_Number', 'Best_Overall_Rating'],\n      dtype='object')\n\n\n예제2: ID를 row-index로 지정하라.\n\ndf.columns\n\nIndex(['ID', 'Name', 'Age', 'Photo', 'Nationality', 'Flag', 'Overall',\n       'Potential', 'Club', 'Club Logo', 'Value', 'Wage', 'Special',\n       'Preferred Foot', 'International Reputation', 'Weak Foot',\n       'Skill Moves', 'Work Rate', 'Body Type', 'Real Face', 'Position',\n       'Joined', 'Loaned From', 'Contract Valid Until', 'Height', 'Weight',\n       'Release Clause', 'Kit Number', 'Best Overall Rating'],\n      dtype='object')\n\n\n\n직접지정\n\n\ndf2 = df\ndf2.index = df.ID\ndf2.index\n\nInt64Index([209658, 212198, 224334, 192985, 224232, 212622, 197445, 187961,\n            208333, 210514,\n            ...\n            256879, 269546, 267647, 253186, 267461, 269526, 267946, 270567,\n            256624, 256376],\n           dtype='int64', name='ID', length=17660)\n\n\n\nset_axis()\n\n\ndf3 = df\ndf3 = df3.set_axis(df.ID)   ## default : axis = 0\ndf3.index\n\nInt64Index([209658, 212198, 224334, 192985, 224232, 212622, 197445, 187961,\n            208333, 210514,\n            ...\n            256879, 269546, 267647, 253186, 267461, 269526, 267946, 270567,\n            256624, 256376],\n           dtype='int64', name='ID', length=17660)\n\n\n\ndf4 = df\ndf4 = df4.set_index('ID')\ndf4.index\n\nInt64Index([209658, 212198, 224334, 192985, 224232, 212622, 197445, 187961,\n            208333, 210514,\n            ...\n            256879, 269546, 267647, 253186, 267461, 269526, 267946, 270567,\n            256624, 256376],\n           dtype='int64', name='ID', length=17660)\n\n\n\nC. pd.T\n- df.T를 이용하여 데이터를 살피면 편리함\n\ndf.T.loc[:,:3]\n\n\n  \n    \n\n\n\n\n\n\n0\n1\n2\n3\n\n\n\n\nID\n209658\n212198\n224334\n192985\n\n\nName\nL. Goretzka\nBruno Fernandes\nM. Acuña\nK. De Bruyne\n\n\nAge\n27\n27\n30\n31\n\n\nPhoto\nhttps://cdn.sofifa.net/players/209/658/23_60.png\nhttps://cdn.sofifa.net/players/212/198/23_60.png\nhttps://cdn.sofifa.net/players/224/334/23_60.png\nhttps://cdn.sofifa.net/players/192/985/23_60.png\n\n\nNationality\nGermany\nPortugal\nArgentina\nBelgium\n\n\nFlag\nhttps://cdn.sofifa.net/flags/de.png\nhttps://cdn.sofifa.net/flags/pt.png\nhttps://cdn.sofifa.net/flags/ar.png\nhttps://cdn.sofifa.net/flags/be.png\n\n\nOverall\n87\n86\n85\n91\n\n\nPotential\n88\n87\n85\n91\n\n\nClub\nFC Bayern München\nManchester United\nSevilla FC\nManchester City\n\n\nClub Logo\nhttps://cdn.sofifa.net/teams/21/30.png\nhttps://cdn.sofifa.net/teams/11/30.png\nhttps://cdn.sofifa.net/teams/481/30.png\nhttps://cdn.sofifa.net/teams/10/30.png\n\n\nValue\n€91M\n€78.5M\n€46.5M\n€107.5M\n\n\nWage\n€115K\n€190K\n€46K\n€350K\n\n\nSpecial\n2312\n2305\n2303\n2303\n\n\nPreferred Foot\nRight\nRight\nLeft\nRight\n\n\nInternational Reputation\n4.0\n3.0\n2.0\n4.0\n\n\nWeak Foot\n4.0\n3.0\n3.0\n5.0\n\n\nSkill Moves\n3.0\n4.0\n3.0\n4.0\n\n\nWork Rate\nHigh/ Medium\nHigh/ High\nHigh/ High\nHigh/ High\n\n\nBody Type\nUnique\nUnique\nStocky (170-185)\nUnique\n\n\nReal Face\nYes\nYes\nNo\nYes\n\n\nPosition\n&lt;span class=\"pos pos28\"&gt;SUB\n&lt;span class=\"pos pos15\"&gt;LCM\n&lt;span class=\"pos pos7\"&gt;LB\n&lt;span class=\"pos pos13\"&gt;RCM\n\n\nJoined\nJul 1, 2018\nJan 30, 2020\nSep 14, 2020\nAug 30, 2015\n\n\nLoaned From\nNaN\nNaN\nNaN\nNaN\n\n\nContract Valid Until\n2026\n2026\n2024\n2025\n\n\nHeight\n189cm\n179cm\n172cm\n181cm\n\n\nWeight\n82kg\n69kg\n69kg\n70kg\n\n\nRelease Clause\n€157M\n€155M\n€97.7M\n€198.9M\n\n\nKit Number\n8.0\n8.0\n19.0\n17.0\n\n\nBest Overall Rating\nNaN\nNaN\nNaN\nNaN\n\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n- 출력옵션 조정\n\npd.options.display.max_rows = 10\ndisplay(df.T.iloc[:, :3])\npd.reset_option('display.max_rows')   ## 디폴트 옵션으로 변경\n\n\n  \n    \n\n\n\n\n\n\n0\n1\n2\n\n\n\n\nID\n209658\n212198\n224334\n\n\nName\nL. Goretzka\nBruno Fernandes\nM. Acuña\n\n\nAge\n27\n27\n30\n\n\nPhoto\nhttps://cdn.sofifa.net/players/209/658/23_60.png\nhttps://cdn.sofifa.net/players/212/198/23_60.png\nhttps://cdn.sofifa.net/players/224/334/23_60.png\n\n\nNationality\nGermany\nPortugal\nArgentina\n\n\n...\n...\n...\n...\n\n\nHeight\n189cm\n179cm\n172cm\n\n\nWeight\n82kg\n69kg\n69kg\n\n\nRelease Clause\n€157M\n€155M\n€97.7M\n\n\nKit Number\n8.0\n8.0\n19.0\n\n\nBest Overall Rating\nNaN\nNaN\nNaN\n\n\n\n\n\n29 rows × 3 columns\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n\n여기선 설명을 위해 줄이는 옵션을 사용했지만, 보통은 늘려서 사용함.\n\n\n\nD. df.dtypes, s,dtype\n- df.dtypes\n\ndf.dtypes\n\nID                            int64\nName                         object\nAge                           int64\nPhoto                        object\nNationality                  object\nFlag                         object\nOverall                       int64\nPotential                     int64\nClub                         object\nClub Logo                    object\nValue                        object\nWage                         object\nSpecial                       int64\nPreferred Foot               object\nInternational Reputation    float64\nWeak Foot                   float64\nSkill Moves                 float64\nWork Rate                    object\nBody Type                    object\nReal Face                    object\nPosition                     object\nJoined                       object\nLoaned From                  object\nContract Valid Until         object\nHeight                       object\nWeight                       object\nRelease Clause               object\nKit Number                  float64\nBest Overall Rating          object\ndtype: object\n\n\n\nobject : string이라고 생각해도 무방. 범주형 자료.\n\n- s.dtype Series에 붙여 사용\n\ndf.Name.dtype   ## 한 행의 데이터 타입만을 산출\n\ndtype('O')\n\n\n\ndf.Name.dtype == np.object_\n\nTrue\n\n\n\ndf.Age.dtype == np.int64\n\nTrue\n\n\n\ndf['International Reputation'].dtype == np.float64\n\nTrue\n\n\n# 예제: df에서 int64 자료형만 출력\n(풀이 1) 직접 뽑음\n\npd.Series(list(df.dtypes))\n\n0       int64\n1      object\n2       int64\n3      object\n4      object\n5      object\n6       int64\n7       int64\n8      object\n9      object\n10     object\n11     object\n12      int64\n13     object\n14    float64\n15    float64\n16    float64\n17     object\n18     object\n19     object\n20     object\n21     object\n22     object\n23     object\n24     object\n25     object\n26     object\n27    float64\n28     object\ndtype: object\n\n\n\ndf.iloc[:, [0,2,6,7,12]]\n\n\n  \n    \n\n\n\n\n\n\nID\nAge\nOverall\nPotential\nSpecial\n\n\n\n\n0\n209658\n27\n87\n88\n2312\n\n\n1\n212198\n27\n86\n87\n2305\n\n\n2\n224334\n30\n85\n85\n2303\n\n\n3\n192985\n31\n91\n91\n2303\n\n\n4\n224232\n25\n86\n89\n2296\n\n\n...\n...\n...\n...\n...\n...\n\n\n17655\n269526\n19\n48\n61\n762\n\n\n17656\n267946\n17\n48\n64\n761\n\n\n17657\n270567\n25\n51\n56\n759\n\n\n17658\n256624\n18\n50\n65\n758\n\n\n17659\n256376\n20\n50\n61\n749\n\n\n\n\n\n17660 rows × 5 columns\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n(풀이 2) 리스트 컴프리핸션 이용\n\ndf.loc[:, [o == np.int64 for o in df.dtypes]]\n\n\n  \n    \n\n\n\n\n\n\nID\nAge\nOverall\nPotential\nSpecial\n\n\n\n\n0\n209658\n27\n87\n88\n2312\n\n\n1\n212198\n27\n86\n87\n2305\n\n\n2\n224334\n30\n85\n85\n2303\n\n\n3\n192985\n31\n91\n91\n2303\n\n\n4\n224232\n25\n86\n89\n2296\n\n\n...\n...\n...\n...\n...\n...\n\n\n17655\n269526\n19\n48\n61\n762\n\n\n17656\n267946\n17\n48\n64\n761\n\n\n17657\n270567\n25\n51\n56\n759\n\n\n17658\n256624\n18\n50\n65\n758\n\n\n17659\n256376\n20\n50\n61\n749\n\n\n\n\n\n17660 rows × 5 columns\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n\n\nE. df.sort_values()\n- 순서대로 정렬\n\ndf.sort_values('Age')   ## 오름차순 정렬\n\n\n  \n    \n\n\n\n\n\n\nID\nName\nAge\nPhoto\nNationality\nFlag\nOverall\nPotential\nClub\nClub Logo\n...\nReal Face\nPosition\nJoined\nLoaned From\nContract Valid Until\nHeight\nWeight\nRelease Clause\nKit Number\nBest Overall Rating\n\n\n\n\n17636\n263636\n22 D. Oncescu\n15\nhttps://cdn.sofifa.net/players/263/636/22_60.png\nRomania\nhttps://cdn.sofifa.net/flags/ro.png\n50\n72\nFC Dinamo 1948 Bucureşti\nhttps://cdn.sofifa.net/teams/100757/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJun 1, 2021\nNaN\n2025\n190cm\n77kg\n€306K\n34.0\nNaN\n\n\n13712\n271072\nE. Topcu\n16\nhttps://cdn.sofifa.net/players/271/072/23_60.png\nRepublic of Ireland\nhttps://cdn.sofifa.net/flags/ie.png\n48\n58\nDrogheda United\nhttps://cdn.sofifa.net/teams/1572/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJul 8, 2022\nNaN\n2022\n183cm\n65kg\n€175K\n20.0\nNaN\n\n\n13078\n259442\n22 R. van den Berg\n16\nhttps://cdn.sofifa.net/players/259/442/22_60.png\nNetherlands\nhttps://cdn.sofifa.net/flags/nl.png\n60\n81\nPEC Zwolle\nhttps://cdn.sofifa.net/teams/1914/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nMay 24, 2020\nNaN\n2024\n190cm\n73kg\n€1.8M\n33.0\nNaN\n\n\n11257\n266205\n22 Y. Koré\n16\nhttps://cdn.sofifa.net/players/266/205/22_60.png\nFrance\nhttps://cdn.sofifa.net/flags/fr.png\n59\n74\nParis FC\nhttps://cdn.sofifa.net/teams/111817/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nAug 11, 2022\nNaN\n2025\n187cm\n75kg\n€1.1M\n34.0\nNaN\n\n\n11278\n261873\n21 H. Kumagai\n16\nhttps://cdn.sofifa.net/players/261/873/21_60.png\nJapan\nhttps://cdn.sofifa.net/flags/jp.png\n52\n70\nVegalta Sendai\nhttps://cdn.sofifa.net/teams/112836/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nApr 16, 2021\nNaN\n2023\n174cm\n64kg\n€375K\n48.0\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n16311\n254196\n21 L. Fernández\n42\nhttps://cdn.sofifa.net/players/254/196/21_60.png\nColombia\nhttps://cdn.sofifa.net/flags/co.png\n61\n61\nSociedad Deportiva Aucas\nhttps://cdn.sofifa.net/teams/110987/30.png\n...\nNo\n&lt;span class=\"pos pos28\"&gt;SUB\nJan 29, 2018\nNaN\n2024\n187cm\n82kg\n€75K\n1.0\nNaN\n\n\n16036\n216692\nS. Torrico\n42\nhttps://cdn.sofifa.net/players/216/692/23_60.png\nArgentina\nhttps://cdn.sofifa.net/flags/ar.png\n72\n72\nSan Lorenzo de Almagro\nhttps://cdn.sofifa.net/teams/1013/30.png\n...\nNo\n&lt;span class=\"pos pos0\"&gt;GK\nApr 25, 2013\nNaN\n2022\n183cm\n84kg\n€375K\n12.0\nNaN\n\n\n17257\n645\n17 D. Andersson\n43\nhttps://cdn.sofifa.net/players/000/645/17_60.png\nSweden\nhttps://cdn.sofifa.net/flags/se.png\n57\n57\nHelsingborgs IF\nhttps://cdn.sofifa.net/teams/432/30.png\n...\nNo\n&lt;span class=\"pos pos28\"&gt;SUB\nApr 21, 2016\nNaN\n2022\n187cm\n85kg\nNaN\n39.0\nNaN\n\n\n15375\n1179\nG. Buffon\n44\nhttps://cdn.sofifa.net/players/001/179/23_60.png\nItaly\nhttps://cdn.sofifa.net/flags/it.png\n79\n79\nParma\nhttps://cdn.sofifa.net/teams/50/30.png\n...\nYes\n&lt;span class=\"pos pos0\"&gt;GK\nJul 1, 2021\nNaN\n2024\n192cm\n92kg\n€3M\n1.0\nNaN\n\n\n15272\n254704\n22 K. Miura\n54\nhttps://cdn.sofifa.net/players/254/704/22_60.png\nJapan\nhttps://cdn.sofifa.net/flags/jp.png\n56\n56\nYokohama FC\nhttps://cdn.sofifa.net/teams/113197/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJul 1, 2005\nNaN\n2022\n177cm\n72kg\nNaN\n11.0\nNaN\n\n\n\n\n\n17660 rows × 29 columns\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n- 내림차순으로 정렬\n\ndf.sort_values('Age', ascending = False)  ## default : ascending = True\n\n\n  \n    \n\n\n\n\n\n\nID\nName\nAge\nPhoto\nNationality\nFlag\nOverall\nPotential\nClub\nClub Logo\n...\nReal Face\nPosition\nJoined\nLoaned From\nContract Valid Until\nHeight\nWeight\nRelease Clause\nKit Number\nBest Overall Rating\n\n\n\n\n15272\n254704\n22 K. Miura\n54\nhttps://cdn.sofifa.net/players/254/704/22_60.png\nJapan\nhttps://cdn.sofifa.net/flags/jp.png\n56\n56\nYokohama FC\nhttps://cdn.sofifa.net/teams/113197/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJul 1, 2005\nNaN\n2022\n177cm\n72kg\nNaN\n11.0\nNaN\n\n\n15375\n1179\nG. Buffon\n44\nhttps://cdn.sofifa.net/players/001/179/23_60.png\nItaly\nhttps://cdn.sofifa.net/flags/it.png\n79\n79\nParma\nhttps://cdn.sofifa.net/teams/50/30.png\n...\nYes\n&lt;span class=\"pos pos0\"&gt;GK\nJul 1, 2021\nNaN\n2024\n192cm\n92kg\n€3M\n1.0\nNaN\n\n\n17257\n645\n17 D. Andersson\n43\nhttps://cdn.sofifa.net/players/000/645/17_60.png\nSweden\nhttps://cdn.sofifa.net/flags/se.png\n57\n57\nHelsingborgs IF\nhttps://cdn.sofifa.net/teams/432/30.png\n...\nNo\n&lt;span class=\"pos pos28\"&gt;SUB\nApr 21, 2016\nNaN\n2022\n187cm\n85kg\nNaN\n39.0\nNaN\n\n\n16036\n216692\nS. Torrico\n42\nhttps://cdn.sofifa.net/players/216/692/23_60.png\nArgentina\nhttps://cdn.sofifa.net/flags/ar.png\n72\n72\nSan Lorenzo de Almagro\nhttps://cdn.sofifa.net/teams/1013/30.png\n...\nNo\n&lt;span class=\"pos pos0\"&gt;GK\nApr 25, 2013\nNaN\n2022\n183cm\n84kg\n€375K\n12.0\nNaN\n\n\n16311\n254196\n21 L. Fernández\n42\nhttps://cdn.sofifa.net/players/254/196/21_60.png\nColombia\nhttps://cdn.sofifa.net/flags/co.png\n61\n61\nSociedad Deportiva Aucas\nhttps://cdn.sofifa.net/teams/110987/30.png\n...\nNo\n&lt;span class=\"pos pos28\"&gt;SUB\nJan 29, 2018\nNaN\n2024\n187cm\n82kg\n€75K\n1.0\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n17360\n261023\n21 H. Broun\n16\nhttps://cdn.sofifa.net/players/261/023/21_60.png\nScotland\nhttps://cdn.sofifa.net/flags/gb-sct.png\n52\n72\nKilmarnock\nhttps://cdn.sofifa.net/teams/82/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nSep 17, 2020\nNaN\n2022\n182cm\n70kg\n€523K\n40.0\nNaN\n\n\n15536\n263639\n22 M. Pavel\n16\nhttps://cdn.sofifa.net/players/263/639/22_60.png\nRomania\nhttps://cdn.sofifa.net/flags/ro.png\n51\n69\nFC Dinamo 1948 Bucureşti\nhttps://cdn.sofifa.net/teams/100757/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJul 1, 2021\nNaN\n2023\n178cm\n66kg\n€277K\n77.0\nNaN\n\n\n11398\n256405\n21 W. Essanoussi\n16\nhttps://cdn.sofifa.net/players/256/405/21_60.png\nNetherlands\nhttps://cdn.sofifa.net/flags/nl.png\n59\n75\nVVV-Venlo\nhttps://cdn.sofifa.net/teams/100651/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJul 1, 2019\nNaN\n2022\n178cm\n70kg\n€1.1M\n24.0\nNaN\n\n\n15030\n270594\nT. Walczak\n16\nhttps://cdn.sofifa.net/players/270/594/23_60.png\nPoland\nhttps://cdn.sofifa.net/flags/pl.png\n54\n68\nWisła Płock\nhttps://cdn.sofifa.net/teams/1569/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nSep 7, 2021\nNaN\n2023\n191cm\n88kg\n€494K\n99.0\nNaN\n\n\n17636\n263636\n22 D. Oncescu\n15\nhttps://cdn.sofifa.net/players/263/636/22_60.png\nRomania\nhttps://cdn.sofifa.net/flags/ro.png\n50\n72\nFC Dinamo 1948 Bucureşti\nhttps://cdn.sofifa.net/teams/100757/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJun 1, 2021\nNaN\n2025\n190cm\n77kg\n€306K\n34.0\nNaN\n\n\n\n\n\n17660 rows × 29 columns\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n- 능력치가 좋은 순서대로 정렬\n\ndf.sort_values(by = 'Overall', ascending = False)    ## 수가 높을수록 위로 가니까, by 생략해도 됨.\n\n\n  \n    \n\n\n\n\n\n\nID\nName\nAge\nPhoto\nNationality\nFlag\nOverall\nPotential\nClub\nClub Logo\n...\nReal Face\nPosition\nJoined\nLoaned From\nContract Valid Until\nHeight\nWeight\nRelease Clause\nKit Number\nBest Overall Rating\n\n\n\n\n41\n188545\nR. Lewandowski\n33\nhttps://cdn.sofifa.net/players/188/545/23_60.png\nPoland\nhttps://cdn.sofifa.net/flags/pl.png\n91\n91\nFC Barcelona\nhttps://cdn.sofifa.net/teams/241/30.png\n...\nYes\n&lt;span class=\"pos pos25\"&gt;ST\nJul 18, 2022\nNaN\n2025\n185cm\n81kg\n€172.2M\n9.0\nNaN\n\n\n124\n165153\nK. Benzema\n34\nhttps://cdn.sofifa.net/players/165/153/23_60.png\nFrance\nhttps://cdn.sofifa.net/flags/fr.png\n91\n91\nReal Madrid CF\nhttps://cdn.sofifa.net/teams/243/30.png\n...\nYes\n&lt;span class=\"pos pos21\"&gt;CF\nJul 9, 2009\nNaN\n2023\n185cm\n81kg\n€131.2M\n9.0\nNaN\n\n\n3\n192985\nK. De Bruyne\n31\nhttps://cdn.sofifa.net/players/192/985/23_60.png\nBelgium\nhttps://cdn.sofifa.net/flags/be.png\n91\n91\nManchester City\nhttps://cdn.sofifa.net/teams/10/30.png\n...\nYes\n&lt;span class=\"pos pos13\"&gt;RCM\nAug 30, 2015\nNaN\n2025\n181cm\n70kg\n€198.9M\n17.0\nNaN\n\n\n56\n158023\nL. Messi\n35\nhttps://cdn.sofifa.net/players/158/023/23_60.png\nArgentina\nhttps://cdn.sofifa.net/flags/ar.png\n91\n91\nParis Saint-Germain\nhttps://cdn.sofifa.net/teams/73/30.png\n...\nYes\n&lt;span class=\"pos pos23\"&gt;RW\nAug 10, 2021\nNaN\n2023\n169cm\n67kg\n€99.9M\n30.0\nNaN\n\n\n75\n231747\nK. Mbappé\n23\nhttps://cdn.sofifa.net/players/231/747/23_60.png\nFrance\nhttps://cdn.sofifa.net/flags/fr.png\n91\n95\nParis Saint-Germain\nhttps://cdn.sofifa.net/teams/73/30.png\n...\nYes\n&lt;span class=\"pos pos25\"&gt;ST\nJul 1, 2018\nNaN\n2025\n182cm\n73kg\n€366.7M\n7.0\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n15513\n266751\n22 Jung Ho Yeon\n20\nhttps://cdn.sofifa.net/players/266/751/22_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n45\n53\nGwangJu FC\nhttps://cdn.sofifa.net/teams/112258/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 20, 2022\nNaN\n2026\n180cm\n73kg\n€145K\n23.0\nNaN\n\n\n16215\n268279\n22 J. Looschen\n24\nhttps://cdn.sofifa.net/players/268/279/22_60.png\nGermany\nhttps://cdn.sofifa.net/flags/de.png\n44\n47\nSV Meppen\nhttps://cdn.sofifa.net/teams/110597/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nMar 19, 2022\nNaN\n2026\n178cm\n78kg\n€92K\n42.0\nNaN\n\n\n16042\n255283\n20 Kim Yeong Geun\n22\nhttps://cdn.sofifa.net/players/255/283/20_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n44\n49\nGyeongnam FC\nhttps://cdn.sofifa.net/teams/111588/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 9, 2020\nNaN\n2020\n174cm\n71kg\n€53K\n43.0\nNaN\n\n\n14634\n269038\n22 Zhang Wenxuan\n16\nhttps://cdn.sofifa.net/players/269/038/22_60.png\nChina PR\nhttps://cdn.sofifa.net/flags/cn.png\n44\n59\nGuangzhou FC\nhttps://cdn.sofifa.net/teams/111839/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nMay 1, 2022\nNaN\n2022\n175cm\n70kg\n€239K\n29.0\nNaN\n\n\n17618\n168933\n07 I. Paskov\n33\nhttps://cdn.sofifa.net/players/168/933/07_60.png\nBulgaria\nhttps://cdn.sofifa.net/flags/bg.png\n43\n42\nNaN\nhttps://cdn.sofifa.net/flags/bg.png\n...\nNaN\n&lt;span class=\"pos pos28\"&gt;SUB\nNaN\nNaN\nNaN\n184cm\n79kg\nNaN\n24.0\nNaN\n\n\n\n\n\n17660 rows × 29 columns\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n\n\nF. df.info()\n시험에는 절대 안 낼 거지만 매우 중요한 것\n\ndf.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 17660 entries, 0 to 17659\nData columns (total 29 columns):\n #   Column                    Non-Null Count  Dtype  \n---  ------                    --------------  -----  \n 0   ID                        17660 non-null  int64  \n 1   Name                      17660 non-null  object \n 2   Age                       17660 non-null  int64  \n 3   Photo                     17660 non-null  object \n 4   Nationality               17660 non-null  object \n 5   Flag                      17660 non-null  object \n 6   Overall                   17660 non-null  int64  \n 7   Potential                 17660 non-null  int64  \n 8   Club                      17449 non-null  object \n 9   Club Logo                 17660 non-null  object \n 10  Value                     17660 non-null  object \n 11  Wage                      17660 non-null  object \n 12  Special                   17660 non-null  int64  \n 13  Preferred Foot            17660 non-null  object \n 14  International Reputation  17660 non-null  float64\n 15  Weak Foot                 17660 non-null  float64\n 16  Skill Moves               17660 non-null  float64\n 17  Work Rate                 17660 non-null  object \n 18  Body Type                 17622 non-null  object \n 19  Real Face                 17622 non-null  object \n 20  Position                  17625 non-null  object \n 21  Joined                    16562 non-null  object \n 22  Loaned From               694 non-null    object \n 23  Contract Valid Until      17299 non-null  object \n 24  Height                    17660 non-null  object \n 25  Weight                    17660 non-null  object \n 26  Release Clause            16509 non-null  object \n 27  Kit Number                17625 non-null  float64\n 28  Best Overall Rating       21 non-null     object \ndtypes: float64(4), int64(5), object(20)\nmemory usage: 3.9+ MB\n\n\n\ndata들의 현황을 한눈에 파악하기 좋다.\n\n\ndf.iloc[:, [28]].sort_values('Best Overall Rating')\n\n\n  \n    \n\n\n\n\n\n\nBest Overall Rating\n\n\n\n\n13299\n&lt;span class=\"bp3-tag p p-54\"&gt;54&lt;/span&gt;\n\n\n14366\n&lt;span class=\"bp3-tag p p-56\"&gt;56&lt;/span&gt;\n\n\n16779\n&lt;span class=\"bp3-tag p p-58\"&gt;58&lt;/span&gt;\n\n\n16968\n&lt;span class=\"bp3-tag p p-58\"&gt;58&lt;/span&gt;\n\n\n16835\n&lt;span class=\"bp3-tag p p-59\"&gt;59&lt;/span&gt;\n\n\n...\n...\n\n\n17655\nNaN\n\n\n17656\nNaN\n\n\n17657\nNaN\n\n\n17658\nNaN\n\n\n17659\nNaN\n\n\n\n\n\n17660 rows × 1 columns\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n\n\nG. df.isna()\n- 열별로 결측치 카운트\n\ndf.isna()   ## NaN 값이 있다면 True 산출\n\n\n  \n    \n\n\n\n\n\n\nID\nName\nAge\nPhoto\nNationality\nFlag\nOverall\nPotential\nClub\nClub Logo\n...\nReal Face\nPosition\nJoined\nLoaned From\nContract Valid Until\nHeight\nWeight\nRelease Clause\nKit Number\nBest Overall Rating\n\n\n\n\n0\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\n...\nFalse\nFalse\nFalse\nTrue\nFalse\nFalse\nFalse\nFalse\nFalse\nTrue\n\n\n1\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\n...\nFalse\nFalse\nFalse\nTrue\nFalse\nFalse\nFalse\nFalse\nFalse\nTrue\n\n\n2\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\n...\nFalse\nFalse\nFalse\nTrue\nFalse\nFalse\nFalse\nFalse\nFalse\nTrue\n\n\n3\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\n...\nFalse\nFalse\nFalse\nTrue\nFalse\nFalse\nFalse\nFalse\nFalse\nTrue\n\n\n4\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\n...\nFalse\nFalse\nFalse\nTrue\nFalse\nFalse\nFalse\nFalse\nFalse\nTrue\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n17655\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\n...\nFalse\nFalse\nFalse\nTrue\nFalse\nFalse\nFalse\nFalse\nFalse\nTrue\n\n\n17656\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\n...\nFalse\nFalse\nFalse\nTrue\nFalse\nFalse\nFalse\nFalse\nFalse\nTrue\n\n\n17657\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\n...\nFalse\nFalse\nFalse\nTrue\nFalse\nFalse\nFalse\nFalse\nFalse\nTrue\n\n\n17658\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\n...\nFalse\nFalse\nFalse\nTrue\nFalse\nFalse\nFalse\nFalse\nFalse\nTrue\n\n\n17659\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\n...\nFalse\nFalse\nFalse\nTrue\nFalse\nFalse\nFalse\nFalse\nFalse\nTrue\n\n\n\n\n\n17660 rows × 29 columns\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n\ndf.isna().sum(axis = 0)   ## default : axis = 0\n\nID                              0\nName                            0\nAge                             0\nPhoto                           0\nNationality                     0\nFlag                            0\nOverall                         0\nPotential                       0\nClub                          211\nClub Logo                       0\nValue                           0\nWage                            0\nSpecial                         0\nPreferred Foot                  0\nInternational Reputation        0\nWeak Foot                       0\nSkill Moves                     0\nWork Rate                       0\nBody Type                      38\nReal Face                      38\nPosition                       35\nJoined                       1098\nLoaned From                 16966\nContract Valid Until          361\nHeight                          0\nWeight                          0\nRelease Clause               1151\nKit Number                     35\nBest Overall Rating         17639\ndtype: int64\n\n\n\narr = np.array([(True, False), (True, False), (False, True)])\narr\n\narray([[ True, False],\n       [ True, False],\n       [False,  True]])\n\n\n\narr.shape\n\n(3, 2)\n\n\n\narr.sum(axis = 0) ## 열별로 합\n\narray([2, 1])\n\n\n\narr.sum(axis = 1)   ## 행별로 합\n\narray([1, 1, 1])\n\n\n- 예시2 : 결측치가 50% 이상인 열 출력\n\nlen(df) ## 전체 행의 갯수\n\n17660\n\n\n\ndf.isna().sum() / len(df)   ## &lt;- pd.Series\n\nID                          0.000000\nName                        0.000000\nAge                         0.000000\nPhoto                       0.000000\nNationality                 0.000000\nFlag                        0.000000\nOverall                     0.000000\nPotential                   0.000000\nClub                        0.011948\nClub Logo                   0.000000\nValue                       0.000000\nWage                        0.000000\nSpecial                     0.000000\nPreferred Foot              0.000000\nInternational Reputation    0.000000\nWeak Foot                   0.000000\nSkill Moves                 0.000000\nWork Rate                   0.000000\nBody Type                   0.002152\nReal Face                   0.002152\nPosition                    0.001982\nJoined                      0.062174\nLoaned From                 0.960702\nContract Valid Until        0.020442\nHeight                      0.000000\nWeight                      0.000000\nRelease Clause              0.065176\nKit Number                  0.001982\nBest Overall Rating         0.998811\ndtype: float64\n\n\n\ndf.loc[:, (df.isna().sum() / len(df)) &gt; 0.5]\n\n\n  \n    \n\n\n\n\n\n\nLoaned From\nBest Overall Rating\n\n\n\n\n0\nNaN\nNaN\n\n\n1\nNaN\nNaN\n\n\n2\nNaN\nNaN\n\n\n3\nNaN\nNaN\n\n\n4\nNaN\nNaN\n\n\n...\n...\n...\n\n\n17655\nNaN\nNaN\n\n\n17656\nNaN\nNaN\n\n\n17657\nNaN\nNaN\n\n\n17658\nNaN\nNaN\n\n\n17659\nNaN\nNaN\n\n\n\n\n\n17660 rows × 2 columns\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n\n\nH. df.drop()\n- 예시1 : [0,1,2,3] 행을 drop\n\ndf.drop([0,1,2,3])\n## df.drop([0,1,2,3], axis = 0)\n\n\n  \n    \n\n\n\n\n\n\nID\nName\nAge\nPhoto\nNationality\nFlag\nOverall\nPotential\nClub\nClub Logo\n...\nReal Face\nPosition\nJoined\nLoaned From\nContract Valid Until\nHeight\nWeight\nRelease Clause\nKit Number\nBest Overall Rating\n\n\n\n\n4\n224232\nN. Barella\n25\nhttps://cdn.sofifa.net/players/224/232/23_60.png\nItaly\nhttps://cdn.sofifa.net/flags/it.png\n86\n89\nInter\nhttps://cdn.sofifa.net/teams/44/30.png\n...\nYes\n&lt;span class=\"pos pos13\"&gt;RCM\nSep 1, 2020\nNaN\n2026\n172cm\n68kg\n€154.4M\n23.0\nNaN\n\n\n5\n212622\nJ. Kimmich\n27\nhttps://cdn.sofifa.net/players/212/622/23_60.png\nGermany\nhttps://cdn.sofifa.net/flags/de.png\n89\n90\nFC Bayern München\nhttps://cdn.sofifa.net/teams/21/30.png\n...\nYes\n&lt;span class=\"pos pos9\"&gt;RDM\nJul 1, 2015\nNaN\n2025\n177cm\n75kg\n€182M\n6.0\nNaN\n\n\n6\n197445\nD. Alaba\n30\nhttps://cdn.sofifa.net/players/197/445/23_60.png\nAustria\nhttps://cdn.sofifa.net/flags/at.png\n86\n86\nReal Madrid CF\nhttps://cdn.sofifa.net/teams/243/30.png\n...\nYes\n&lt;span class=\"pos pos6\"&gt;LCB\nJul 1, 2021\nNaN\n2026\n180cm\n78kg\n€113.8M\n4.0\nNaN\n\n\n7\n187961\n22 Paulinho\n32\nhttps://cdn.sofifa.net/players/187/961/22_60.png\nBrazil\nhttps://cdn.sofifa.net/flags/br.png\n83\n83\nAl Ahli\nhttps://cdn.sofifa.net/teams/112387/30.png\n...\nYes\n&lt;span class=\"pos pos15\"&gt;LCM\nJul 22, 2021\nNaN\n2024\n183cm\n80kg\n€48.5M\n15.0\nNaN\n\n\n8\n208333\nE. Can\n28\nhttps://cdn.sofifa.net/players/208/333/23_60.png\nGermany\nhttps://cdn.sofifa.net/flags/de.png\n82\n82\nBorussia Dortmund\nhttps://cdn.sofifa.net/teams/22/30.png\n...\nYes\n&lt;span class=\"pos pos28\"&gt;SUB\nFeb 18, 2020\nNaN\n2024\n186cm\n86kg\n€51.9M\n23.0\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n17655\n269526\nDeng Xiongtao\n19\nhttps://cdn.sofifa.net/players/269/526/23_60.png\nChina PR\nhttps://cdn.sofifa.net/flags/cn.png\n48\n61\nMeizhou Hakka\nhttps://cdn.sofifa.net/teams/114628/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nApr 11, 2022\nNaN\n2027\n190cm\n78kg\n€218K\n35.0\nNaN\n\n\n17656\n267946\n22 Lim Jun Sub\n17\nhttps://cdn.sofifa.net/players/267/946/22_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n48\n64\nJeju United FC\nhttps://cdn.sofifa.net/teams/1478/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 1, 2022\nNaN\n2026\n195cm\n84kg\n€188K\n21.0\nNaN\n\n\n17657\n270567\nA. Demir\n25\nhttps://cdn.sofifa.net/players/270/567/23_60.png\nTurkey\nhttps://cdn.sofifa.net/flags/tr.png\n51\n56\nÜmraniyespor\nhttps://cdn.sofifa.net/teams/113796/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJun 6, 2021\nNaN\n2023\n190cm\n82kg\n€142K\n12.0\nNaN\n\n\n17658\n256624\n21 S. Czajor\n18\nhttps://cdn.sofifa.net/players/256/624/21_60.png\nPoland\nhttps://cdn.sofifa.net/flags/pl.png\n50\n65\nFleetwood Town\nhttps://cdn.sofifa.net/teams/112260/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 1, 2020\nNaN\n2021\n187cm\n79kg\n€214K\n40.0\nNaN\n\n\n17659\n256376\n21 F. Jakobsson\n20\nhttps://cdn.sofifa.net/players/256/376/21_60.png\nSweden\nhttps://cdn.sofifa.net/flags/se.png\n50\n61\nIFK Norrköping\nhttps://cdn.sofifa.net/teams/702/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 8, 2020\nNaN\n2021\n186cm\n78kg\n€131K\n30.0\nNaN\n\n\n\n\n\n17656 rows × 29 columns\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n\ndf.drop(columns = ['Name', 'Age'])\n## df.drop(['Name', 'Age'], axis = 1)\n\n\n  \n    \n\n\n\n\n\n\nID\nPhoto\nNationality\nFlag\nOverall\nPotential\nClub\nClub Logo\nValue\nWage\n...\nReal Face\nPosition\nJoined\nLoaned From\nContract Valid Until\nHeight\nWeight\nRelease Clause\nKit Number\nBest Overall Rating\n\n\n\n\n0\n209658\nhttps://cdn.sofifa.net/players/209/658/23_60.png\nGermany\nhttps://cdn.sofifa.net/flags/de.png\n87\n88\nFC Bayern München\nhttps://cdn.sofifa.net/teams/21/30.png\n€91M\n€115K\n...\nYes\n&lt;span class=\"pos pos28\"&gt;SUB\nJul 1, 2018\nNaN\n2026\n189cm\n82kg\n€157M\n8.0\nNaN\n\n\n1\n212198\nhttps://cdn.sofifa.net/players/212/198/23_60.png\nPortugal\nhttps://cdn.sofifa.net/flags/pt.png\n86\n87\nManchester United\nhttps://cdn.sofifa.net/teams/11/30.png\n€78.5M\n€190K\n...\nYes\n&lt;span class=\"pos pos15\"&gt;LCM\nJan 30, 2020\nNaN\n2026\n179cm\n69kg\n€155M\n8.0\nNaN\n\n\n2\n224334\nhttps://cdn.sofifa.net/players/224/334/23_60.png\nArgentina\nhttps://cdn.sofifa.net/flags/ar.png\n85\n85\nSevilla FC\nhttps://cdn.sofifa.net/teams/481/30.png\n€46.5M\n€46K\n...\nNo\n&lt;span class=\"pos pos7\"&gt;LB\nSep 14, 2020\nNaN\n2024\n172cm\n69kg\n€97.7M\n19.0\nNaN\n\n\n3\n192985\nhttps://cdn.sofifa.net/players/192/985/23_60.png\nBelgium\nhttps://cdn.sofifa.net/flags/be.png\n91\n91\nManchester City\nhttps://cdn.sofifa.net/teams/10/30.png\n€107.5M\n€350K\n...\nYes\n&lt;span class=\"pos pos13\"&gt;RCM\nAug 30, 2015\nNaN\n2025\n181cm\n70kg\n€198.9M\n17.0\nNaN\n\n\n4\n224232\nhttps://cdn.sofifa.net/players/224/232/23_60.png\nItaly\nhttps://cdn.sofifa.net/flags/it.png\n86\n89\nInter\nhttps://cdn.sofifa.net/teams/44/30.png\n€89.5M\n€110K\n...\nYes\n&lt;span class=\"pos pos13\"&gt;RCM\nSep 1, 2020\nNaN\n2026\n172cm\n68kg\n€154.4M\n23.0\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n17655\n269526\nhttps://cdn.sofifa.net/players/269/526/23_60.png\nChina PR\nhttps://cdn.sofifa.net/flags/cn.png\n48\n61\nMeizhou Hakka\nhttps://cdn.sofifa.net/teams/114628/30.png\n€100K\n€500\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nApr 11, 2022\nNaN\n2027\n190cm\n78kg\n€218K\n35.0\nNaN\n\n\n17656\n267946\nhttps://cdn.sofifa.net/players/267/946/22_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n48\n64\nJeju United FC\nhttps://cdn.sofifa.net/teams/1478/30.png\n€100K\n€500\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 1, 2022\nNaN\n2026\n195cm\n84kg\n€188K\n21.0\nNaN\n\n\n17657\n270567\nhttps://cdn.sofifa.net/players/270/567/23_60.png\nTurkey\nhttps://cdn.sofifa.net/flags/tr.png\n51\n56\nÜmraniyespor\nhttps://cdn.sofifa.net/teams/113796/30.png\n€70K\n€2K\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJun 6, 2021\nNaN\n2023\n190cm\n82kg\n€142K\n12.0\nNaN\n\n\n17658\n256624\nhttps://cdn.sofifa.net/players/256/624/21_60.png\nPoland\nhttps://cdn.sofifa.net/flags/pl.png\n50\n65\nFleetwood Town\nhttps://cdn.sofifa.net/teams/112260/30.png\n€90K\n€500\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 1, 2020\nNaN\n2021\n187cm\n79kg\n€214K\n40.0\nNaN\n\n\n17659\n256376\nhttps://cdn.sofifa.net/players/256/376/21_60.png\nSweden\nhttps://cdn.sofifa.net/flags/se.png\n50\n61\nIFK Norrköping\nhttps://cdn.sofifa.net/teams/702/30.png\n€90K\n€500\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 8, 2020\nNaN\n2021\n186cm\n78kg\n€131K\n30.0\nNaN\n\n\n\n\n\n17660 rows × 27 columns\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n\n\n# G~H 에 대한 연습문제\n# 예제: 결측치가 50퍼 이상인 열을 제외하라.\n\ndf.isna().mean()  ## := df.isna().sum() / len(df). Series\n\nID                          0.000000\nName                        0.000000\nAge                         0.000000\nPhoto                       0.000000\nNationality                 0.000000\nFlag                        0.000000\nOverall                     0.000000\nPotential                   0.000000\nClub                        0.011948\nClub Logo                   0.000000\nValue                       0.000000\nWage                        0.000000\nSpecial                     0.000000\nPreferred Foot              0.000000\nInternational Reputation    0.000000\nWeak Foot                   0.000000\nSkill Moves                 0.000000\nWork Rate                   0.000000\nBody Type                   0.002152\nReal Face                   0.002152\nPosition                    0.001982\nJoined                      0.062174\nLoaned From                 0.960702\nContract Valid Until        0.020442\nHeight                      0.000000\nWeight                      0.000000\nRelease Clause              0.065176\nKit Number                  0.001982\nBest Overall Rating         0.998811\ndtype: float64\n\n\n풀이 1 : 무지성 직접 제외\n\ndf.drop(columns=['Loaned From','Best Overall Rating'])\n\n\n  \n    \n\n\n\n\n\n\nID\nName\nAge\nPhoto\nNationality\nFlag\nOverall\nPotential\nClub\nClub Logo\n...\nWork Rate\nBody Type\nReal Face\nPosition\nJoined\nContract Valid Until\nHeight\nWeight\nRelease Clause\nKit Number\n\n\n\n\n0\n209658\nL. Goretzka\n27\nhttps://cdn.sofifa.net/players/209/658/23_60.png\nGermany\nhttps://cdn.sofifa.net/flags/de.png\n87\n88\nFC Bayern München\nhttps://cdn.sofifa.net/teams/21/30.png\n...\nHigh/ Medium\nUnique\nYes\n&lt;span class=\"pos pos28\"&gt;SUB\nJul 1, 2018\n2026\n189cm\n82kg\n€157M\n8.0\n\n\n1\n212198\nBruno Fernandes\n27\nhttps://cdn.sofifa.net/players/212/198/23_60.png\nPortugal\nhttps://cdn.sofifa.net/flags/pt.png\n86\n87\nManchester United\nhttps://cdn.sofifa.net/teams/11/30.png\n...\nHigh/ High\nUnique\nYes\n&lt;span class=\"pos pos15\"&gt;LCM\nJan 30, 2020\n2026\n179cm\n69kg\n€155M\n8.0\n\n\n2\n224334\nM. Acuña\n30\nhttps://cdn.sofifa.net/players/224/334/23_60.png\nArgentina\nhttps://cdn.sofifa.net/flags/ar.png\n85\n85\nSevilla FC\nhttps://cdn.sofifa.net/teams/481/30.png\n...\nHigh/ High\nStocky (170-185)\nNo\n&lt;span class=\"pos pos7\"&gt;LB\nSep 14, 2020\n2024\n172cm\n69kg\n€97.7M\n19.0\n\n\n3\n192985\nK. De Bruyne\n31\nhttps://cdn.sofifa.net/players/192/985/23_60.png\nBelgium\nhttps://cdn.sofifa.net/flags/be.png\n91\n91\nManchester City\nhttps://cdn.sofifa.net/teams/10/30.png\n...\nHigh/ High\nUnique\nYes\n&lt;span class=\"pos pos13\"&gt;RCM\nAug 30, 2015\n2025\n181cm\n70kg\n€198.9M\n17.0\n\n\n4\n224232\nN. Barella\n25\nhttps://cdn.sofifa.net/players/224/232/23_60.png\nItaly\nhttps://cdn.sofifa.net/flags/it.png\n86\n89\nInter\nhttps://cdn.sofifa.net/teams/44/30.png\n...\nHigh/ High\nNormal (170-)\nYes\n&lt;span class=\"pos pos13\"&gt;RCM\nSep 1, 2020\n2026\n172cm\n68kg\n€154.4M\n23.0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n17655\n269526\nDeng Xiongtao\n19\nhttps://cdn.sofifa.net/players/269/526/23_60.png\nChina PR\nhttps://cdn.sofifa.net/flags/cn.png\n48\n61\nMeizhou Hakka\nhttps://cdn.sofifa.net/teams/114628/30.png\n...\nMedium/ Medium\nNormal (185+)\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nApr 11, 2022\n2027\n190cm\n78kg\n€218K\n35.0\n\n\n17656\n267946\n22 Lim Jun Sub\n17\nhttps://cdn.sofifa.net/players/267/946/22_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n48\n64\nJeju United FC\nhttps://cdn.sofifa.net/teams/1478/30.png\n...\nMedium/ Medium\nLean (185+)\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 1, 2022\n2026\n195cm\n84kg\n€188K\n21.0\n\n\n17657\n270567\nA. Demir\n25\nhttps://cdn.sofifa.net/players/270/567/23_60.png\nTurkey\nhttps://cdn.sofifa.net/flags/tr.png\n51\n56\nÜmraniyespor\nhttps://cdn.sofifa.net/teams/113796/30.png\n...\nMedium/ Medium\nLean (185+)\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJun 6, 2021\n2023\n190cm\n82kg\n€142K\n12.0\n\n\n17658\n256624\n21 S. Czajor\n18\nhttps://cdn.sofifa.net/players/256/624/21_60.png\nPoland\nhttps://cdn.sofifa.net/flags/pl.png\n50\n65\nFleetwood Town\nhttps://cdn.sofifa.net/teams/112260/30.png\n...\nMedium/ Medium\nNormal (185+)\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 1, 2020\n2021\n187cm\n79kg\n€214K\n40.0\n\n\n17659\n256376\n21 F. Jakobsson\n20\nhttps://cdn.sofifa.net/players/256/376/21_60.png\nSweden\nhttps://cdn.sofifa.net/flags/se.png\n50\n61\nIFK Norrköping\nhttps://cdn.sofifa.net/teams/702/30.png\n...\nMedium/ Medium\nNormal (185+)\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 8, 2020\n2021\n186cm\n78kg\n€131K\n30.0\n\n\n\n\n\n17660 rows × 27 columns\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n풀이 2 : 이성적인 풀이\n\ndf.loc[:, df.isna().mean() &lt; 0.5]\n\n\n  \n    \n\n\n\n\n\n\nID\nName\nAge\nPhoto\nNationality\nFlag\nOverall\nPotential\nClub\nClub Logo\n...\nWork Rate\nBody Type\nReal Face\nPosition\nJoined\nContract Valid Until\nHeight\nWeight\nRelease Clause\nKit Number\n\n\n\n\n0\n209658\nL. Goretzka\n27\nhttps://cdn.sofifa.net/players/209/658/23_60.png\nGermany\nhttps://cdn.sofifa.net/flags/de.png\n87\n88\nFC Bayern München\nhttps://cdn.sofifa.net/teams/21/30.png\n...\nHigh/ Medium\nUnique\nYes\n&lt;span class=\"pos pos28\"&gt;SUB\nJul 1, 2018\n2026\n189cm\n82kg\n€157M\n8.0\n\n\n1\n212198\nBruno Fernandes\n27\nhttps://cdn.sofifa.net/players/212/198/23_60.png\nPortugal\nhttps://cdn.sofifa.net/flags/pt.png\n86\n87\nManchester United\nhttps://cdn.sofifa.net/teams/11/30.png\n...\nHigh/ High\nUnique\nYes\n&lt;span class=\"pos pos15\"&gt;LCM\nJan 30, 2020\n2026\n179cm\n69kg\n€155M\n8.0\n\n\n2\n224334\nM. Acuña\n30\nhttps://cdn.sofifa.net/players/224/334/23_60.png\nArgentina\nhttps://cdn.sofifa.net/flags/ar.png\n85\n85\nSevilla FC\nhttps://cdn.sofifa.net/teams/481/30.png\n...\nHigh/ High\nStocky (170-185)\nNo\n&lt;span class=\"pos pos7\"&gt;LB\nSep 14, 2020\n2024\n172cm\n69kg\n€97.7M\n19.0\n\n\n3\n192985\nK. De Bruyne\n31\nhttps://cdn.sofifa.net/players/192/985/23_60.png\nBelgium\nhttps://cdn.sofifa.net/flags/be.png\n91\n91\nManchester City\nhttps://cdn.sofifa.net/teams/10/30.png\n...\nHigh/ High\nUnique\nYes\n&lt;span class=\"pos pos13\"&gt;RCM\nAug 30, 2015\n2025\n181cm\n70kg\n€198.9M\n17.0\n\n\n4\n224232\nN. Barella\n25\nhttps://cdn.sofifa.net/players/224/232/23_60.png\nItaly\nhttps://cdn.sofifa.net/flags/it.png\n86\n89\nInter\nhttps://cdn.sofifa.net/teams/44/30.png\n...\nHigh/ High\nNormal (170-)\nYes\n&lt;span class=\"pos pos13\"&gt;RCM\nSep 1, 2020\n2026\n172cm\n68kg\n€154.4M\n23.0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n17655\n269526\nDeng Xiongtao\n19\nhttps://cdn.sofifa.net/players/269/526/23_60.png\nChina PR\nhttps://cdn.sofifa.net/flags/cn.png\n48\n61\nMeizhou Hakka\nhttps://cdn.sofifa.net/teams/114628/30.png\n...\nMedium/ Medium\nNormal (185+)\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nApr 11, 2022\n2027\n190cm\n78kg\n€218K\n35.0\n\n\n17656\n267946\n22 Lim Jun Sub\n17\nhttps://cdn.sofifa.net/players/267/946/22_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n48\n64\nJeju United FC\nhttps://cdn.sofifa.net/teams/1478/30.png\n...\nMedium/ Medium\nLean (185+)\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 1, 2022\n2026\n195cm\n84kg\n€188K\n21.0\n\n\n17657\n270567\nA. Demir\n25\nhttps://cdn.sofifa.net/players/270/567/23_60.png\nTurkey\nhttps://cdn.sofifa.net/flags/tr.png\n51\n56\nÜmraniyespor\nhttps://cdn.sofifa.net/teams/113796/30.png\n...\nMedium/ Medium\nLean (185+)\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJun 6, 2021\n2023\n190cm\n82kg\n€142K\n12.0\n\n\n17658\n256624\n21 S. Czajor\n18\nhttps://cdn.sofifa.net/players/256/624/21_60.png\nPoland\nhttps://cdn.sofifa.net/flags/pl.png\n50\n65\nFleetwood Town\nhttps://cdn.sofifa.net/teams/112260/30.png\n...\nMedium/ Medium\nNormal (185+)\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 1, 2020\n2021\n187cm\n79kg\n€214K\n40.0\n\n\n17659\n256376\n21 F. Jakobsson\n20\nhttps://cdn.sofifa.net/players/256/376/21_60.png\nSweden\nhttps://cdn.sofifa.net/flags/se.png\n50\n61\nIFK Norrköping\nhttps://cdn.sofifa.net/teams/702/30.png\n...\nMedium/ Medium\nNormal (185+)\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 8, 2020\n2021\n186cm\n78kg\n€131K\n30.0\n\n\n\n\n\n17660 rows × 27 columns"
  },
  {
    "objectID": "unrefined file/datavisuallization/learning materials/강신성_0925.html#pandas-missing",
    "href": "unrefined file/datavisuallization/learning materials/강신성_0925.html#pandas-missing",
    "title": "1. import",
    "section": "3. Pandas : missing",
    "text": "3. Pandas : missing\n\nA. Numpy\n\nnp.nan\n\nnan\n\n\n\narr = np.array([1,2,3,np.nan])\narr\n\narray([ 1.,  2.,  3., nan])\n\n\n\narr.mean()\n\nnan\n\n\n\nprint(type(np.nan))  ## np.nan 자체는 일종의 float로 취급된다.\nprint(type(arr[0]))\n\n&lt;class 'float'&gt;\n&lt;class 'numpy.float64'&gt;\n\n\n\n아래 두 개의 식은 거의 동일하다.\n\n\npd.Series([np.nan,1,2,3])\n\n0    NaN\n1    1.0\n2    2.0\n3    3.0\ndtype: float64\n\n\n\npd.Series([pd.NA, 1, 2, 3])\n\n0    &lt;NA&gt;\n1       1\n2       2\n3       3\ndtype: object\n\n\npd.Serise에 NaN 또는 가 있다면 연산할 때 제외함\n\npd.Series([np.nan,1,2,3]).mean()\n\n2.0\n\n\n\npd.Series([pd.NA,1,2,3]).mean()\n\n2.0\n\n\n\ns1 = pd.Series([np.nan,1,2,3])\ntype(s1[0])\n\nnumpy.float64\n\n\n\ns2 = pd.Series([pd.NA, 1,2,3])\ntype(s2[0])\n\npandas._libs.missing.NAType\n\n\n\nmissing은 그냥 NaN이라고 보자.\n\n- 검출(★)\n\ns1.isna()\n\n0     True\n1    False\n2    False\n3    False\ndtype: bool\n\n\n\ns2.isna()\n\n0     True\n1    False\n2    False\n3    False\ndtype: bool\n\n\n\npd.isna(s1[0]), pd.isnull(s1[0])  ## 결측치가 있느냐?\n\n(True, True)\n\n\n\npd.isna(s2[0]), pd.isnull(s2[0])  ## 결측치가 있느냐?\n\n(True, True)\n\n\n\nid(pd.isna), id(pd.isnull) # 같은함수\n\n(135146401797248, 135146401797248)\n\n\n\nid를 찍었을 때 같다면 같은 함수이다."
  },
  {
    "objectID": "unrefined file/datavisuallization/learning materials/강신성_0925.html#pandas-query",
    "href": "unrefined file/datavisuallization/learning materials/강신성_0925.html#pandas-query",
    "title": "1. import",
    "section": "5. Pandas : query",
    "text": "5. Pandas : query\n\nts = pd.DataFrame(np.random.normal(size=(20,4)),columns=list('ABCD'),index=pd.date_range('20221226',periods=20)).assign(E=['A']*10+['B']*10)\nts\n\n\n  \n    \n\n\n\n\n\n\nA\nB\nC\nD\nE\n\n\n\n\n2022-12-26\n2.114531\n-1.357376\n-0.207229\n-0.098154\nA\n\n\n2022-12-27\n0.312752\n0.627109\n-0.551283\n0.155706\nA\n\n\n2022-12-28\n-1.087601\n0.954356\n0.014435\n1.090911\nA\n\n\n2022-12-29\n0.217482\n1.161383\n-0.071722\n-0.323551\nA\n\n\n2022-12-30\n-0.407107\n0.294139\n-2.176565\n0.455862\nA\n\n\n2022-12-31\n-0.281463\n-0.119266\n1.311237\n-0.086091\nA\n\n\n2023-01-01\n1.766233\n0.861238\n0.440594\n0.115717\nA\n\n\n2023-01-02\n1.244432\n-0.203171\n-0.882147\n-0.555365\nA\n\n\n2023-01-03\n-1.874380\n0.661885\n-1.495802\n-0.928337\nA\n\n\n2023-01-04\n2.201784\n-0.118694\n-1.180480\n-1.323897\nA\n\n\n2023-01-05\n-0.868834\n-0.429863\n-0.410214\n-0.505256\nB\n\n\n2023-01-06\n1.277424\n-1.115292\n-0.683880\n1.286608\nB\n\n\n2023-01-07\n1.300064\n2.202771\n-0.634653\n-0.108274\nB\n\n\n2023-01-08\n0.955565\n-0.704828\n0.620769\n-1.776394\nB\n\n\n2023-01-09\n-0.157803\n1.336288\n0.022712\n0.347758\nB\n\n\n2023-01-10\n-1.091290\n-0.258790\n-3.127253\n0.181982\nB\n\n\n2023-01-11\n-1.109814\n-0.664264\n-0.058458\n2.748882\nB\n\n\n2023-01-12\n0.501813\n-0.339402\n0.369923\n-1.478936\nB\n\n\n2023-01-13\n-1.042576\n-1.388681\n-0.679329\n-2.863000\nB\n\n\n2023-01-14\n-1.481058\n-0.245890\n0.057210\n-0.000342\nB\n\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n\nA. 기본 query\n- 예시1: A&gt;0 and B&lt;0\n\nts.query('A&gt;0 and B&lt;0')\n\n\n  \n    \n\n\n\n\n\n\nA\nB\nC\nD\nE\n\n\n\n\n2022-12-26\n2.114531\n-1.357376\n-0.207229\n-0.098154\nA\n\n\n2023-01-02\n1.244432\n-0.203171\n-0.882147\n-0.555365\nA\n\n\n2023-01-04\n2.201784\n-0.118694\n-1.180480\n-1.323897\nA\n\n\n2023-01-06\n1.277424\n-1.115292\n-0.683880\n1.286608\nB\n\n\n2023-01-08\n0.955565\n-0.704828\n0.620769\n-1.776394\nB\n\n\n2023-01-12\n0.501813\n-0.339402\n0.369923\n-1.478936\nB\n\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n- 예시2: A&lt;B&lt;C\n\nts.query('A&lt;B&lt;C')\n\n\n  \n    \n\n\n\n\n\n\nA\nB\nC\nD\nE\n\n\n\n\n2022-12-31\n-0.281463\n-0.119266\n1.311237\n-0.086091\nA\n\n\n2023-01-05\n-0.868834\n-0.429863\n-0.410214\n-0.505256\nB\n\n\n2023-01-11\n-1.109814\n-0.664264\n-0.058458\n2.748882\nB\n\n\n2023-01-14\n-1.481058\n-0.245890\n0.057210\n-0.000342\nB\n\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n- 예시3: (A+B/2) &gt; 0\n\nts.query('(A+B)/2 &gt; 0')\n\n\n  \n    \n\n\n\n\n\n\nA\nB\nC\nD\nE\n\n\n\n\n2022-12-26\n2.114531\n-1.357376\n-0.207229\n-0.098154\nA\n\n\n2022-12-27\n0.312752\n0.627109\n-0.551283\n0.155706\nA\n\n\n2022-12-29\n0.217482\n1.161383\n-0.071722\n-0.323551\nA\n\n\n2023-01-01\n1.766233\n0.861238\n0.440594\n0.115717\nA\n\n\n2023-01-02\n1.244432\n-0.203171\n-0.882147\n-0.555365\nA\n\n\n2023-01-04\n2.201784\n-0.118694\n-1.180480\n-1.323897\nA\n\n\n2023-01-06\n1.277424\n-1.115292\n-0.683880\n1.286608\nB\n\n\n2023-01-07\n1.300064\n2.202771\n-0.634653\n-0.108274\nB\n\n\n2023-01-08\n0.955565\n-0.704828\n0.620769\n-1.776394\nB\n\n\n2023-01-09\n-0.157803\n1.336288\n0.022712\n0.347758\nB\n\n\n2023-01-12\n0.501813\n-0.339402\n0.369923\n-1.478936\nB\n\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n- 예시4: (A+B/2) &gt; 0 and E=='A'\n\nts.query('(A+B)/2 &gt; 0 and E == \"A\"')   ## string 조건을 넣어주고 싶으면 다른 따옴표로 구분하면 된다.\n\n\n  \n    \n\n\n\n\n\n\nA\nB\nC\nD\nE\n\n\n\n\n2022-12-26\n2.114531\n-1.357376\n-0.207229\n-0.098154\nA\n\n\n2022-12-27\n0.312752\n0.627109\n-0.551283\n0.155706\nA\n\n\n2022-12-29\n0.217482\n1.161383\n-0.071722\n-0.323551\nA\n\n\n2023-01-01\n1.766233\n0.861238\n0.440594\n0.115717\nA\n\n\n2023-01-02\n1.244432\n-0.203171\n-0.882147\n-0.555365\nA\n\n\n2023-01-04\n2.201784\n-0.118694\n-1.180480\n-1.323897\nA\n\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n\n\nB. 외부변수를 이용\n- 예시1: A &gt; mean(A)\n\nmean = ts.A.mean()\nmean\n\n0.12450772273787492\n\n\n\n#ts.query('A &gt; np.mean(A)')   ## 이건 안됨\n#ts.query('A &gt; A.mean()')      ## 이건 되긴 함\n\n#ts.query('A &gt; mean')    ## column 중 하나인지 뭔지 헷갈림, 그래서 안됨\n\nts.query('A &gt; @mean')\n\nValueError: ignored\n\n\n\n\nC. Index로 query\n- 예시: (2022년 12월30일 보다 이전 날짜) \\(\\cup\\) (2023년 1월10일)\n\nts\n\n\n  \n    \n\n\n\n\n\n\nA\nB\nC\nD\nE\n\n\n\n\n2022-12-26\n2.114531\n-1.357376\n-0.207229\n-0.098154\nA\n\n\n2022-12-27\n0.312752\n0.627109\n-0.551283\n0.155706\nA\n\n\n2022-12-28\n-1.087601\n0.954356\n0.014435\n1.090911\nA\n\n\n2022-12-29\n0.217482\n1.161383\n-0.071722\n-0.323551\nA\n\n\n2022-12-30\n-0.407107\n0.294139\n-2.176565\n0.455862\nA\n\n\n2022-12-31\n-0.281463\n-0.119266\n1.311237\n-0.086091\nA\n\n\n2023-01-01\n1.766233\n0.861238\n0.440594\n0.115717\nA\n\n\n2023-01-02\n1.244432\n-0.203171\n-0.882147\n-0.555365\nA\n\n\n2023-01-03\n-1.874380\n0.661885\n-1.495802\n-0.928337\nA\n\n\n2023-01-04\n2.201784\n-0.118694\n-1.180480\n-1.323897\nA\n\n\n2023-01-05\n-0.868834\n-0.429863\n-0.410214\n-0.505256\nB\n\n\n2023-01-06\n1.277424\n-1.115292\n-0.683880\n1.286608\nB\n\n\n2023-01-07\n1.300064\n2.202771\n-0.634653\n-0.108274\nB\n\n\n2023-01-08\n0.955565\n-0.704828\n0.620769\n-1.776394\nB\n\n\n2023-01-09\n-0.157803\n1.336288\n0.022712\n0.347758\nB\n\n\n2023-01-10\n-1.091290\n-0.258790\n-3.127253\n0.181982\nB\n\n\n2023-01-11\n-1.109814\n-0.664264\n-0.058458\n2.748882\nB\n\n\n2023-01-12\n0.501813\n-0.339402\n0.369923\n-1.478936\nB\n\n\n2023-01-13\n-1.042576\n-1.388681\n-0.679329\n-2.863000\nB\n\n\n2023-01-14\n-1.481058\n-0.245890\n0.057210\n-0.000342\nB\n\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n\nts.query('index &lt;= \"2022-12-30\" or index == \"2023-01-10\"')\n\n\n  \n    \n\n\n\n\n\n\nA\nB\nC\nD\nE\n\n\n\n\n2022-12-26\n2.114531\n-1.357376\n-0.207229\n-0.098154\nA\n\n\n2022-12-27\n0.312752\n0.627109\n-0.551283\n0.155706\nA\n\n\n2022-12-28\n-1.087601\n0.954356\n0.014435\n1.090911\nA\n\n\n2022-12-29\n0.217482\n1.161383\n-0.071722\n-0.323551\nA\n\n\n2022-12-30\n-0.407107\n0.294139\n-2.176565\n0.455862\nA\n\n\n2023-01-10\n-1.091290\n-0.258790\n-3.127253\n0.181982\nB\n\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n\n\nD. 열의 이름에 공백이 있을 경우\n열의 이름에 공백이 있으면 백틱을 이용하면 된다.\n\ndf = pd.read_csv('https://raw.githubusercontent.com/guebin/DV2022/master/posts/FIFA23_official_data.csv')\ndf.columns\n\nIndex(['ID', 'Name', 'Age', 'Photo', 'Nationality', 'Flag', 'Overall',\n       'Potential', 'Club', 'Club Logo', 'Value', 'Wage', 'Special',\n       'Preferred Foot', 'International Reputation', 'Weak Foot',\n       'Skill Moves', 'Work Rate', 'Body Type', 'Real Face', 'Position',\n       'Joined', 'Loaned From', 'Contract Valid Until', 'Height', 'Weight',\n       'Release Clause', 'Kit Number', 'Best Overall Rating'],\n      dtype='object')\n\n\n\ndf.query('`Skill Moves` &gt; 4')\n\n\n  \n    \n\n\n\n\n\n\nID\nName\nAge\nPhoto\nNationality\nFlag\nOverall\nPotential\nClub\nClub Logo\n...\nReal Face\nPosition\nJoined\nLoaned From\nContract Valid Until\nHeight\nWeight\nRelease Clause\nKit Number\nBest Overall Rating\n\n\n\n\n19\n193082\nJ. Cuadrado\n34\nhttps://cdn.sofifa.net/players/193/082/23_60.png\nColombia\nhttps://cdn.sofifa.net/flags/co.png\n83\n83\nJuventus\nhttps://cdn.sofifa.net/teams/45/30.png\n...\nYes\n&lt;span class=\"pos pos3\"&gt;RB\nJul 1, 2017\nNaN\n2023\n179cm\n72kg\n€23M\n11.0\nNaN\n\n\n27\n189509\nThiago\n31\nhttps://cdn.sofifa.net/players/189/509/23_60.png\nSpain\nhttps://cdn.sofifa.net/flags/es.png\n86\n86\nLiverpool\nhttps://cdn.sofifa.net/teams/9/30.png\n...\nYes\n&lt;span class=\"pos pos15\"&gt;LCM\nSep 18, 2020\nNaN\n2024\n174cm\n70kg\n€102.7M\n6.0\nNaN\n\n\n44\n232411\nC. Nkunku\n24\nhttps://cdn.sofifa.net/players/232/411/23_60.png\nFrance\nhttps://cdn.sofifa.net/flags/fr.png\n86\n89\nRB Leipzig\nhttps://cdn.sofifa.net/teams/112172/30.png\n...\nYes\n&lt;span class=\"pos pos28\"&gt;SUB\nNaN\nNaN\nNaN\n175cm\n73kg\n€166.9M\n12.0\nNaN\n\n\n62\n233927\nLucas Paquetá\n24\nhttps://cdn.sofifa.net/players/233/927/23_60.png\nBrazil\nhttps://cdn.sofifa.net/flags/br.png\n82\n87\nOlympique Lyonnais\nhttps://cdn.sofifa.net/teams/66/30.png\n...\nYes\n&lt;span class=\"pos pos15\"&gt;LCM\nOct 1, 2020\nNaN\n2025\n180cm\n72kg\n€90.9M\n10.0\nNaN\n\n\n75\n231747\nK. Mbappé\n23\nhttps://cdn.sofifa.net/players/231/747/23_60.png\nFrance\nhttps://cdn.sofifa.net/flags/fr.png\n91\n95\nParis Saint-Germain\nhttps://cdn.sofifa.net/teams/73/30.png\n...\nYes\n&lt;span class=\"pos pos25\"&gt;ST\nJul 1, 2018\nNaN\n2025\n182cm\n73kg\n€366.7M\n7.0\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n4516\n253755\nTalles Magno\n20\nhttps://cdn.sofifa.net/players/253/755/23_60.png\nBrazil\nhttps://cdn.sofifa.net/flags/br.png\n71\n83\nNew York City FC\nhttps://cdn.sofifa.net/teams/112828/30.png\n...\nNo\n&lt;span class=\"pos pos16\"&gt;LM\nMay 18, 2021\nNaN\n2026\n186cm\n70kg\n€7.7M\n43.0\nNaN\n\n\n4643\n246548\nO. Sahraoui\n21\nhttps://cdn.sofifa.net/players/246/548/23_60.png\nNorway\nhttps://cdn.sofifa.net/flags/no.png\n67\n78\nVålerenga Fotball\nhttps://cdn.sofifa.net/teams/920/30.png\n...\nNo\n&lt;span class=\"pos pos27\"&gt;LW\nMay 15, 2019\nNaN\n2023\n170cm\n65kg\n€3.3M\n10.0\nNaN\n\n\n4872\n251570\nR. Cherki\n18\nhttps://cdn.sofifa.net/players/251/570/23_60.png\nFrance\nhttps://cdn.sofifa.net/flags/fr.png\n73\n88\nOlympique Lyonnais\nhttps://cdn.sofifa.net/teams/66/30.png\n...\nNo\n&lt;span class=\"pos pos28\"&gt;SUB\nJul 7, 2019\nNaN\n2023\n176cm\n71kg\n€17.7M\n18.0\nNaN\n\n\n5361\n225712\nD. Bahamboula\n27\nhttps://cdn.sofifa.net/players/225/712/23_60.png\nCongo\nhttps://cdn.sofifa.net/flags/cg.png\n63\n63\nLivingston FC\nhttps://cdn.sofifa.net/teams/621/30.png\n...\nNo\n&lt;span class=\"pos pos28\"&gt;SUB\nJul 9, 2022\nNaN\n2024\n185cm\n70kg\n€875K\n7.0\nNaN\n\n\n10452\n212455\n17 H. Mastour\n18\nhttps://cdn.sofifa.net/players/212/455/17_60.png\nMorocco\nhttps://cdn.sofifa.net/flags/ma.png\n65\n76\nPEC Zwolle\nhttps://cdn.sofifa.net/teams/1914/30.png\n...\nNo\n&lt;span class=\"pos pos28\"&gt;SUB\nNaN\n&lt;a href=\"/team/47/ac-milan/\"&gt;AC Milan&lt;/a&gt;\nJun 30, 2017\n175cm\n63kg\nNaN\n98.0\nNaN\n\n\n\n\n\n65 rows × 29 columns"
  },
  {
    "objectID": "unrefined file/datavisuallization/learning materials/강신성_0925.html#pandas-할당",
    "href": "unrefined file/datavisuallization/learning materials/강신성_0925.html#pandas-할당",
    "title": "1. import",
    "section": "5. Pandas : 할당",
    "text": "5. Pandas : 할당\n\nnp.random.seed(43052)\natt = np.random.choice(np.arange(10,21)*5,20)\nrep = np.random.choice(np.arange(5,21)*5,20)\nmid = np.random.choice(np.arange(0,21)*5,20)\nfin = np.random.choice(np.arange(0,21)*5,20)\ndf = pd.DataFrame({'att':att,'rep':rep,'mid':mid,'fin':fin})\ndf\n\n\n  \n    \n\n\n\n\n\n\natt\nrep\nmid\nfin\n\n\n\n\n0\n65\n55\n50\n40\n\n\n1\n95\n100\n50\n80\n\n\n2\n65\n90\n60\n30\n\n\n3\n55\n80\n75\n80\n\n\n4\n80\n30\n30\n100\n\n\n5\n75\n40\n100\n15\n\n\n6\n65\n45\n45\n90\n\n\n7\n60\n60\n25\n0\n\n\n8\n95\n65\n20\n10\n\n\n9\n90\n80\n80\n20\n\n\n10\n55\n75\n35\n25\n\n\n11\n95\n95\n45\n0\n\n\n12\n95\n55\n15\n35\n\n\n13\n50\n80\n40\n30\n\n\n14\n50\n55\n15\n85\n\n\n15\n95\n30\n30\n95\n\n\n16\n50\n50\n45\n10\n\n\n17\n65\n55\n15\n45\n\n\n18\n70\n70\n40\n35\n\n\n19\n90\n90\n80\n90\n\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n\nA. df.assign()\n- 예시: total = att*0.1 + rep*0.2 + mid*0.35 + fin*0.35 를 계산하여 할당\n\ndf_total = df.assign(total = df.att*0.1 + df.rep*0.2 + df.mid*0.35 + df.fin*0.35)   ## 일시적 변화임\ndf_total\n\n\n  \n    \n\n\n\n\n\n\natt\nrep\nmid\nfin\ntotal\n\n\n\n\n0\n65\n55\n50\n40\n49.00\n\n\n1\n95\n100\n50\n80\n75.00\n\n\n2\n65\n90\n60\n30\n56.00\n\n\n3\n55\n80\n75\n80\n75.75\n\n\n4\n80\n30\n30\n100\n59.50\n\n\n5\n75\n40\n100\n15\n55.75\n\n\n6\n65\n45\n45\n90\n62.75\n\n\n7\n60\n60\n25\n0\n26.75\n\n\n8\n95\n65\n20\n10\n33.00\n\n\n9\n90\n80\n80\n20\n60.00\n\n\n10\n55\n75\n35\n25\n41.50\n\n\n11\n95\n95\n45\n0\n44.25\n\n\n12\n95\n55\n15\n35\n38.00\n\n\n13\n50\n80\n40\n30\n45.50\n\n\n14\n50\n55\n15\n85\n51.00\n\n\n15\n95\n30\n30\n95\n59.25\n\n\n16\n50\n50\n45\n10\n34.25\n\n\n17\n65\n55\n15\n45\n38.50\n\n\n18\n70\n70\n40\n35\n47.25\n\n\n19\n90\n90\n80\n90\n86.50\n\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n\n\nB. df.eval()\n\ndf.eval('total = att*0.1 + rep*0.2 + mid*0.3 + fin*0.4')    ## query를 쓰는 것처럼, 원본 데이터를 변화시키지 않음\n\n\n  \n    \n\n\n\n\n\n\natt\nrep\nmid\nfin\ntotal\n\n\n\n\n0\n65\n55\n50\n40\n48.5\n\n\n1\n95\n100\n50\n80\n76.5\n\n\n2\n65\n90\n60\n30\n54.5\n\n\n3\n55\n80\n75\n80\n76.0\n\n\n4\n80\n30\n30\n100\n63.0\n\n\n5\n75\n40\n100\n15\n51.5\n\n\n6\n65\n45\n45\n90\n65.0\n\n\n7\n60\n60\n25\n0\n25.5\n\n\n8\n95\n65\n20\n10\n32.5\n\n\n9\n90\n80\n80\n20\n57.0\n\n\n10\n55\n75\n35\n25\n41.0\n\n\n11\n95\n95\n45\n0\n42.0\n\n\n12\n95\n55\n15\n35\n39.0\n\n\n13\n50\n80\n40\n30\n45.0\n\n\n14\n50\n55\n15\n85\n54.5\n\n\n15\n95\n30\n30\n95\n62.5\n\n\n16\n50\n50\n45\n10\n32.5\n\n\n17\n65\n55\n15\n45\n40.0\n\n\n18\n70\n70\n40\n35\n47.0\n\n\n19\n90\n90\n80\n90\n87.0\n\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n\nbut, 사칙연산과 같은 기초연산 수준에서만 잘 작동한다.\n\n\n\nC. df[colname] = xxx\n\n별로 안쓰는 방법\n\n\ndf['total'] = df.att*0.1 + df.rep*0.2 + df.mid*0.3 + df.fin*0.4   ## 원래의 데이터프레임을 손상시킨다.\ndf\n\n\n  \n    \n\n\n\n\n\n\natt\nrep\nmid\nfin\ntotal\n\n\n\n\n0\n65\n55\n50\n40\n48.5\n\n\n1\n95\n100\n50\n80\n76.5\n\n\n2\n65\n90\n60\n30\n54.5\n\n\n3\n55\n80\n75\n80\n76.0\n\n\n4\n80\n30\n30\n100\n63.0\n\n\n5\n75\n40\n100\n15\n51.5\n\n\n6\n65\n45\n45\n90\n65.0\n\n\n7\n60\n60\n25\n0\n25.5\n\n\n8\n95\n65\n20\n10\n32.5\n\n\n9\n90\n80\n80\n20\n57.0\n\n\n10\n55\n75\n35\n25\n41.0\n\n\n11\n95\n95\n45\n0\n42.0\n\n\n12\n95\n55\n15\n35\n39.0\n\n\n13\n50\n80\n40\n30\n45.0\n\n\n14\n50\n55\n15\n85\n54.5\n\n\n15\n95\n30\n30\n95\n62.5\n\n\n16\n50\n50\n45\n10\n32.5\n\n\n17\n65\n55\n15\n45\n40.0\n\n\n18\n70\n70\n40\n35\n47.0\n\n\n19\n90\n90\n80\n90\n87.0"
  },
  {
    "objectID": "unrefined file/datavisuallization/learning materials/강신성_0925.html#pandas-transform-column",
    "href": "unrefined file/datavisuallization/learning materials/강신성_0925.html#pandas-transform-column",
    "title": "1. import",
    "section": "6. Pandas : transform column(★★)",
    "text": "6. Pandas : transform column(★★)\n\nlambda\n- 예시1: \\(x \\to x+2\\)\n\n\"\"\"\ndef f(x) :\n  return x + 2\n\n해당 코드와 동일하다.\n\"\"\"\n\nf = lambda x: x+2\nprint(f(3))\n\nprint((lambda x : x+2)(3))    ## (lambda x : x+2) 자체가 함수이므로, 뒤에 변수만 지정해주면 된다.\n\n5\n5\n\n\n- 예시2: \\(x,y \\to x+y\\)\n\n(lambda x,y : x+y)(1,3)\n\n4\n\n\n- 예시3: ‘2023-09’ \\(\\to\\) 9 (format : int)\n\n(lambda x : int(x[-2:]))('2023-09')   ## -1번째(뒤에서 두번째 원소까지 추출)\n\n9\n\n\n- 예시4: ‘2023-09’ \\(\\to\\) (2023, 9) (format : tuple)\n\n(lambda x : (int(x[:4]), int(x[-2:])))('2023-09')\n\n(2023, 9)\n\n\n- 예시5: 문자열이 ‘cat’이면 1 ’dog’ 이면 0 // ’cat이면 1 ’cat’이 아니면 0\n\n(lambda x : 1 if x == 'cat' else 0)('cat')\n## (lambda x : pd.Series(x == 'cat').sum())('cat') ## 이것도 된다.\n\n1\n\n\n\n\nB. map\n\n함수의 output들을 엮는다. 매핑하는 거\n\n:- 개념: map(f,[x1,x2,...xn])=[f(x1),f(x2),...,f(xn)]\n- 예시1: x-&gt;x+1을 [1,2,3]에 적용\n\nf = lambda x: x+1\nlist(map(f,[1,2,3]))\n\n[2, 3, 4]\n\n\n\nlist(map(lambda x : x + 1, [1,2,3]))\n\n[2, 3, 4]\n\n\n- 예시2 df.Height열 변환하기 (xxxcm 라고 적혀있는 것을 cm 없애고 키만 뽑기)\n\ndf = pd.read_csv('https://raw.githubusercontent.com/guebin/DV2022/master/posts/FIFA23_official_data.csv')\ns = df.Height[:5]\ns\n\n0    189cm\n1    179cm\n2    172cm\n3    181cm\n4    172cm\nName: Height, dtype: object\n\n\n\ns.replace('cm', '')\n\n0    189cm\n1    179cm\n2    172cm\n3    181cm\n4    172cm\nName: Height, dtype: object\n\n\n\ndf.assign(height = [])\n\nValueError: ignored\n\n\n\nlist(map(lambda x : int(x[:-2]), s))\n\n[189, 179, 172, 181, 172]\n\n\n\ndf.assign(Height = list(map(lambda x: int(x.replace('cm','')), df.Height)))\n\n\n  \n    \n\n\n\n\n\n\nID\nName\nAge\nPhoto\nNationality\nFlag\nOverall\nPotential\nClub\nClub Logo\n...\nReal Face\nPosition\nJoined\nLoaned From\nContract Valid Until\nHeight\nWeight\nRelease Clause\nKit Number\nBest Overall Rating\n\n\n\n\n0\n209658\nL. Goretzka\n27\nhttps://cdn.sofifa.net/players/209/658/23_60.png\nGermany\nhttps://cdn.sofifa.net/flags/de.png\n87\n88\nFC Bayern München\nhttps://cdn.sofifa.net/teams/21/30.png\n...\nYes\n&lt;span class=\"pos pos28\"&gt;SUB\nJul 1, 2018\nNaN\n2026\n189\n82kg\n€157M\n8.0\nNaN\n\n\n1\n212198\nBruno Fernandes\n27\nhttps://cdn.sofifa.net/players/212/198/23_60.png\nPortugal\nhttps://cdn.sofifa.net/flags/pt.png\n86\n87\nManchester United\nhttps://cdn.sofifa.net/teams/11/30.png\n...\nYes\n&lt;span class=\"pos pos15\"&gt;LCM\nJan 30, 2020\nNaN\n2026\n179\n69kg\n€155M\n8.0\nNaN\n\n\n2\n224334\nM. Acuña\n30\nhttps://cdn.sofifa.net/players/224/334/23_60.png\nArgentina\nhttps://cdn.sofifa.net/flags/ar.png\n85\n85\nSevilla FC\nhttps://cdn.sofifa.net/teams/481/30.png\n...\nNo\n&lt;span class=\"pos pos7\"&gt;LB\nSep 14, 2020\nNaN\n2024\n172\n69kg\n€97.7M\n19.0\nNaN\n\n\n3\n192985\nK. De Bruyne\n31\nhttps://cdn.sofifa.net/players/192/985/23_60.png\nBelgium\nhttps://cdn.sofifa.net/flags/be.png\n91\n91\nManchester City\nhttps://cdn.sofifa.net/teams/10/30.png\n...\nYes\n&lt;span class=\"pos pos13\"&gt;RCM\nAug 30, 2015\nNaN\n2025\n181\n70kg\n€198.9M\n17.0\nNaN\n\n\n4\n224232\nN. Barella\n25\nhttps://cdn.sofifa.net/players/224/232/23_60.png\nItaly\nhttps://cdn.sofifa.net/flags/it.png\n86\n89\nInter\nhttps://cdn.sofifa.net/teams/44/30.png\n...\nYes\n&lt;span class=\"pos pos13\"&gt;RCM\nSep 1, 2020\nNaN\n2026\n172\n68kg\n€154.4M\n23.0\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n17655\n269526\nDeng Xiongtao\n19\nhttps://cdn.sofifa.net/players/269/526/23_60.png\nChina PR\nhttps://cdn.sofifa.net/flags/cn.png\n48\n61\nMeizhou Hakka\nhttps://cdn.sofifa.net/teams/114628/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nApr 11, 2022\nNaN\n2027\n190\n78kg\n€218K\n35.0\nNaN\n\n\n17656\n267946\n22 Lim Jun Sub\n17\nhttps://cdn.sofifa.net/players/267/946/22_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n48\n64\nJeju United FC\nhttps://cdn.sofifa.net/teams/1478/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 1, 2022\nNaN\n2026\n195\n84kg\n€188K\n21.0\nNaN\n\n\n17657\n270567\nA. Demir\n25\nhttps://cdn.sofifa.net/players/270/567/23_60.png\nTurkey\nhttps://cdn.sofifa.net/flags/tr.png\n51\n56\nÜmraniyespor\nhttps://cdn.sofifa.net/teams/113796/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJun 6, 2021\nNaN\n2023\n190\n82kg\n€142K\n12.0\nNaN\n\n\n17658\n256624\n21 S. Czajor\n18\nhttps://cdn.sofifa.net/players/256/624/21_60.png\nPoland\nhttps://cdn.sofifa.net/flags/pl.png\n50\n65\nFleetwood Town\nhttps://cdn.sofifa.net/teams/112260/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 1, 2020\nNaN\n2021\n187\n79kg\n€214K\n40.0\nNaN\n\n\n17659\n256376\n21 F. Jakobsson\n20\nhttps://cdn.sofifa.net/players/256/376/21_60.png\nSweden\nhttps://cdn.sofifa.net/flags/se.png\n50\n61\nIFK Norrköping\nhttps://cdn.sofifa.net/teams/702/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 8, 2020\nNaN\n2021\n186\n78kg\n€131K\n30.0\nNaN\n\n\n\n\n\n17660 rows × 29 columns\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n사실 수틀리면 컴프리헨션 쓰면 된다.\n\ndf.assign(Height = [int(s.replace('cm', '')) for s in df.Height])\n\n\n  \n    \n\n\n\n\n\n\nID\nName\nAge\nPhoto\nNationality\nFlag\nOverall\nPotential\nClub\nClub Logo\n...\nReal Face\nPosition\nJoined\nLoaned From\nContract Valid Until\nHeight\nWeight\nRelease Clause\nKit Number\nBest Overall Rating\n\n\n\n\n0\n209658\nL. Goretzka\n27\nhttps://cdn.sofifa.net/players/209/658/23_60.png\nGermany\nhttps://cdn.sofifa.net/flags/de.png\n87\n88\nFC Bayern München\nhttps://cdn.sofifa.net/teams/21/30.png\n...\nYes\n&lt;span class=\"pos pos28\"&gt;SUB\nJul 1, 2018\nNaN\n2026\n189\n82kg\n€157M\n8.0\nNaN\n\n\n1\n212198\nBruno Fernandes\n27\nhttps://cdn.sofifa.net/players/212/198/23_60.png\nPortugal\nhttps://cdn.sofifa.net/flags/pt.png\n86\n87\nManchester United\nhttps://cdn.sofifa.net/teams/11/30.png\n...\nYes\n&lt;span class=\"pos pos15\"&gt;LCM\nJan 30, 2020\nNaN\n2026\n179\n69kg\n€155M\n8.0\nNaN\n\n\n2\n224334\nM. Acuña\n30\nhttps://cdn.sofifa.net/players/224/334/23_60.png\nArgentina\nhttps://cdn.sofifa.net/flags/ar.png\n85\n85\nSevilla FC\nhttps://cdn.sofifa.net/teams/481/30.png\n...\nNo\n&lt;span class=\"pos pos7\"&gt;LB\nSep 14, 2020\nNaN\n2024\n172\n69kg\n€97.7M\n19.0\nNaN\n\n\n3\n192985\nK. De Bruyne\n31\nhttps://cdn.sofifa.net/players/192/985/23_60.png\nBelgium\nhttps://cdn.sofifa.net/flags/be.png\n91\n91\nManchester City\nhttps://cdn.sofifa.net/teams/10/30.png\n...\nYes\n&lt;span class=\"pos pos13\"&gt;RCM\nAug 30, 2015\nNaN\n2025\n181\n70kg\n€198.9M\n17.0\nNaN\n\n\n4\n224232\nN. Barella\n25\nhttps://cdn.sofifa.net/players/224/232/23_60.png\nItaly\nhttps://cdn.sofifa.net/flags/it.png\n86\n89\nInter\nhttps://cdn.sofifa.net/teams/44/30.png\n...\nYes\n&lt;span class=\"pos pos13\"&gt;RCM\nSep 1, 2020\nNaN\n2026\n172\n68kg\n€154.4M\n23.0\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n17655\n269526\nDeng Xiongtao\n19\nhttps://cdn.sofifa.net/players/269/526/23_60.png\nChina PR\nhttps://cdn.sofifa.net/flags/cn.png\n48\n61\nMeizhou Hakka\nhttps://cdn.sofifa.net/teams/114628/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nApr 11, 2022\nNaN\n2027\n190\n78kg\n€218K\n35.0\nNaN\n\n\n17656\n267946\n22 Lim Jun Sub\n17\nhttps://cdn.sofifa.net/players/267/946/22_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n48\n64\nJeju United FC\nhttps://cdn.sofifa.net/teams/1478/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 1, 2022\nNaN\n2026\n195\n84kg\n€188K\n21.0\nNaN\n\n\n17657\n270567\nA. Demir\n25\nhttps://cdn.sofifa.net/players/270/567/23_60.png\nTurkey\nhttps://cdn.sofifa.net/flags/tr.png\n51\n56\nÜmraniyespor\nhttps://cdn.sofifa.net/teams/113796/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJun 6, 2021\nNaN\n2023\n190\n82kg\n€142K\n12.0\nNaN\n\n\n17658\n256624\n21 S. Czajor\n18\nhttps://cdn.sofifa.net/players/256/624/21_60.png\nPoland\nhttps://cdn.sofifa.net/flags/pl.png\n50\n65\nFleetwood Town\nhttps://cdn.sofifa.net/teams/112260/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 1, 2020\nNaN\n2021\n187\n79kg\n€214K\n40.0\nNaN\n\n\n17659\n256376\n21 F. Jakobsson\n20\nhttps://cdn.sofifa.net/players/256/376/21_60.png\nSweden\nhttps://cdn.sofifa.net/flags/se.png\n50\n61\nIFK Norrköping\nhttps://cdn.sofifa.net/teams/702/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 8, 2020\nNaN\n2021\n186\n78kg\n€131K\n30.0\nNaN\n\n\n\n\n\n17660 rows × 29 columns\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n# 예시4 – df.Position 열에 아래와 같은 변환을 수행하고, 변환된 열을 할당하라.\n\n\n\nbefore\nafter\n\n\n\n\n&lt;span class=\"pos pos28\"&gt;SUB\nSUB\n\n\n&lt;span class=\"pos pos15\"&gt;LCM\nLCM\n\n\n&lt;span class=\"pos pos7\"&gt;LB\nLB\n\n\n&lt;span class=\"pos pos13\"&gt;RCM\nRCM\n\n\n&lt;span class=\"pos pos13\"&gt;RCM\nRCM\n\n\n\n\ndf = pd.read_csv('https://raw.githubusercontent.com/guebin/DV2022/master/posts/FIFA23_official_data.csv')\n\n\nx = df.Position[0]\nx\n\n'&lt;span class=\"pos pos28\"&gt;SUB'\n\n\n\ndf.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 17660 entries, 0 to 17659\nData columns (total 29 columns):\n #   Column                    Non-Null Count  Dtype  \n---  ------                    --------------  -----  \n 0   ID                        17660 non-null  int64  \n 1   Name                      17660 non-null  object \n 2   Age                       17660 non-null  int64  \n 3   Photo                     17660 non-null  object \n 4   Nationality               17660 non-null  object \n 5   Flag                      17660 non-null  object \n 6   Overall                   17660 non-null  int64  \n 7   Potential                 17660 non-null  int64  \n 8   Club                      17449 non-null  object \n 9   Club Logo                 17660 non-null  object \n 10  Value                     17660 non-null  object \n 11  Wage                      17660 non-null  object \n 12  Special                   17660 non-null  int64  \n 13  Preferred Foot            17660 non-null  object \n 14  International Reputation  17660 non-null  float64\n 15  Weak Foot                 17660 non-null  float64\n 16  Skill Moves               17660 non-null  float64\n 17  Work Rate                 17660 non-null  object \n 18  Body Type                 17622 non-null  object \n 19  Real Face                 17622 non-null  object \n 20  Position                  17625 non-null  object \n 21  Joined                    16562 non-null  object \n 22  Loaned From               694 non-null    object \n 23  Contract Valid Until      17299 non-null  object \n 24  Height                    17660 non-null  object \n 25  Weight                    17660 non-null  object \n 26  Release Clause            16509 non-null  object \n 27  Kit Number                17625 non-null  float64\n 28  Best Overall Rating       21 non-null     object \ndtypes: float64(4), int64(5), object(20)\nmemory usage: 3.9+ MB\n\n\n\ndf.Position.isna().sum()\n\n35\n\n\n\ndf.assign(Position = list(map(lambda x : x.split(\"&gt;\")[-1] if not pd.isna(x) else 'NA', df.Position)))\n\n\n  \n    \n\n\n\n\n\n\nID\nName\nAge\nPhoto\nNationality\nFlag\nOverall\nPotential\nClub\nClub Logo\n...\nReal Face\nPosition\nJoined\nLoaned From\nContract Valid Until\nHeight\nWeight\nRelease Clause\nKit Number\nBest Overall Rating\n\n\n\n\n0\n209658\nL. Goretzka\n27\nhttps://cdn.sofifa.net/players/209/658/23_60.png\nGermany\nhttps://cdn.sofifa.net/flags/de.png\n87\n88\nFC Bayern München\nhttps://cdn.sofifa.net/teams/21/30.png\n...\nYes\nSUB\nJul 1, 2018\nNaN\n2026\n189cm\n82kg\n€157M\n8.0\nNaN\n\n\n1\n212198\nBruno Fernandes\n27\nhttps://cdn.sofifa.net/players/212/198/23_60.png\nPortugal\nhttps://cdn.sofifa.net/flags/pt.png\n86\n87\nManchester United\nhttps://cdn.sofifa.net/teams/11/30.png\n...\nYes\nLCM\nJan 30, 2020\nNaN\n2026\n179cm\n69kg\n€155M\n8.0\nNaN\n\n\n2\n224334\nM. Acuña\n30\nhttps://cdn.sofifa.net/players/224/334/23_60.png\nArgentina\nhttps://cdn.sofifa.net/flags/ar.png\n85\n85\nSevilla FC\nhttps://cdn.sofifa.net/teams/481/30.png\n...\nNo\nLB\nSep 14, 2020\nNaN\n2024\n172cm\n69kg\n€97.7M\n19.0\nNaN\n\n\n3\n192985\nK. De Bruyne\n31\nhttps://cdn.sofifa.net/players/192/985/23_60.png\nBelgium\nhttps://cdn.sofifa.net/flags/be.png\n91\n91\nManchester City\nhttps://cdn.sofifa.net/teams/10/30.png\n...\nYes\nRCM\nAug 30, 2015\nNaN\n2025\n181cm\n70kg\n€198.9M\n17.0\nNaN\n\n\n4\n224232\nN. Barella\n25\nhttps://cdn.sofifa.net/players/224/232/23_60.png\nItaly\nhttps://cdn.sofifa.net/flags/it.png\n86\n89\nInter\nhttps://cdn.sofifa.net/teams/44/30.png\n...\nYes\nRCM\nSep 1, 2020\nNaN\n2026\n172cm\n68kg\n€154.4M\n23.0\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n17655\n269526\nDeng Xiongtao\n19\nhttps://cdn.sofifa.net/players/269/526/23_60.png\nChina PR\nhttps://cdn.sofifa.net/flags/cn.png\n48\n61\nMeizhou Hakka\nhttps://cdn.sofifa.net/teams/114628/30.png\n...\nNo\nRES\nApr 11, 2022\nNaN\n2027\n190cm\n78kg\n€218K\n35.0\nNaN\n\n\n17656\n267946\n22 Lim Jun Sub\n17\nhttps://cdn.sofifa.net/players/267/946/22_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n48\n64\nJeju United FC\nhttps://cdn.sofifa.net/teams/1478/30.png\n...\nNo\nRES\nJan 1, 2022\nNaN\n2026\n195cm\n84kg\n€188K\n21.0\nNaN\n\n\n17657\n270567\nA. Demir\n25\nhttps://cdn.sofifa.net/players/270/567/23_60.png\nTurkey\nhttps://cdn.sofifa.net/flags/tr.png\n51\n56\nÜmraniyespor\nhttps://cdn.sofifa.net/teams/113796/30.png\n...\nNo\nRES\nJun 6, 2021\nNaN\n2023\n190cm\n82kg\n€142K\n12.0\nNaN\n\n\n17658\n256624\n21 S. Czajor\n18\nhttps://cdn.sofifa.net/players/256/624/21_60.png\nPoland\nhttps://cdn.sofifa.net/flags/pl.png\n50\n65\nFleetwood Town\nhttps://cdn.sofifa.net/teams/112260/30.png\n...\nNo\nRES\nJan 1, 2020\nNaN\n2021\n187cm\n79kg\n€214K\n40.0\nNaN\n\n\n17659\n256376\n21 F. Jakobsson\n20\nhttps://cdn.sofifa.net/players/256/376/21_60.png\nSweden\nhttps://cdn.sofifa.net/flags/se.png\n50\n61\nIFK Norrköping\nhttps://cdn.sofifa.net/teams/702/30.png\n...\nNo\nRES\nJan 8, 2020\nNaN\n2021\n186cm\n78kg\n€131K\n30.0\nNaN\n\n\n\n\n\n17660 rows × 29 columns\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n- (풀이2) – 리스트컴프리헨션\n\nf = lambda x: x.split(\"&gt;\")[-1] if not pd.isna(x) else 'None'\n\n\ndf.assign(Position = [f(s) for s in df.Position])\n\n\n  \n    \n\n\n\n\n\n\nID\nName\nAge\nPhoto\nNationality\nFlag\nOverall\nPotential\nClub\nClub Logo\n...\nReal Face\nPosition\nJoined\nLoaned From\nContract Valid Until\nHeight\nWeight\nRelease Clause\nKit Number\nBest Overall Rating\n\n\n\n\n0\n209658\nL. Goretzka\n27\nhttps://cdn.sofifa.net/players/209/658/23_60.png\nGermany\nhttps://cdn.sofifa.net/flags/de.png\n87\n88\nFC Bayern München\nhttps://cdn.sofifa.net/teams/21/30.png\n...\nYes\nSUB\nJul 1, 2018\nNaN\n2026\n189cm\n82kg\n€157M\n8.0\nNaN\n\n\n1\n212198\nBruno Fernandes\n27\nhttps://cdn.sofifa.net/players/212/198/23_60.png\nPortugal\nhttps://cdn.sofifa.net/flags/pt.png\n86\n87\nManchester United\nhttps://cdn.sofifa.net/teams/11/30.png\n...\nYes\nLCM\nJan 30, 2020\nNaN\n2026\n179cm\n69kg\n€155M\n8.0\nNaN\n\n\n2\n224334\nM. Acuña\n30\nhttps://cdn.sofifa.net/players/224/334/23_60.png\nArgentina\nhttps://cdn.sofifa.net/flags/ar.png\n85\n85\nSevilla FC\nhttps://cdn.sofifa.net/teams/481/30.png\n...\nNo\nLB\nSep 14, 2020\nNaN\n2024\n172cm\n69kg\n€97.7M\n19.0\nNaN\n\n\n3\n192985\nK. De Bruyne\n31\nhttps://cdn.sofifa.net/players/192/985/23_60.png\nBelgium\nhttps://cdn.sofifa.net/flags/be.png\n91\n91\nManchester City\nhttps://cdn.sofifa.net/teams/10/30.png\n...\nYes\nRCM\nAug 30, 2015\nNaN\n2025\n181cm\n70kg\n€198.9M\n17.0\nNaN\n\n\n4\n224232\nN. Barella\n25\nhttps://cdn.sofifa.net/players/224/232/23_60.png\nItaly\nhttps://cdn.sofifa.net/flags/it.png\n86\n89\nInter\nhttps://cdn.sofifa.net/teams/44/30.png\n...\nYes\nRCM\nSep 1, 2020\nNaN\n2026\n172cm\n68kg\n€154.4M\n23.0\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n17655\n269526\nDeng Xiongtao\n19\nhttps://cdn.sofifa.net/players/269/526/23_60.png\nChina PR\nhttps://cdn.sofifa.net/flags/cn.png\n48\n61\nMeizhou Hakka\nhttps://cdn.sofifa.net/teams/114628/30.png\n...\nNo\nRES\nApr 11, 2022\nNaN\n2027\n190cm\n78kg\n€218K\n35.0\nNaN\n\n\n17656\n267946\n22 Lim Jun Sub\n17\nhttps://cdn.sofifa.net/players/267/946/22_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n48\n64\nJeju United FC\nhttps://cdn.sofifa.net/teams/1478/30.png\n...\nNo\nRES\nJan 1, 2022\nNaN\n2026\n195cm\n84kg\n€188K\n21.0\nNaN\n\n\n17657\n270567\nA. Demir\n25\nhttps://cdn.sofifa.net/players/270/567/23_60.png\nTurkey\nhttps://cdn.sofifa.net/flags/tr.png\n51\n56\nÜmraniyespor\nhttps://cdn.sofifa.net/teams/113796/30.png\n...\nNo\nRES\nJun 6, 2021\nNaN\n2023\n190cm\n82kg\n€142K\n12.0\nNaN\n\n\n17658\n256624\n21 S. Czajor\n18\nhttps://cdn.sofifa.net/players/256/624/21_60.png\nPoland\nhttps://cdn.sofifa.net/flags/pl.png\n50\n65\nFleetwood Town\nhttps://cdn.sofifa.net/teams/112260/30.png\n...\nNo\nRES\nJan 1, 2020\nNaN\n2021\n187cm\n79kg\n€214K\n40.0\nNaN\n\n\n17659\n256376\n21 F. Jakobsson\n20\nhttps://cdn.sofifa.net/players/256/376/21_60.png\nSweden\nhttps://cdn.sofifa.net/flags/se.png\n50\n61\nIFK Norrköping\nhttps://cdn.sofifa.net/teams/702/30.png\n...\nNo\nRES\nJan 8, 2020\nNaN\n2021\n186cm\n78kg\n€131K\n30.0\nNaN\n\n\n\n\n\n17660 rows × 29 columns\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n\nmapping하는 게 조금 더 자연스럽고 한번에 쓸 수 있다."
  },
  {
    "objectID": "unrefined file/datavisuallization/learning materials/강신성_0918.html",
    "href": "unrefined file/datavisuallization/learning materials/강신성_0918.html",
    "title": "4. mpg의 시각화 : 2차원",
    "section": "",
    "text": "!pip install plotnine\n\nRequirement already satisfied: plotnine in /usr/local/lib/python3.10/dist-packages (0.12.3)\nRequirement already satisfied: matplotlib&gt;=3.6.0 in /usr/local/lib/python3.10/dist-packages (from plotnine) (3.7.1)\nRequirement already satisfied: mizani&lt;0.10.0,&gt;0.9.0 in /usr/local/lib/python3.10/dist-packages (from plotnine) (0.9.3)\nRequirement already satisfied: numpy&gt;=1.23.0 in /usr/local/lib/python3.10/dist-packages (from plotnine) (1.23.5)\nRequirement already satisfied: pandas&gt;=1.5.0 in /usr/local/lib/python3.10/dist-packages (from plotnine) (1.5.3)\nRequirement already satisfied: patsy&gt;=0.5.1 in /usr/local/lib/python3.10/dist-packages (from plotnine) (0.5.3)\nRequirement already satisfied: scipy&gt;=1.5.0 in /usr/local/lib/python3.10/dist-packages (from plotnine) (1.11.2)\nRequirement already satisfied: statsmodels&gt;=0.14.0 in /usr/local/lib/python3.10/dist-packages (from plotnine) (0.14.0)\nRequirement already satisfied: contourpy&gt;=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib&gt;=3.6.0-&gt;plotnine) (1.1.0)\nRequirement already satisfied: cycler&gt;=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib&gt;=3.6.0-&gt;plotnine) (0.11.0)\nRequirement already satisfied: fonttools&gt;=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib&gt;=3.6.0-&gt;plotnine) (4.42.1)\nRequirement already satisfied: kiwisolver&gt;=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib&gt;=3.6.0-&gt;plotnine) (1.4.5)\nRequirement already satisfied: packaging&gt;=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib&gt;=3.6.0-&gt;plotnine) (23.1)\nRequirement already satisfied: pillow&gt;=6.2.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib&gt;=3.6.0-&gt;plotnine) (9.4.0)\nRequirement already satisfied: pyparsing&gt;=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib&gt;=3.6.0-&gt;plotnine) (3.1.1)\nRequirement already satisfied: python-dateutil&gt;=2.7 in /usr/local/lib/python3.10/dist-packages (from matplotlib&gt;=3.6.0-&gt;plotnine) (2.8.2)\nRequirement already satisfied: pytz&gt;=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas&gt;=1.5.0-&gt;plotnine) (2023.3.post1)\nRequirement already satisfied: six in /usr/local/lib/python3.10/dist-packages (from patsy&gt;=0.5.1-&gt;plotnine) (1.16.0)\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom plotnine import *\nimport plotnine\nplotnine.options.dpi= 150\nplotnine.options.figure_size = (6, 5)\nmpg data\ndf = pd.read_csv('https://raw.githubusercontent.com/guebin/DV2022/master/posts/mpg.csv')\ndf\n\n\n  \n    \n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n\n234 rows × 11 columns\ndf.columns\n\nIndex(['manufacturer', 'model', 'displ', 'year', 'cyl', 'trans', 'drv', 'cty',\n       'hwy', 'fl', 'class'],\n      dtype='object')\nggplot(data = df) + geom_point(mapping = aes(x = 'displ', y = 'hwy')) ## aes : dictionary와 유사하다고 생각하면 된다.\n\n\n\n\n&lt;Figure Size: (900 x 750)&gt;\nggplot(df) + geom_point(aes(x = 'displ', y = 'hwy'))\n\n\n\n\n&lt;Figure Size: (900 x 750)&gt;\nimport rpy2\n%load_ext rpy2.ipython\n\nThe rpy2.ipython extension is already loaded. To reload it, use:\n  %reload_ext rpy2.ipython\n%%R\nddlibrary(tidyverse)\ndf = mpg\nggplot(df)+geom_point(aes(x=displ,y=hwy))\n\nWARNING:rpy2.rinterface_lib.callbacks:R[write to console]: Error in ddlibrary(tidyverse) : could not find function \"ddlibrary\"\n\n\n\n\nError in ddlibrary(tidyverse) : could not find function \"ddlibrary\""
  },
  {
    "objectID": "unrefined file/datavisuallization/learning materials/강신성_0918.html#mpg의-시각화-3차원",
    "href": "unrefined file/datavisuallization/learning materials/강신성_0918.html#mpg의-시각화-3차원",
    "title": "4. mpg의 시각화 : 2차원",
    "section": "5. mpg의 시각화 : 3차원",
    "text": "5. mpg의 시각화 : 3차원\n\nset(df['class'])\n\n{'2seater', 'compact', 'midsize', 'minivan', 'pickup', 'subcompact', 'suv'}\n\n\n\ndf['class'].unique()\n\narray(['compact', 'midsize', 'suv', '2seater', 'minivan', 'pickup',\n       'subcompact'], dtype=object)\n\n\n\nggplot(df) + geom_point(aes(x = 'displ', y = 'hwy', shape = 'class'))   ## class를 shape로 구분 &gt; 불편함\n\n\n\n\n&lt;Figure Size: (900 x 750)&gt;\n\n\n\nggplot(df) + geom_point(aes(x = 'displ', y = 'hwy', color = 'class'))\n\n\n\n\n&lt;Figure Size: (900 x 750)&gt;\n\n\n\n모양까지 class별로 달랐으면 좋겠다.\n\n\nggplot(df) + geom_point(aes(x = 'displ', y = 'hwy', color = 'class', shape = 'class'))\n\n\n\n\n&lt;Figure Size: (900 x 750)&gt;\n\n\n\n전체적으로 포인트의 사이즈를 키우고 싶다.\n\n\nggplot(df) + geom_point(aes(x = 'displ', y = 'hwy', color = 'class', shape = 'class'), size = 5)  ## 외부 파라미터\n\n\n\n\n&lt;Figure Size: (900 x 750)&gt;\n\n\n\n너무 커서 겹치니까 투명도 조정\n\n\nggplot(df) + geom_point(aes(x = 'displ', y = 'hwy', color = 'class', shape = 'class'), size = 5, alpha = 0.5)\n\n\n\n\n&lt;Figure Size: (900 x 750)&gt;"
  },
  {
    "objectID": "unrefined file/datavisuallization/learning materials/강신성_0918.html#mpg의-시각화-4차원-5차원",
    "href": "unrefined file/datavisuallization/learning materials/강신성_0918.html#mpg의-시각화-4차원-5차원",
    "title": "4. mpg의 시각화 : 2차원",
    "section": "6. mpg의 시각화 : 4차원, 5차원",
    "text": "6. mpg의 시각화 : 4차원, 5차원\n\nset(df['drv'])  ## 4륜구동, 전륜구동(front), 후륜구동(r)\n\n{'4', 'f', 'r'}\n\n\n\ndrive metiod에 더 중점\n\n\nggplot(df) + geom_point(aes(x = 'displ', y = 'hwy', color = 'drv', shape = 'class'), size = 4, alpha = 0.5)\n\n\n\n\n&lt;Figure Size: (900 x 750)&gt;\n\n\n\n4륜구동이 연비가 낮은 걸 확인할 수 있다.\n\n\n5차원 시각화\n\n\nset(df['cyl'])  ## 실린더 수, 4,5,6,8\n\n{4, 5, 6, 8}\n\n\n\nggplot(df) + geom_point(aes(x='displ',y='hwy',color='drv',shape='class', size = 'cyl'), alpha = 0.5)  ## 외부 파라미터에 size는 제거\n\n\n\n\n&lt;Figure Size: (900 x 750)&gt;\n\n\n\n여기까지가 기본적인 사용 방법이다."
  },
  {
    "objectID": "unrefined file/datavisuallization/learning materials/강신성_0918.html#객체지향적-시각화",
    "href": "unrefined file/datavisuallization/learning materials/강신성_0918.html#객체지향적-시각화",
    "title": "4. mpg의 시각화 : 2차원",
    "section": "7. 객체지향적 시각화",
    "text": "7. 객체지향적 시각화\n- ggplot의 정체는 뭐지?\n\ntype(ggplot)\n\ntype\n\n\n\nclass. 어떤 물체를 만들어내는 함수와 비슷.\n\n\nggplot(df)\n\n\n\n\n&lt;Figure Size: (900 x 750)&gt;\n\n\n\nfig = ggplot(df)\n\n\nfig ## 빈 그림이 나온다.\n\n\n\n\n&lt;Figure Size: (900 x 750)&gt;\n\n\n\ntype(geom_point)  ## class, 생성함수.\n\nplotnine.utils.Registry\n\n\n\ngeom은 그림, 그래프\n\n\nfig  = ggplot(df)\npoint = geom_point(aes(x = 'displ', y = 'hwy'))\n\n\npoint ## 아무것도 나오지 않음\n\n&lt;plotnine.geoms.geom_point.geom_point at 0x7f0c836a3790&gt;\n\n\n\nfig + point\n\n\n\n\n&lt;Figure Size: (900 x 750)&gt;\n\n\ngeom_smooth()\n\nsmooth = geom_smooth(aes(x = 'displ', y = 'hwy'))\n\n\nfig + smooth  ## ggplot(df) + geom_smooth(aes(x = 'displ', y = 'hwy')), 추세선 산출\n\n/usr/local/lib/python3.10/dist-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n\n\n\n\n\n&lt;Figure Size: (900 x 750)&gt;\n\n\ngeom_point() + geom_smooth()\n\nfig + point + smooth\n\n/usr/local/lib/python3.10/dist-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n\n\n\n\n\n&lt;Figure Size: (900 x 750)&gt;\n\n\n\nggplot(df) + geom_point(aes(x = 'displ', y = 'hwy')) + geom_smooth(aes(x = 'displ', y = 'hwy'))\n\n/usr/local/lib/python3.10/dist-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n\n\n\n\n\n&lt;Figure Size: (900 x 750)&gt;\n\n\ngeom_point() – better\n\npoint_better = geom_point(aes(x='displ',y='hwy',color='drv',size='cyl'),alpha=0.5)\n\n\nfig + point_better\n\n\n\n\n&lt;Figure Size: (900 x 750)&gt;\n\n\ngeom_smooth – better\n\nsmooth_better = geom_smooth(aes(x = 'displ',  y = 'hwy', color = 'drv'), linetype = 'dashed')  ## 차종별로 추세선\n\n\nfig + smooth_better\n\n/usr/local/lib/python3.10/dist-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n/usr/local/lib/python3.10/dist-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n/usr/local/lib/python3.10/dist-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n\n\n\n\n\n&lt;Figure Size: (900 x 750)&gt;\n\n\n\nfig + smooth_better + smooth\n\n/usr/local/lib/python3.10/dist-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n/usr/local/lib/python3.10/dist-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n/usr/local/lib/python3.10/dist-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n/usr/local/lib/python3.10/dist-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n\n\n\n\n\n&lt;Figure Size: (900 x 750)&gt;\n\n\n\n다양한 조합\n\nfig, point, smooth\n\n\nfig + point + smooth\n\n/usr/local/lib/python3.10/dist-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n\n\n\n\n\n&lt;Figure Size: (900 x 750)&gt;\n\n\n\nfig + smooth_better + point_better\n\n/usr/local/lib/python3.10/dist-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n/usr/local/lib/python3.10/dist-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n/usr/local/lib/python3.10/dist-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n\n\n\n\n\n&lt;Figure Size: (900 x 750)&gt;\n\n\n\nfig + smooth_better + point_better + geom_smooth(aes(x = 'displ', y = 'hwy'), color = 'white', linetype = 'dashed', size = 3)\n\n/usr/local/lib/python3.10/dist-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n/usr/local/lib/python3.10/dist-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n/usr/local/lib/python3.10/dist-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n/usr/local/lib/python3.10/dist-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n\n\n\n\n\n&lt;Figure Size: (900 x 750)&gt;\n\n\n\ndf[df['cyl'] == '7']\n\n\n  \n    \n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass"
  },
  {
    "objectID": "unrefined file/datavisuallization/learning materials/강신성_0918.html#아이스크림을-많이-먹으면-걸리는-병",
    "href": "unrefined file/datavisuallization/learning materials/강신성_0918.html#아이스크림을-많이-먹으면-걸리는-병",
    "title": "4. mpg의 시각화 : 2차원",
    "section": "아이스크림을 많이 먹으면 걸리는 병",
    "text": "아이스크림을 많이 먹으면 걸리는 병\n교회의 개수, 범죄 건수\n전주 : 100, 20 부산 : 1000, 200 서울 : 5000, 1000\n\n배경없이 숫자만 비교할 경우, 상관관계를 인과관계로 착각할 수도 있다.\n인구에 대한 인과를 착각\n\n- 내용요약 * 여름 → 수영장 → 소아마비 * 여름 → 아이스크림 * 아이스크림과 소아마비는 상관관계가 높다. 따라서 아이스크림 성분 중에서 소아마비를 유발하는 유해물질이 있을 것이다(?)\n\n다른 변인을 통제하고(인구가 동일한 지역), 비교하려는 대상만 차이를 부여해야 한다.\n\n\n기상자료 다운로드\n\ntemp=pd.read_csv('https://raw.githubusercontent.com/guebin/DV2022/master/posts/temp.csv').iloc[:,3].to_numpy()\ntemp  ## n년간 전주시 기온 변화\n\narray([ -0.5,   1.4,   2.6,   2. ,   2.5,   5.9,  12.4,   4.4,   2. ,\n         0.9,   2.5,   2.3,   1.2,   1.4,   0.4,   0.4,   1. ,   0.7,\n         3.2,   3.5,   1.5,   3.5,   6.3,   4.9,   4.9,   7.1,   6.1,\n         6.8,   6.7,   5.1,   4.2,   3.6,   2.5,   1.5,   0.7,  -3.7,\n        -4.1,  -0.3,   2. ,   0.3,   5. ,   8.4,   9.5,   7.4,   8.9,\n        10.6,   0.9,  -3. ,  -1.3,   2.9,   5.9,   9.2,   6.1,   3.7,\n         8.8,   8.5,   8.1,   6.5,   6. ,   7.7,   5.6,   4.9,   6.8,\n         3.8,   2.6,   4.5,   7. ,   9.1,   9.4,   6.4,   4.6,   7. ,\n         6.4,   5. ,   6. ,   4.5,   8.3,  12.1,  10.3,   9.7,  15. ,\n        13.4,   9.3,  10.2,  14.7,  15.2,   9.9,   7.2,   8.1,  10.8,\n        11.2,   9.8,   9.4,   9.6,   8. ,   6.3,   8.4,  10.6,   9.6,\n         8.4,   9.9,   8.4,   8.7,   9.8,  11.9,  12. ,  16. ,  14.2,\n        11.5,  11.2,  10.8,   8.7,   7.6,   9.1,  10.7,  14.7,  13.1,\n        11.9,  12.8,  15.1,  18.9,  23. ,  21.5,  19.6,  17.9,  14.7,\n        20.5,  20.7,  18.6,  17.4,  14.3,  17.8,  16. ,  16.1,  21.5,\n        18.1,  17. ,  20.1,  19.4,  13.9,  15.4,  17.8,  19.7,  20.6,\n        18.3,  16.5,  17.9,  18.4,  18.3,  21.1,  22.8,  20.9,  19.5,\n        20. ,  23.3,  24.5,  24. ,  23.2,  23.3,  25.7,  27.3,  26. ,\n        25.1,  23.8,  24.5,  22.9,  22.4,  22.8,  22.3,  19.8,  22.9,\n        22.9,  24.5,  25.4,  26. ,  23.7,  22.3,  22.8,  24.8,  23.5,\n        22. ,  20.2,  21.1,  23. ,  21.2,  19.9,  22.9,  23.1,  23.9,\n        24.1,  26.2,  25.7,  25.1,  22.3,  21.2,  20.3,  20.6,  23.5,\n        24.1,  24.4,  27.1,  24.3,  24.9,  22.1,  22.4,  21.7,  23.2,\n        23.6,  23.9,  25.1,  24.9,  25.7,  26.3,  26.3,  28. ,  28.4,\n        29.1,  27.9,  26.1,  23.8,  24.2,  27.4,  26.5,  26.7,  28.2,\n        29.1,  29.1,  29. ,  28.7,  28.3,  28.5,  27.9,  27.8,  28. ,\n        26.5,  27.6,  28.6,  30. ,  28.7,  29.6,  27.9,  27. ,  27.6,\n        26.9,  27.3,  24.9,  23.2,  24.1,  22.7,  20.8,  19.5,  23.8,\n        22.2,  23.3,  21.2,  20.7,  21.3,  22. ,  23. ,  22.2,  21.9,\n        20.5,  20. ,  19.8,  18.6,  19.2,  19.5,  21.1,  20.3,  20.1,\n        19.9,  19.6,  18.4,  19.1,  19.9,  20.6,  20. ,  18. ,  14.6,\n        14.9,  16.8,  17.1,  17.3,  17.9,  18.2,  17.2,  13.7,  13.6,\n        12.9,  12.4,  13.5,  13.6,  14.3,  14.8,  14.5,  13.4,  10.7,\n        10.4,  12.4,  12.7,  13.7,  14.3,  11.2,  11.8,  14.1,  12.4,\n        12.5,   7.5,   6.3,   9.5,  13.5,  13.7,   9.6,   7.5,   9.2,\n         9.5,  10.8,  10.8,  12.1,  12.8,  12.8,  15.8,  20.2,  16.4,\n         7.5,   7.9,   8.1,   4.8,   5.7,   6.2,   7.7,   6.3,   3.7,\n         3.4,   3.7,   2.7,   3.9,   2.4,   1.3,   3.8,   4.2,   4.7,\n         2.1,   2.5,   5.9,   6.6,   5.1,   3.1,  -3.4,  -4.4,  -4. ,\n        -2.4,   0.9,  -2.7,  -0.9,   1.7,   2.9,   5.4,   4.7,   1.5,\n         3.4,   5.1,   6.2,   1.9,  -6.5,  -5.3,  -1.6,  -1.3,  -2.1,\n        -0.2,  -1.4,  -3.7, -10.5, -12.4, -10. ,  -6.2,  -4. ,  -0.6,\n         5.8,   5.5,   7.9,  -1.5,  -2.6,  -0.4,  -3.8,   2. ,   8.1,\n         8.4,   9.8,   8.9,   8.1,   5.6,   3.8,  -0.5,  -4.5,   2.1,\n         6.5,   8.3,  -1.9,  -0.7,  -0.1,   2.2,   5.5,   5.5,  -1.1,\n         0. ,   2.6,   5.7,   7.6,   8.3,  10.2,   2.6,  -1.2,  -5.9,\n        -3.8,   3.5,  10.3,  15.9,  10. ,   2.1,   4. ,   4.6,   9.9,\n         9.5,   7.2,  11.2,   3.6,   4.9,   7.2,   8.5,   7.3,   8. ,\n         7.4,   7. ,   8.7,  11. ,   8.8,   8.4,   8.4,  12. ,   9.7,\n         7.6,  10.8,  13.1,   8.9,   6.1,   6.6,   9.6,  11.5,  11.3,\n        12.6,  14.5,  10.6,  11.6,  12.3,  14.2,  16.8,  19.6,  16.6,\n        11.4,  11.6,  12. ,  12.7,  11.9,  12.6,  13.3,  15.6,  13.9,\n         9.3,   8.3,  10.8,  12. ,  10. ,  10.4,  12.1,  14.5,  18.5,\n        21. ,  21.4,  19. ,  17.7,  16.7,  16.6,  16.9,  16.6,  12.9,\n        10.3,  11.6,  14.4,  17.6,  14. ,  16.7,  15.4,  16.1,  16.2,\n        13.6,  16.9,  21.6,  21.6,  22.3,  22.9,  21.1,  15.6,  17.9,\n        20.6,  17.3,  15.3,  18.6,  20.8,  18.8,  16. ,  18.9,  16.5,\n        17.7,  18.6,  21.7,  21.2,  22.8,  24.4,  19.1,  18.7,  21.3,\n        23.4,  24.3,  25.2,  26.7,  24.6,  23.1,  23.8,  21.5,  22.3,\n        20.9,  23.1,  21.7,  21.3,  22.3,  24.3,  23.9,  23.4,  22.2,\n        22.7,  23.5,  23.6,  25. ,  23. ,  23.5,  24.9,  25.8,  26.1,\n        23.8,  23.4,  22.2,  23.2,  25.3,  24.8,  26. ,  26.2,  26.9,\n        28.6,  29.2,  29. ,  29. ,  27.2,  26.3,  25.7,  26.6,  27.4,\n        28.9,  29. ,  29.2,  29.9,  29.6,  29.4,  29.3,  29. ,  28.8,\n        29.2,  28.9,  27. ,  25.9,  27.5,  28.7,  28.6,  28.1,  27.6,\n        26.6,  27.5,  27.4,  27.9,  25.8,  26.1,  25.3,  26.5,  26.6,\n        25.9,  24.3,  24. ,  26.3,  24.5,  25.7,  23.5,  25.3,  24.8,\n        26.3,  21.7,  23.6,  22.7,  24.1,  26.2,  24.3,  23.1,  23.6,\n        23.8,  21.5,  20.9,  22.3,  22.4,  23.3,  23.6,  24.7,  24.7,\n        24.3,  23.8,  24.4,  23.2,  21.3,  23. ,  23.6,  24. ,  23. ,\n        23.4,  21.2,  21.3,  21.5,  22.1,  22.7,  22.3,  21.7,  22.3,\n        21.8,  22.4,  24.5,  25.2,  23.6,  23.2,  21.3,  20.7,  24. ,\n        24.1,  14.9,  16.1,  19.9,  20.4,  18.3,  12.8,   6.7])\n\n\n\nplt.plot(temp)\n\n\n\n\n온도 -&gt; 아이스크림 판매량\n-아래와 같은 관계를 가정하자. \\[\\text{아이스크림 판매량} = 20 + 2 \\times \\text{온도} + \\text{오차}\\]\n\nnp.random.seed(1)   ## 결과가 같도록 시드 설정\n\nicecream = 20 + 2 * temp + np.random.randn(len(temp))*10  ## 오차 : 랜덤넘버, temp의 길이만큼\nplt.plot(temp, icecream, 'o', alpha = 0.5)\n\n\n\n\n온도 -&gt; 소아마비 반응수치\n- 아래와 같은 관계를 가정하자. \\[\\text{소아마비 반응수치} = 30 + 0.5 \\times \\text{온도} + \\text{오차}\\]\n\nnp.random.seed(2)\n\ndisease = 30 + 0.5 * temp + np.random.randn(len(temp))*1\nplt.plot(temp, disease, 'o', alpha = 0.5)\n\n\n\n\n우리가 관측한 상황(온도는 은닉되어 있음)\n\nplt.plot(icecream, disease, 'o', alpha=0.3)\n\n\n\n\n\nnp.corrcoef(icecream,disease)\n\narray([[1.        , 0.86298975],\n       [0.86298975, 1.        ]])\n\n\n여름만 뽑아서 플랏한다면?\n\nplt.plot(icecream,disease,'o',alpha=0.3)\nplt.plot(icecream[temp&gt;25], disease[temp&gt;25],'o') ## 기온이 25도 이상, 즉, 여름(아마도)\n\n\n\n\n\n\nggplot으로 온도구간을 세분화하여 시각화하자.\n\n일단 받아들이고 따라가보자\n\n\ndf = pd.DataFrame({'temp' : temp, 'ice' : icecream, 'dis' : disease})\ndf\n\n\n  \n    \n\n\n\n\n\n\ntemp\nice\ndis\n\n\n\n\n0\n-0.5\n35.243454\n29.333242\n\n\n1\n1.4\n16.682436\n30.643733\n\n\n2\n2.6\n19.918282\n29.163804\n\n\n3\n2.0\n13.270314\n32.640271\n\n\n4\n2.5\n33.654076\n29.456564\n\n\n...\n...\n...\n...\n\n\n651\n19.9\n68.839992\n39.633906\n\n\n652\n20.4\n76.554679\n38.920443\n\n\n653\n18.3\n68.666079\n39.882650\n\n\n654\n12.8\n42.771364\n36.613159\n\n\n655\n6.7\n30.736731\n34.902513\n\n\n\n\n\n656 rows × 3 columns\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n\npd.cut([0,1,2,3,4,5,6,7,8,9,10], bins = 5)  ## 구간을 나누는 함수\n\n[(-0.01, 2.0], (-0.01, 2.0], (-0.01, 2.0], (2.0, 4.0], (2.0, 4.0], ..., (4.0, 6.0], (6.0, 8.0], (6.0, 8.0], (8.0, 10.0], (8.0, 10.0]]\nLength: 11\nCategories (5, interval[float64, right]): [(-0.01, 2.0] &lt; (2.0, 4.0] &lt; (4.0, 6.0] &lt; (6.0, 8.0] &lt;\n                                           (8.0, 10.0]]\n\n\n\ndf.assign(temp_cut = pd.cut(df.temp, bins = 5))   ## 온도를 4구간으로 분할한다\n\n\n  \n    \n\n\n\n\n\n\ntemp\nice\ndis\ntemp_cut\n\n\n\n\n0\n-0.5\n35.243454\n29.333242\n(-3.92, 4.56]\n\n\n1\n1.4\n16.682436\n30.643733\n(-3.92, 4.56]\n\n\n2\n2.6\n19.918282\n29.163804\n(-3.92, 4.56]\n\n\n3\n2.0\n13.270314\n32.640271\n(-3.92, 4.56]\n\n\n4\n2.5\n33.654076\n29.456564\n(-3.92, 4.56]\n\n\n...\n...\n...\n...\n...\n\n\n651\n19.9\n68.839992\n39.633906\n(13.04, 21.52]\n\n\n652\n20.4\n76.554679\n38.920443\n(13.04, 21.52]\n\n\n653\n18.3\n68.666079\n39.882650\n(13.04, 21.52]\n\n\n654\n12.8\n42.771364\n36.613159\n(4.56, 13.04]\n\n\n655\n6.7\n30.736731\n34.902513\n(4.56, 13.04]\n\n\n\n\n\n656 rows × 4 columns\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n\nfig = ggplot(df.assign(temp_cut = pd.cut(df.temp,bins=7)))\npoint = geom_point(aes(x='ice',y='dis',color='temp_cut'),alpha=0.5)\n\nfig +point  ## 상관관계가 없어보인다.\n\n\n\n\n&lt;Figure Size: (900 x 750)&gt;\n\n\n\ncut_df = df.assign(temp_cut = pd.cut(df.temp, bins = 7))\n\nfig = ggplot(cut_df)\npoint = geom_point(aes(x = 'ice', y = 'dis', color = 'temp_cut'), alpha = 0.2)\nsmooth = geom_smooth(aes(x = 'ice', y = 'dis', color = 'temp_cut'), linetype = 'dashed')\n\nfig + point + smooth\n\n/usr/local/lib/python3.10/dist-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n/usr/local/lib/python3.10/dist-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n/usr/local/lib/python3.10/dist-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n/usr/local/lib/python3.10/dist-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n/usr/local/lib/python3.10/dist-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n/usr/local/lib/python3.10/dist-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n/usr/local/lib/python3.10/dist-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n\n\n\n\n\n&lt;Figure Size: (900 x 750)&gt;\n\n\n\n\n진짜 아이스크림을 먹고 배탈이 났다면?\n\nnp.random.seed(2)\nicecream = 30 + 0.5 * temp + np.random.randn(len(temp))*1\n\n\nnp.random.seed(2)\ndisease = 30 + 0 * temp + 0.15 * icecream + np.random.randn(len(temp))*1  ## temp, 온도가 미치는 영향을 제로로\n\n\ndf2 = pd.DataFrame({'temp' : temp, 'ice' : icecream, 'dis' : disease})\ndf2.assign(temp_cut = pd.cut(df2.temp, bins = 7))\n\n\n  \n    \n\n\n\n\n\n\ntemp\nice\ndis\ntemp_cut\n\n\n\n\n0\n-0.5\n29.333242\n33.983228\n(-6.343, -0.286]\n\n\n1\n1.4\n30.643733\n34.540293\n(-0.286, 5.771]\n\n\n2\n2.6\n29.163804\n32.238374\n(-0.286, 5.771]\n\n\n3\n2.0\n32.640271\n36.536311\n(-0.286, 5.771]\n\n\n4\n2.5\n29.456564\n32.625049\n(-0.286, 5.771]\n\n\n...\n...\n...\n...\n...\n\n\n651\n19.9\n39.633906\n35.628992\n(17.886, 23.943]\n\n\n652\n20.4\n38.920443\n34.558510\n(17.886, 23.943]\n\n\n653\n18.3\n39.882650\n36.715048\n(17.886, 23.943]\n\n\n654\n12.8\n36.613159\n35.705132\n(11.829, 17.886]\n\n\n655\n6.7\n34.902513\n36.787890\n(5.771, 11.829]\n\n\n\n\n\n656 rows × 4 columns\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n\nfig = ggplot(df2.assign(temp_cut = pd.cut(df2.temp,bins=7)))\npoint = geom_point(aes(x='ice',y='dis',color='temp_cut'),alpha=0.2)\nsmooth = geom_smooth(aes(x='ice',y='dis',color='temp_cut'),linetype='dashed')\nfig + point + smooth\n\n/usr/local/lib/python3.10/dist-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n/usr/local/lib/python3.10/dist-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n/usr/local/lib/python3.10/dist-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n/usr/local/lib/python3.10/dist-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n/usr/local/lib/python3.10/dist-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n/usr/local/lib/python3.10/dist-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n/usr/local/lib/python3.10/dist-packages/plotnine/stats/smoothers.py:330: PlotnineWarning: Confidence intervals are not yet implemented for lowess smoothings.\n\n\n\n\n\n&lt;Figure Size: (900 x 750)&gt;\n\n\n\n무친 인과관계"
  },
  {
    "objectID": "unrefined file/datavisuallization/learning materials/강신성_0918.html#결론",
    "href": "unrefined file/datavisuallization/learning materials/강신성_0918.html#결론",
    "title": "4. mpg의 시각화 : 2차원",
    "section": "결론",
    "text": "결론\n\n아이스크림 먹어도 소아마비 안걸려!\n\n\n온도라는 흑막(은닉변수)을 잘 찾았고, 결과적으로 온도 -&gt; 아이스크림 판매량 & 소아마비라는 합리적인 진리를 얻을 수 있었다.\n\n\n고려할 흑막이 온도뿐이라는 보장이 있나?\n\n\n이론적으로는 모든 은닉변수들을 통제하였을 경우에도 corr(X,Y)의 절댓값이 1에 가깝다면 그때는 인과성이 있음이라고 주장할 수 있다.(이 경우에도 둘 중 어느것이 원인인지 파악하는 것은 불가)\n즉, 모든 은닉변수를 제거하면 상관성 = 인과성이다.\n\nㄴ 무조건 낼듯? 기초문제(O,X) 등으로 출제합니다. 결과 해석하는 것. ## 시험, 출제, 중간고사, 중간평가, exam, midterm\n\n모든 흑막을 제거하는 건 사실상 불가능하지 않나?\n\n\n실험계획을 잘 하면 흑막을 제거한 효과가 있음(무작위 추출 등)\n인과추론 : 실험계획이 사실상 불가능한 경우가 있음 -&gt; 모인 데이터에서 최대한 흑막2ㆍ3ㆍ4ㆍㆍㆍ등이 비슷한 그룹끼리 “매칭”을 시킨 뒤, 그룹간 corr을 구하여 규명한다!\n\n\n데이터의 수가 방대해지면서 가능해졌다.\n\n중요한 것\n\n자잘한 문법(pd.cut()과 같은 것, 기술적인 부분, 전처리)"
  },
  {
    "objectID": "unrefined file/datavisuallization/learning materials/강신성_0911(객체지향적 시각화).html",
    "href": "unrefined file/datavisuallization/learning materials/강신성_0911(객체지향적 시각화).html",
    "title": "C. 정리 (\\(\\star\\star\\star\\))",
    "section": "",
    "text": "import matplotlib.pyplot as plt\nimport numpy as np\nimport matplotlib\n\n\nfig = plt.Figure()\nax = fig.add_axes([0.125,0.11,0.775,0.77])\nax.set_xlim([-0.15, 3.15])  # setting x axis limit\nax.set_ylim([0.9, 3.1])     # setting y axis limit\nline = matplotlib.lines.Line2D(\n    xdata = [0,1,2,3],\n    ydata = [1,2,3,2],\n    linestyle = '--',\n    marker = 'o'\n)\nax.add_line(line)\nfig\n\n\n\n\n\n개념 :\nFigure(fig) : 도화지\nAxes(ax) : 도화지에 존재하는 그림틀\nAxis, Lines : 그림틀 위에 올려지는 물체(object)\n\n\nfig = plt.figure(); fig   ## 최상위 하이라이트인 그림만 만들어냄.\n\n&lt;Figure size 640x480 with 0 Axes&gt;\n\n\n&lt;Figure size 640x480 with 0 Axes&gt;\n\n\n\nfig.add_axes([0,0,1,1]); fig ## 가로시작, 세로시작, 종횡비\n\n\n\n\n\nax = fig.add_axes([0,0,1,1])\ntype(ax)\n\nmatplotlib.axes._axes.Axes\n\n\n\nline = matplotlib.lines.Line2D(\n    xdata = [0,1,2,3],\n    ydata = [1,2,3,2],\n    linestyle = '--',\n    marker = 'o'\n)\n\n\nax.add_line(line)\n\n&lt;matplotlib.lines.Line2D at 0x7f867dbca500&gt;\n\n\n\nfig\n\n\n\n\n\nfig = plt.Figure()\nax = fig.add_axes([0.125, 0.11, 0.775, 0.77])\nax.set_xlim([-0.15, 3.15])\nax.set_ylim([0.9, 3.1])\nline = matplotlib.lines.Line2D(\n    xdata=[0,1,2,3],\n    ydata=[1,2,3,2],\n    linestyle='--',\n    marker='o'\n)\nax.add_line(line)\nfig\n\n\n\n\n\nplt.plot([1,2,3,2], '--o')\n_fig = plt.gcf()\n\n\n\n\n\nLine2D 오브젝트를 쓰지 않는 방법\n\n\n## genarally\n\nfig = plt.Figure()\nax = fig.add_axes([0.125, 0.11, 0.775, 0.77])\nax.plot([1,2,3,2], '--o')\nfig\n\n\n\n\n\nadd_axes()를 쓰지 않는 방법 *** (중요!)\n\n\nfig = plt.Figure()\nax = fig.subplots(1)\nax.plot([1,2,3,2], '--o')\nfig\n\n\n\n\n\nplt.subplots??  ## Figure, axes를 산출해주는 함수\n\nSyntaxError: ignored\n\n\n\nfig, ax = plt.subplots(1) ## 중요함\n\n\n\n\n\nax.plot([1,2,3,2], '--o')\n\n\nfig\n\n\n\n\n\nplt.plot([1,2,3,2], '--o')\n\n\n\n\n\nfig, ax = plt.subplots()\nax.plot([1,2,3,2], '--o')\n\n\n\n\n\nfig = plt.Figure()\nax = fig.subplots()\nax.plot([1,2,3,2], '--o')\nfig\n\n\n\n\n\nfig = plt.Figure()\nax = fig.add_axes([0.125, 0.11, 0.775, 0.77])\nax.plot([1,2,3,2], '--o')\nfig\n\n\n\n\n\n미니맵\n\n\nfig = plt.Figure()\nax = fig.add_axes([0,0,2,2]); fig\n\n\n\n\n\nax_mini = fig.add_axes([1.4,0.2,0.5,0.5])\nax.plot([1,5,3,4], '--o')\nax_mini.plot([1,2,3,1], '--or')\n\n\nfig\n\n\n\n\n\nSubplot\n\n\nfig, axs = plt.subplots(2)\n\n\n\n\n\naxs[0].plot([1,2,3,2], '--r')\naxs[1].plot([1,2,4,3], '--o')\n\n\nfig\n\n\n\n\n\nfig.tight_layout()\n\n\nfig\n\n\n\n\n\nfig, (ax1, ax2) = plt.subplots(2)\nax1.plot([1,2,3,2], '--r')\nax2.plot([1,2,4,3], '--o')\nfig.tight_layout()\n\n\n\n\n그래프의 스케일을 조정하고 싶을 때\n\n##-----이미 만들었다면----\nfig, (ax1, ax2) = plt.subplots(2, figsize = (4,4))\nax1.plot([1,2,3,2], '--r')\nax2.plot([1,2,4,3], '--o')\nfig.tight_layout()\n\n\n\n\n\nfig, ((ax1, ax2),(ax3,ax4)) = plt.subplots(2,2, figsize = (4,4))\nax1.plot([1,2,4,3], 'o', color = 'C0')\nax2.plot([1,2,4,3], 'o', color = 'C1')\nax3.plot([1,2,4,3], 'o', color = 'C2')\nax4.plot([1,2,4,3], 'o', color = 'C3')\nfig.tight_layout()\n\n\n\n\nplt.subplot() ## s가 없는 subplot(), 즉, 하나만 만들어진다.\n\nplt.figure(figsize=(4,4))\nplt.subplot(2,2,1)\nplt.plot([1,2,4,3],'o', color='C0')\nplt.subplot(2,2,2)\nplt.plot([1,2,4,3],'o', color='C1')\nplt.subplot(2,2,3)\nplt.plot([1,2,4,3],'o', color='C2')\nplt.subplot(2,2,4)\nplt.plot([1,2,4,3],'o', color='C3')\nplt.tight_layout()\n\nfig = plt.gcf()\n\n\n\n\n\nfig.set_size_inches(2,2); fig\n\n\n\n\n\nplt.figure(figsize=(8,6))\nplt.subplot(2,2,1)\nplt.plot([1,2,4,3],'o', color='C0')\nplt.subplot(2,2,2)\nplt.plot([1,2,4,3],'o', color='C1')\nplt.subplot(2,2,3)\nplt.plot([1,2,4,3],'o', color='C2')\nplt.subplot(2,2,4)\nplt.plot([1,2,4,3],'o', color='C3')\nplt.tight_layout()\n\n\n\n\n\nTitle &gt; title을 만드는 함수는 어떤 오브젝트에 소속되는 게 좋을까?\n\nplt -&gt; subplot의 제목을 설정 가능\nfig -&gt; 전체제목(super title)을 설정할 수 있음\nax -&gt; subplot들의 제목을 설정할 수 있음\n\n\n\n## 일반적인 플롯\n\nplt.plot([1,2,3,2])\nplt.title('asdf')\n\nText(0.5, 1.0, 'asdf')\n\n\n\n\n\n\n## title이 axes에 존재\n\nfig, ax = plt.subplots()\nax.set_title('asdf')\nax.plot([1,2,3,2])\n\n\n\n\n\n##---fig : 원래는 불가능\n\nplt.plot([1,2,3,2])\nfig = plt.gcf()\nfig.suptitle('asdf')\n\nText(0.5, 0.98, 'asdf')\n\n\n\n\n\n\n서브플롯\n\n\nfig, (ax1, ax2) = plt.subplots(1,2)\nax1.set_title('asdf')\nax2.set_title('1234')\nax1.plot([1,2,3,2])\nax2.plot([1,2,3,2])\nfig.tight_layout()\n\n\n\n\n\nplt.subplot(1,2,1)\nplt.plot([1,2,3])\nplt.title('asdf')\nplt.subplot(1,2,2)\nplt.plot([1,2,3])\nplt.title('1234')\nplt.tight_layout()\n\n\n\n\n\nfig, (ax1, ax2) = plt.subplots(1,2)\nax1.set_title('asdf')\nax2.set_title('1234')\nfig.suptitle('asdf1234')\nfig.tight_layout()\n\n\n\n\n\nfig, (ax1, ax2) = plt.subplots(1,2)\nax1.set_title('asdf')\nax2.set_title('1234')\nax1.plot([1,2,3,2])\nax2.plot([1,2,3,2])\nfig.tight_layout()\n\n_fig = plt.gcf()\n\n\nplt.gca() ## 현재 선언중인 axes를 획득\n\n\nplt.plot([1,2,3,2])\nax = plt.gca()\nax.set_title('asdf')  ## 즉시 제목을 붙이는 코드, 쌓아놓은 모든 것을 지키는 데에 유리\n\nText(0.5, 1.0, 'asdf')\n\n\n\n\n\n\n산점도 응용예제1 – 표본상관계수\n\n\nweight = [44,48,49,58,62,68,69,70,76,79]\nheight = [159,160,162,165,167,162,165,175,165,172]\n\n\nplt.plot(weight,height,'.')\n\n\n\n\n- (표본)상관계수\n\\[r=\\frac{\\sum_{i=1}^{n}(x_i-\\bar{x})(y_i-\\bar{y}) }{\\sqrt{\\sum_{i=1}^{n}(x_i-\\bar{x})^2\\sum_{i=1}^{n}(y_i-\\bar{y})^2 }}=\\sum_{i=1}^{n}\\tilde{x}_i\\tilde{y}_i \\]\n\n단, \\(\\tilde{x}_i=\\frac{(x_i-\\bar{x})}{\\sqrt{\\sum_{i=1}^n(x_i-\\bar{x})^2}}\\), \\(\\tilde{y}_i=\\frac{(y_i-\\bar{y})}{\\sqrt{\\sum_{i=1}^n(y_i-\\bar{y})^2}}\\)\n\n\nx=[44,48,49,58,62,68,69,70,76,79]\ny=[159,160,162,165,167,162,165,175,165,172]\n\n(평균을 0으로)\n\nxx = x - np.mean(x); print(xx)\nyy = y - np.mean(y); print(yy)\n\n[-18.3 -14.3 -13.3  -4.3  -0.3   5.7   6.7   7.7  13.7  16.7]\n[-6.2 -5.2 -3.2 -0.2  1.8 -3.2 -0.2  9.8 -0.2  6.8]\n\n\n(퍼진 정도를 표준화)\n\nxxx = xx/np.sqrt(np.sum(xx**2))\nyyy = yy/np.sqrt(np.sum(yy**2))\n\n\nnp.sum(xxx*yyy)\n\n0.7138620583559141\n\n\n\nnp.corrcoef(x,y)\n\narray([[1.        , 0.71386206],\n       [0.71386206, 1.        ]])\n\n\n\nfig, (ax1, ax2, ax3) = plt.subplots(1,3, figsize = (10,3))\nax1.plot(x,y, 'o')\nax2.plot(xx,yy,'o') ## mean to 0\nax3.plot(xxx,yyy,'o') ## standarized\nax3.set_title(r'$(\\tilde{x}_i,\\tilde{y}_i)$')\n\nText(0.5, 1.0, '$(\\\\tilde{x}_i,\\\\tilde{y}_i)$')\n\n\n\n\n\n\nx=np.arange(0,10,0.1)\ny1=x+np.random.normal(loc=0,scale=1.0,size=len(x))\ny2=x+np.random.normal(loc=0,scale=7.0,size=len(x))\n\n\nplt.plot(x,y1,'.')\nplt.plot(x,y2,'x')\nplt.show()\n\n\n\n\n\ndef tilde(x):\n    xx = x-np.mean(x)\n    xxx = xx / np.sqrt(np.sum(xx**2))\n    return xxx\n\n\nfig, (ax1, ax2) = plt.subplots(1,2, figsize = (4,2))\nax1.plot(x,y1,'.'); ax1.plot(x,y2,'x'); ax1.set_title(r'$(x_i,y_i)$')\nax2.plot(tilde(x), tilde(y1),'.'); ax2.plot(tilde(x), tilde(y2), 'x'); ax2.set_title(r'$(\\tilde{x}_i,\\tilde{y}_i)$')\nfig.tight_layout()\n\n\n\n\n\nx=np.arange(0,10,0.1)\ny1=x+np.random.normal(loc=0,scale=1.0,size=len(x))\ny2=0.2*x+np.random.normal(loc=0,scale=1.0,size=len(x))\n\n\nplt.plot(x,y1,'.')\nplt.plot(x,y2,'x')\n\n\n\n\n\nfig, (ax1,ax2) = plt.subplots(1,2,figsize=(4,2))\nax1.plot(x,y1,'.'); ax1.plot(x,y2,'x'); ax1.set_title(r'$(x_i,y_i)$')\nax2.plot(tilde(x),tilde(y1),'.'); ax2.plot(tilde(x),tilde(y2),'x'); ax2.set_title(r'$(\\tilde{x}_i,\\tilde{y}_i)$')\nfig.tight_layout()\n\n\n\n\n기울기가 클수록, 퍼짐 정도가 작을수록 상관계수의 절댓값이 높다.\n\n산점도 응용예제2 – 앤스콤의 4분할\n\n\nx1 = [10, 8, 13, 9, 11, 14, 6, 4, 12, 7, 5]\ny1 = [8.04, 6.95, 7.58, 8.81, 8.33, 9.96, 7.24, 4.26, 10.84, 4.82, 5.68]\n\nx2 = x1\ny2 = [9.14, 8.14, 8.74, 8.77, 9.26, 8.10, 6.13, 3.10, 9.13, 7.26, 4.74]\n\nx3 = x1\ny3 = [7.46, 6.77, 12.74, 7.11, 7.81, 8.84, 6.08, 5.39, 8.15, 6.42, 5.73]\n\nx4 = [8, 8, 8, 8, 8, 8, 8, 19, 8, 8, 8]\ny4 = [6.58, 5.76, 7.71, 8.84, 8.47, 7.04, 5.25, 12.50, 5.56, 7.91, 6.89]\n\n\nfig, ((ax1,ax2),(ax3,ax4)) = plt.subplots(2,2,figsize=(6,4))\nax1.plot(x1,y1,'o'); ax1.set_title(f'corrcoef = {np.corrcoef(x1,y1)[0,1] : .6f}')\nax2.plot(x2,y2,'o'); ax2.set_title(f'corrcoef = {np.corrcoef(x2,y2)[0,1] : .6f}')\nax3.plot(x3,y3,'o'); ax3.set_title(f'corrcoef = {np.corrcoef(x3,y3)[0,1] : .6f}')\nax4.plot(x4,y4,'o'); ax4.set_title(f'corrcoef = {np.corrcoef(x4,y4)[0,1] : .6f}')\nfig.tight_layout()\n\n\n\n\n4개의 그림은 모두 같은 상관계수를 가지나, 그 느낌이 전혀 다르다.\n\nfig, ((ax1,ax2),(ax3,ax4)) = plt.subplots(2,2, figsize = (5,5))\nax1.plot(x1,y1,'o')\nax2.plot(x2,y2,'o')\nax3.plot(x3,y3,'o')\nax4.plot(x4,y4,'o')\nfig.tight_layout()\n\n\n\n\n\nprint(np.corrcoef(x1,y1))\nprint(np.corrcoef(x2,y2))\nprint(np.corrcoef(x3,y3))\nprint(np.corrcoef(x4,y4))\n\n[[1.         0.81642052]\n [0.81642052 1.        ]]\n[[1.         0.81623651]\n [0.81623651 1.        ]]\n[[1.         0.81628674]\n [0.81628674 1.        ]]\n[[1.         0.81652144]\n [0.81652144 1.        ]]\n\n\n산점도가 선형성을 보일 때만 표본상관계수가 1에 가까우므로 정비례의 관계에 있다라는 논리전개가 성립한다.\n\n1번만 의미가 있음. 3번의 경우 이상치가 존재하여 신뢰할 수 없음.\n\n\nx1 + [1]\n\n[10, 8, 13, 9, 11, 14, 6, 4, 12, 7, 5, 1]"
  },
  {
    "objectID": "unrefined file/datavisuallization/learning materials/code summation.html",
    "href": "unrefined file/datavisuallization/learning materials/code summation.html",
    "title": "RiverFlow",
    "section": "",
    "text": "###Learning codes\n\nplt.boxplot() ## 박스플롯 생성\n\n\nnp.random.randn() ## 정규분포 하 확률변수 추출\n\n\nnp.random.seed() ## 임의추출자료 계량화\n\n\nplt.hist()  ## 히스토그램 생성\n\n\n!wget link  ## 파일 다운로드(리눅스)\n\n\ncv2.imread()  ## 이미지를 행렬로 읽어들임\n\n\nplt.imshow()  ## 행렬로 저장된 이미지를 읽음\n\n\ncv2.equalizeHist()  ## 히스토그램 이퀼라이제이션(대비 향상)"
  },
  {
    "objectID": "posts/R Programming/Economatrics_hw2.html",
    "href": "posts/R Programming/Economatrics_hw2.html",
    "title": "강신성(202014107).html",
    "section": "",
    "text": "————————————————homework 2————————————————"
  },
  {
    "objectID": "posts/R Programming/Economatrics_hw2.html#we-learned-the-following-r-code-in-class.-answer-the-following-questions-using-this-code.",
    "href": "posts/R Programming/Economatrics_hw2.html#we-learned-the-following-r-code-in-class.-answer-the-following-questions-using-this-code.",
    "title": "강신성(202014107).html",
    "section": "We learned the following R code in class. Answer the following questions using this code.",
    "text": "We learned the following R code in class. Answer the following questions using this code.\n————————example: Scatter Plot————————\n\nn&lt;-1000\nx&lt;-4+rnorm(n,mean=1,sd=5)\ny&lt;-1+2*x+rnorm(n,mean=0,sd=4)\n\ndev.new()\nplot(x,y, pch=16, col=\"blue\", \n     main=expression(paste(\"Sampling under \", beta[0], \n                           \"=1\", \" \", \"and\", \" \", beta[1], \"=2\")))\ntext(10, 2, \"scatter plot\", cex=1.5)\nabline(a=1,b=2, col=\"red\", lwd=3)\n\n\n\nquestion 1: Compute the mean values of x and y using “for loop”!\nDo not use built-in functions!!!\n\n평균을 내주는 함수 : mean_values() 정의\n\n\nmean_values &lt;- function(values) {\n  output &lt;- 0\n  \n  for (i in values) {\n    output &lt;- output + i\n  }\n\n  output / length(values)   ## 평균을 구하기 위해 자료의 수(length)로 나누어준다.\n}\n\nmean_values(x)   ## x의 평균을 계산\n\n[1] 5.063285\n\nmean_values(y)   ## y의 평균을 계산\n\n[1] 11.18455\n\n\n\n\nquestion 2: Compute the covariance between x and y using “for loop”!\nDo not use built-in functions!!!\n\n공분산을 내주는 함수 : cov_values() 정의\n\n\ncov_values &lt;- function(data_1, data_2) {\n  x_diff &lt;- data_1 - mean_values(data_1)   ## 위에서 정의했던 함수 \"mean_values()\" 사용\n  y_diff &lt;- data_2 - mean_values(data_2)\n\n  xy_product &lt;- x_diff * y_diff\n  \n  product_sum &lt;- 0\n  \n  for (i in xy_product) {\n    product_sum &lt;- product_sum + i\n  }\n  \n  cov = product_sum / length(xy_product)\n  \n  cov\n}\n\ncov_values(x,y)   ## output\n\n[1] 47.40633\n\n\n\n\nquestion 3: Compute the variance x using “for loop”!\nDo not use built-in functions!!!\n\n분산을 내어주는 함수 : var_values() 정의\n\n\nvar_values &lt;- function(values) {\n  x_diff_sq &lt;- (values - mean_values(values))^2   ## 위에서 정의했던 함수 \"mean_values()\" 사용하여 차의 제곱 행렬 생성\n  \n  sum_x_sq &lt;- 0\n  \n  for (i in x_diff_sq) {\n    sum_x_sq &lt;- sum_x_sq + i\n  }\n  \n  var_x &lt;- sum_x_sq / length(values)  ## 자료의 수로 나누어 분산 산출\n  \n  var_x\n}\n\nvar_values(x)     ## output\n\n[1] 23.59972\n\n\n\n\nquestion 4: Compute the parameter beta[1] (slope of the regression line)!\n\n최소제곱법으로 beta[1]의 값을 추정해보자\n\n\nbeta_1_hat &lt;- cov_values(x, y) / var_values(x)  ## 위에서 정의한 함수를 사용 : x와 y의 공분산 / x의 분산\n\nbeta_1_hat  ## output\n\n[1] 2.008767"
  },
  {
    "objectID": "posts/Machine Learning in Practice/Titanic/3. autogluon.html",
    "href": "posts/Machine Learning in Practice/Titanic/3. autogluon.html",
    "title": "[Kaggle] titanic_autogluon",
    "section": "",
    "text": "import numpy as np\nimport pandas as pd\npip install autogluon\n## tabular(테이블) 형식의 데이터를 다루는 모듈을 다운로드한다.\nfrom autogluon.tabular import TabularDataset, TabularPredictor\n\nC:\\Users\\hollyriver\\anaconda3\\envs\\ag\\lib\\site-packages\\tqdm\\auto.py:21: TqdmWarning: IProgress not found. Please update jupyter and ipywidgets. See https://ipywidgets.readthedocs.io/en/stable/user_install.html\n  from .autonotebook import tqdm as notebook_tqdm"
  },
  {
    "objectID": "posts/Machine Learning in Practice/Titanic/3. autogluon.html#분석의-절차",
    "href": "posts/Machine Learning in Practice/Titanic/3. autogluon.html#분석의-절차",
    "title": "[Kaggle] titanic_autogluon",
    "section": "분석의 절차",
    "text": "분석의 절차\n\nA. 데이터\n\ntr = TabularDataset('/kaggle/input/titanic/train.csv')\ntst = TabularDataset('/kaggle/input/titanic/test.csv')\n\n## tr = pd.read_csv('/kaggle/input/titanic/train.csv')\n## tst\n\n\n\nB. Predictor 생성\n\npredictor = TabularPredictor('Survived')\n\n\n\nC. 적합(fit)\n\n학습 과정에 해당\n\n\n\nD. 예측(predict)"
  },
  {
    "objectID": "posts/Machine Learning in Practice/Titanic/1. practice.html",
    "href": "posts/Machine Learning in Practice/Titanic/1. practice.html",
    "title": "[Kaggle] titanic_1st practice",
    "section": "",
    "text": "import numpy as np\nimport pandas as pd\n# 캐글에 있는 노트북을 이용하면 가상 컴퓨터에 세 개의 파일들이 직접 들어온다.\n\ntr = pd.read_csv(\"/kaggle/input/titanic/train.csv\")\ntr.head()\ntst = pd.read_csv('/kaggle/input/titanic/test.csv')\ntst.head()"
  },
  {
    "objectID": "posts/Machine Learning in Practice/Titanic/1. practice.html#a.test---분석단계에서는-답을-모름-제출해야-알-수-있음",
    "href": "posts/Machine Learning in Practice/Titanic/1. practice.html#a.test---분석단계에서는-답을-모름-제출해야-알-수-있음",
    "title": "[Kaggle] titanic_1st practice",
    "section": "A.test - 분석단계에서는 답을 모름, 제출해야 알 수 있음",
    "text": "A.test - 분석단계에서는 답을 모름, 제출해야 알 수 있음\n-제출 결과는 리더보드에서 확인 가능"
  },
  {
    "objectID": "posts/Machine Learning in Practice/Titanic/1. practice.html#b.-train---스스로-풀어보고-채점할-수-있음",
    "href": "posts/Machine Learning in Practice/Titanic/1. practice.html#b.-train---스스로-풀어보고-채점할-수-있음",
    "title": "[Kaggle] titanic_1st practice",
    "section": "B. train - 스스로 풀어보고 채점할 수 있음",
    "text": "B. train - 스스로 풀어보고 채점할 수 있음\n\ndf = pd.DataFrame({'surv' : [1,0,1,1,0], 'sex' : ['f','m','f','m','m']})\n\n\ndf.surv\n\n\ndf.sex\n\n\n(df.sex == 'f')*1\n\n\npd.DataFrame({'real' : df.surv, 'estimate' : (df.sex == 'f')*1})\n\n\nprint((df.surv == (df.sex == 'f')*1).sum()/5)\nprint((df.surv == (df.sex == 'f')*1).mean())\n\n실제 자료의 accuracy를 구해보자.\n\n(tr.Survived == (tr.Sex == 'female')).mean()\n\n\n개념\n캐글 대회는 시험과 비슷하다. * 캐글대회를 여는 사람은 보통 (1) 모의고사문제+답 (training set) (2) 실제시험문제 (test set)를 준다. * (1)의 자료에서는 문제(X,독립변수,설명변수)와 답(y,종속변수,반응변수)이 함께 주어진다. * (2)의 자료에서는 문제(X,독립변수,설명변수)만 주어진다. * 우리는 (1)을 이용하여 문제(X,독립변수,설명변수)와 답(y,종속변수,반응변수)사이의 관계를 찾아내는 훈련을 한다. * 그리고 그 훈련이 잘 되었는지를 평가하기 위해서 (2)를 풀어보고 그 결과를 제출한다.\n- trainning set\n\ntr.iloc[0] ## 첫 번째 사람의 정보, trainning set\n\n- test set\n\ntst.iloc[0]"
  },
  {
    "objectID": "posts/Data Visualization/Solution Assemble/특정 단어를 포함하는 열 선택.html",
    "href": "posts/Data Visualization/Solution Assemble/특정 단어를 포함하는 열 선택.html",
    "title": "[문제 풀이] 특정 단어를 포함하는 열 선택",
    "section": "",
    "text": "데이터프레임 df의 열이름에 actor라는 단어가 포함된 column만을 선택하는 코드를 작성하라"
  },
  {
    "objectID": "posts/Data Visualization/Solution Assemble/특정 단어를 포함하는 열 선택.html#사전작업",
    "href": "posts/Data Visualization/Solution Assemble/특정 단어를 포함하는 열 선택.html#사전작업",
    "title": "[문제 풀이] 특정 단어를 포함하는 열 선택",
    "section": "1. 사전작업",
    "text": "1. 사전작업\n\n라이브러리 설치\n\n\nimport pandas as pd\nimport numpy as np\n\n\n데이터 불러오기 및 확인\n\n\ndf=pd.read_csv('https://raw.githubusercontent.com/PacktPublishing/Pandas-Cookbook/master/data/movie.csv')\ndf.head()\n\n\n\n\n\n\n\n\ncolor\ndirector_name\nnum_critic_for_reviews\nduration\ndirector_facebook_likes\nactor_3_facebook_likes\nactor_2_name\nactor_1_facebook_likes\ngross\ngenres\n...\nnum_user_for_reviews\nlanguage\ncountry\ncontent_rating\nbudget\ntitle_year\nactor_2_facebook_likes\nimdb_score\naspect_ratio\nmovie_facebook_likes\n\n\n\n\n0\nColor\nJames Cameron\n723.0\n178.0\n0.0\n855.0\nJoel David Moore\n1000.0\n760505847.0\nAction|Adventure|Fantasy|Sci-Fi\n...\n3054.0\nEnglish\nUSA\nPG-13\n237000000.0\n2009.0\n936.0\n7.9\n1.78\n33000\n\n\n1\nColor\nGore Verbinski\n302.0\n169.0\n563.0\n1000.0\nOrlando Bloom\n40000.0\n309404152.0\nAction|Adventure|Fantasy\n...\n1238.0\nEnglish\nUSA\nPG-13\n300000000.0\n2007.0\n5000.0\n7.1\n2.35\n0\n\n\n2\nColor\nSam Mendes\n602.0\n148.0\n0.0\n161.0\nRory Kinnear\n11000.0\n200074175.0\nAction|Adventure|Thriller\n...\n994.0\nEnglish\nUK\nPG-13\n245000000.0\n2015.0\n393.0\n6.8\n2.35\n85000\n\n\n3\nColor\nChristopher Nolan\n813.0\n164.0\n22000.0\n23000.0\nChristian Bale\n27000.0\n448130642.0\nAction|Thriller\n...\n2701.0\nEnglish\nUSA\nPG-13\n250000000.0\n2012.0\n23000.0\n8.5\n2.35\n164000\n\n\n4\nNaN\nDoug Walker\nNaN\nNaN\n131.0\nNaN\nRob Walker\n131.0\nNaN\nDocumentary\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n12.0\n7.1\nNaN\n0\n\n\n\n\n5 rows × 28 columns\n\n\n\n\ndf.columns\n\nIndex(['color', 'director_name', 'num_critic_for_reviews', 'duration',\n       'director_facebook_likes', 'actor_3_facebook_likes', 'actor_2_name',\n       'actor_1_facebook_likes', 'gross', 'genres', 'actor_1_name',\n       'movie_title', 'num_voted_users', 'cast_total_facebook_likes',\n       'actor_3_name', 'facenumber_in_poster', 'plot_keywords',\n       'movie_imdb_link', 'num_user_for_reviews', 'language', 'country',\n       'content_rating', 'budget', 'title_year', 'actor_2_facebook_likes',\n       'imdb_score', 'aspect_ratio', 'movie_facebook_likes'],\n      dtype='object')\n\n\n\n열 이름에서 단어의 구분이 모두 '_'로 되어있으므로, 열이름에 split()함수를 적용시킬 수 있을 것 같다."
  },
  {
    "objectID": "posts/Data Visualization/Solution Assemble/특정 단어를 포함하는 열 선택.html#풀이",
    "href": "posts/Data Visualization/Solution Assemble/특정 단어를 포함하는 열 선택.html#풀이",
    "title": "[문제 풀이] 특정 단어를 포함하는 열 선택",
    "section": "2. 풀이",
    "text": "2. 풀이\n\nfor 문을 이용하여 풀이해보자.\n\n\n['actor' in i.split('_') for i in df.columns]\n\n[False,\n False,\n False,\n False,\n False,\n True,\n True,\n True,\n False,\n False,\n True,\n False,\n False,\n False,\n True,\n False,\n False,\n False,\n False,\n False,\n False,\n False,\n False,\n False,\n True,\n False,\n False,\n False]"
  },
  {
    "objectID": "posts/Data Visualization/Solution Assemble/특정 단어를 포함하는 열 선택.html#결과",
    "href": "posts/Data Visualization/Solution Assemble/특정 단어를 포함하는 열 선택.html#결과",
    "title": "[문제 풀이] 특정 단어를 포함하는 열 선택",
    "section": "3. 결과",
    "text": "3. 결과\n\ndf.loc[:, ['actor' in i.split('_') for i in df.columns]]\n\n\n\n\n\n\n\n\nactor_3_facebook_likes\nactor_2_name\nactor_1_facebook_likes\nactor_1_name\nactor_3_name\nactor_2_facebook_likes\n\n\n\n\n0\n855.0\nJoel David Moore\n1000.0\nCCH Pounder\nWes Studi\n936.0\n\n\n1\n1000.0\nOrlando Bloom\n40000.0\nJohnny Depp\nJack Davenport\n5000.0\n\n\n2\n161.0\nRory Kinnear\n11000.0\nChristoph Waltz\nStephanie Sigman\n393.0\n\n\n3\n23000.0\nChristian Bale\n27000.0\nTom Hardy\nJoseph Gordon-Levitt\n23000.0\n\n\n4\nNaN\nRob Walker\n131.0\nDoug Walker\nNaN\n12.0\n\n\n...\n...\n...\n...\n...\n...\n...\n\n\n4911\n318.0\nDaphne Zuniga\n637.0\nEric Mabius\nCrystal Lowe\n470.0\n\n\n4912\n319.0\nValorie Curry\n841.0\nNatalie Zea\nSam Underwood\n593.0\n\n\n4913\n0.0\nMaxwell Moody\n0.0\nEva Boehnke\nDavid Chandler\n0.0\n\n\n4914\n489.0\nDaniel Henney\n946.0\nAlan Ruck\nEliza Coupe\n719.0\n\n\n4915\n16.0\nBrian Herzlinger\n86.0\nJohn August\nJon Gunn\n23.0\n\n\n\n\n4916 rows × 6 columns\n\n\n\n완료"
  },
  {
    "objectID": "posts/Data Visualization/Review/1. Introduction(그래프, 이미지 이퀼라이징).html",
    "href": "posts/Data Visualization/Review/1. Introduction(그래프, 이미지 이퀼라이징).html",
    "title": "Introduction | 그래프, 이미지 이퀼라이징",
    "section": "",
    "text": "파이썬을 이용하여 간단한 그래프를 그려보고, 이미지를 이퀼라이징하는 방법을 알아보도록 하자."
  },
  {
    "objectID": "posts/Data Visualization/Review/1. Introduction(그래프, 이미지 이퀼라이징).html#사전작업",
    "href": "posts/Data Visualization/Review/1. Introduction(그래프, 이미지 이퀼라이징).html#사전작업",
    "title": "Introduction | 그래프, 이미지 이퀼라이징",
    "section": "1. 사전작업",
    "text": "1. 사전작업\n\n라이브러리 import\n\n\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n##--------이퀼라이징을 위한 라이브러리--------\n#!pip install opencv-python\nimport cv2\n\n##--------parameter 설정--------\nimport matplotlib\nmatplotlib.rcParams['figure.figsize'] = (3,2)\nmatplotlib.rcParams['figure.dpi'] = 150 ## 450 : 300\n\n\n오늘 알아볼 함수들\n\nplt.boxplot()      ## 박스플롯 생성\nnp.random.randn()  ## 정규분포 하 확률변수 추출(default : 표준정규분포에서 1개 추출)\nnp.random.seed()   ## 시드 생성\nplt.hist()         ## 히스토그램 생성\ncv2.imread()       ## 이미지를 행렬로 읽어들임\nplt.imshow()       ## 행렬로 저장된 이미지를 시각화\ncv2.equalizeHist() ## 히스토그램 이퀼라이징\n\n!wget link         ## 파일 다운로드(리눅스)"
  },
  {
    "objectID": "posts/Data Visualization/Review/1. Introduction(그래프, 이미지 이퀼라이징).html#플롯",
    "href": "posts/Data Visualization/Review/1. Introduction(그래프, 이미지 이퀼라이징).html#플롯",
    "title": "Introduction | 그래프, 이미지 이퀼라이징",
    "section": "2. 플롯",
    "text": "2. 플롯\n\nA. Boxplot\n전북고등학교에는 10명의 학생이 있는 두 개의 학급이 있고, 각 학생들이 받은 점수는 아래와 같다.\n\ny1 = [75,75,76,76,77,77,78,79,79,98]\ny2 = [76,76,77,77,78,78,79,80,80,81]\n\n\ny1_frame = pd.DataFrame(y1)\ny1_frame.describe()\n\n\n  \n    \n\n\n\n\n\n\n0\n\n\n\n\ncount\n10.000000\n\n\nmean\n79.000000\n\n\nstd\n6.831301\n\n\nmin\n75.000000\n\n\n25%\n76.000000\n\n\n50%\n77.000000\n\n\n75%\n78.750000\n\n\nmax\n98.000000\n\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n- 1반의 평균은 \\(79\\)\n\ny2_frame = pd.DataFrame(y2)\ny2_frame.describe()\n\n\n\n\n\n\n\n\n0\n\n\n\n\ncount\n10.00000\n\n\nmean\n78.20000\n\n\nstd\n1.75119\n\n\nmin\n76.00000\n\n\n25%\n77.00000\n\n\n50%\n78.00000\n\n\n75%\n79.75000\n\n\nmax\n81.00000\n\n\n\n\n\n\n\n- 2반의 평균은 \\(78.2\\)이다.\n그렇다면 1반(y1)과 2반(y2), 두 반을 지도하는 선생님 중 어떤 선생님이 우수할까?\n\n아마도… : 평균을 중심으로 분석할 시 y1이 더 잘 지도했다고 판단할 수 있다.\n반론 : 평균은 A반이 더 높으나, 편차또한 더 크다. 고득점을 받는 한 학생(outlier)을 제외하면 전체적으로 B반 학생들이 시험을 더 잘 보았다고 해석할 수 있다.\n\n단순한 평균비교보다 학생들이 받은 점수의 분포를 비교하는 것이 중요.\n따라서 그 분포를 알아보기 위해 Boxplot을 그려보자.\n\n\nmatplotlib로 boxplot 그리기\n\nplt.boxplot(y1);  ## 세미콜론을 붙이면 결과값만 출력한다.\n\n\n\n\n\nplt.boxplot(y2);\n\n\n\n\n\nplt.boxplot([y1,y2]); ## 2차원의 리스트를 넣어 여러 개를 동시에 출력시킬 수도 있다.\n\n##np.array([y1, y2]).shape ## &gt; (2, 10)\n\n\n\n\n위처럼 하나의 outlier를 배제한다면, 나머지의 분포는 2반이 더 높게 위치함을 알 수 있다.\n\n박스플롯의 장점 : 단순히 평균만 제공하는 것보다 데이터를 파악하고 직관을 얻기에 유용하다.\n박스플롯이 이용되는 범위 : 초기 자료 분포를 파악하기 용이, 두 개 이상의 방법을 비교\n\n\n\nB. Histogram\n- 중심경향치(평균, 중앙값)만 가지고 집단을 비교할 순 없다.\n이전의 자료도 결과론적으로 중앙값이 더 타당해 보이나, 이것을 근거로 B반이 공부를 더 잘했다는 주장도 비합리적이다.\n\n단순 평균비교로 이러한 질문에 답을 하기 어려움.\n박스플롯으로 전체분포를 파악해도 어떤 반이 공부를 더 잘한다는 기준을 잡기 애매함.\n\nBut!\n특수한 경우에는 두 반 중에 누가 더 공부를 잘하냐는 질문에 명확히 대답할 수 있다.\n정규분포 전북고등학교 : 평균은 좋은 측정값인가?\n\nnp.random.seed(43052)\ny1 = np.random.randn(10000)   ## random.randn, standard normal distribution\ny2 = np.random.randn(10000) + 0.5\n\n- 두 반의 성적은 모두 표준정규분포를 따르는데, 2반의 성적이 일괄적으로 0.5가 높은 상황\n\nnp.mean(y1), np.mean(y2)\n\n(-0.011790879905079434, 0.4979147460611458)\n\n\n\nplt.boxplot([y1,y2]);\n\n\n\n\n\n분포의 모양이 거의 비슷한데, 중앙값(평균)이 2반이 더 높으므로 성적이 더 높다고 말할 수 있다. &gt; 게다가 평균적으로 0.5점 정도 더 공부를 잘한다고 대답할 수 있다!\n\n근데, 위와 같은 경우는 정규분포에서 뽑힌 랜덤샘플이라 분포의 모양이 같다고 하긴 했는데… 실제 데이터를 확인할 때는 박스플롯으로 하긴 어려워보인다.\n따라서!\n히스토그램을 그려 확인해보자\nplt.hist(array, bins = int, range = list)\n\nplt.hist([y1, y2], bins = 100);\n\n\n\n\n\n둘의 분포는 비슷하지만, 2반(주황색)이 조금 더 높은 수준에서 자리함을 알 수 있다."
  },
  {
    "objectID": "posts/Data Visualization/Review/1. Introduction(그래프, 이미지 이퀼라이징).html#equalization",
    "href": "posts/Data Visualization/Review/1. Introduction(그래프, 이미지 이퀼라이징).html#equalization",
    "title": "Introduction | 그래프, 이미지 이퀼라이징",
    "section": "3. Equalization",
    "text": "3. Equalization\n히스토그램이나 이미지를 눈으로 보기 쉽도록 이퀼라이징해보자!\n이미지 자료 다운로드\n\n#!pip install wget\nimport wget\n\nwget.download(\"https://upload.wikimedia.org/wikipedia/commons/0/08/Unequalized_Hawkes_Bay_NZ.jpg\")\nimg = cv2.imread(\"Unequalized_Hawkes_Bay_NZ.jpg\")\n\n##--------리눅스 환경 충족 시--------\n##!wget https://upload.wikimedia.org/wikipedia/commons/0/08/Unequalized_Hawkes_Bay_NZ.jpg\n##img = cv2.imread('https://upload.wikimedia.org/wikipedia/commons/0/08/Unequalized_Hawkes_Bay_NZ.jpg')\n##!rm Unequalized_Hawkes_Bay_NZ.jpg\n\n## 파일을 들여오고 인식한 뒤 삭제하는 코드이다.\n\nRequirement already satisfied: wget in c:\\users\\hollyriver\\anaconda3\\envs\\ssk\\lib\\site-packages (3.2)\n100% [............................................................................] 110895 / 110895\n\n\n\nplt.imshow(img) ## image show\n\n&lt;matplotlib.image.AxesImage at 0x184b83fab00&gt;\n\n\n\n\n\n\nplt.imshow()를 통해서 이미지를 가져왔다!\n\n근데, img는 어떤 값으로 저장된 걸까?\n\nA. 사실 이미지는 숫자열이었다!\n\n_img1 = np.array([0,30,90,120,150,180,210,240,255]).reshape(3,-1)  ## 3행 3열로 변경\n_img1\n\narray([[  0,  30,  90],\n       [120, 150, 180],\n       [210, 240, 255]])\n\n\n\nplt.imshow(_img1, cmap = 'gray')\nplt.colorbar()\nplt.show()\n\n\n\n\n\n_img2 = np.array([0,20,40,60,80,100,120,140,160]).reshape(3,3)\n_img2\n\narray([[  0,  20,  40],\n       [ 60,  80, 100],\n       [120, 140, 160]])\n\n\n\nplt.imshow(_img2, cmap = 'gray', vmin = 0, vmax = 255)  ## vmin, vmax를 설정해주지 않으면 가장 큰 값이 max(white)가 된다\nplt.colorbar()\nplt.show()\n\n\n\n\n255에 가까울 수록 하얀색, 0에 가까울 수록 검정색인 이미지로 변환된 것을 볼 수 있다. 숫자만으로 이뤄진 행렬이 이미지가 된 것이다!\n크게, 더 크게 해보자!\n\n_img3 = np.concatenate([_img1,_img2], axis = 1)  ## 열로 병합, default는 행으로 병합\n_img3\n\narray([[  0,  30,  90,   0,  20,  40],\n       [120, 150, 180,  60,  80, 100],\n       [210, 240, 255, 120, 140, 160]])\n\n\n\nplt.imshow(_img3, cmap = 'gray')\nplt.colorbar()\nplt.show()\n\n\n\n\n\n\nB. RGB값을 더한 그림 그리기\n\n먼저, RGB값에 해당하는 수를 각각 array로 지정해주자.\n\n\nr = np.array(\n    [[255, 255, 255,  0,   0],\n     [255, 255, 255,  0,   0],\n     [255, 255, 255,  0,   0],\n     [  0,   0,   0,  0,   0],\n     [  0,   0,   0,  0,   0]]\n)\ng = np.array(\n    [[  0,   0, 255, 255, 255],\n     [  0,   0, 255, 255, 255],\n     [  0,   0, 255, 255, 255],\n     [  0,   0,   0,   0,   0],\n     [  0,   0,   0,   0,   0]]\n)\nb = np.array(\n    [[  0,   0,   0,   0,   0],\n     [  0,   0,   0,   0,   0],\n     [255, 255, 255, 255, 255],\n     [255, 255, 255, 255, 255],\n     [255, 255, 255, 255, 255]]\n)\nz = np.array(\n    [[ 0,  0,  0,  0,  0],\n     [ 0,  0,  0,  0,  0],\n     [ 0,  0,  0,  0,  0],\n     [ 0,  0,  0,  0,  0],\n     [ 0,  0,  0,  0,  0]]\n)\n\n\n그리고 합쳐서 RGB값을 할당해준다.\n\n\nred = np.stack([r,z,z], axis = -1)\ngreen = np.stack([z,g,z], axis = -1)\nblue = np.stack([z,z,b], axis = -1)\n\n\ntemp = np.stack([r,g,b], axis = -1);temp\n\narray([[[255,   0,   0],\n        [255,   0,   0],\n        [255, 255,   0],\n        [  0, 255,   0],\n        [  0, 255,   0]],\n\n       [[255,   0,   0],\n        [255,   0,   0],\n        [255, 255,   0],\n        [  0, 255,   0],\n        [  0, 255,   0]],\n\n       [[255,   0, 255],\n        [255,   0, 255],\n        [255, 255, 255],\n        [  0, 255, 255],\n        [  0, 255, 255]],\n\n       [[  0,   0, 255],\n        [  0,   0, 255],\n        [  0,   0, 255],\n        [  0,   0, 255],\n        [  0,   0, 255]],\n\n       [[  0,   0, 255],\n        [  0,   0, 255],\n        [  0,   0, 255],\n        [  0,   0, 255],\n        [  0,   0, 255]]])\n\n\n\n원소 하나 당 3개의 값이 할당된 것을 알 수 있다.\n\n\nnp.stack([], axis = -1) 크기가 동일한 행렬들의 각 원소들을 리스트화 하여 원소로 저장한다.\n\n\nplt.imshow(red+green+blue)\nplt.show()\n\n\n\n\nR, G, B를 같은 비율로 섞으면 다시 흑백이미지가 된다.\n\narr2 = np.array([[10, 40], [80, 60]])\narr2\n\narray([[10, 40],\n       [80, 60]])\n\n\n\narr3 = np.stack([arr2, arr2, arr2], axis = -1)  ## rgb값이 각각 동일\nplt.imshow(arr3)\nplt.show()\n\n\n\n\n\nimg.shape ## 원소의 리스트 수가 3이라는 것으로 rgb가 포함되어 있음을 추측할 수 있음.\n\n(683, 1024, 3)\n\n\n\n\nC. 히스토그램 이퀼라이징\n그래서 이퀼라이징은 뭐냐고!\n\nimg에서 추출해온 행렬로 아래와 같은 히스토그램을 만들어보자.\n\n\nr = img[:, :, 0]  ## 첫 번째 원소\ng = img[:, :, 1]  ## 두 번째 원소\nb = img[:, :, 2]  ## 세 번째 원소\n\n\nplt.hist(r.reshape(-1),bins=255, range=[0,255])\nplt.show()\n\n\n\n\n\n120~200 사이에 값이 몰려있음\n120~200의 분포된 모양은 그대로 유지하면서 range를 0~255까지 늘린다면?\n\n\nrr = cv2.equalizeHist(r)\ngg = cv2.equalizeHist(g)\nbb = cv2.equalizeHist(b)\n\n\ncv2 라이브러리의 equalizeHist() 사용하면 행렬의 모든 원소들의 분포 정도를 고르게(0~255) 바꾼다.\n\n\nplt.hist(r.reshape(-1),bins=255, range=[0,255],label='befor');\nplt.hist(rr.reshape(-1),bins=255,range=[0,255],label='after');  ## cv2.equalizeHist() 사용\nplt.legend()\nplt.show()\n\n\n\n\n그렇다면 이것을 응용하여 위에서의 이미지를 이퀼라이징하면?\n- 이퀼라이징된 각 원소들을 다시 이어붙여 하나의 이미지로 만들어본다.\n\nimg2 = np.stack([rr,gg,bb], axis = -1)  ## axis = -1 &gt; z축(원소 내에서 확장)으로 추가\nimg2.shape\n\n(683, 1024, 3)\n\n\n\nplt.imshow(img2)\nplt.show()\n\n\n\n\n\nplt.imshow(np.concatenate([img,img2], axis = 1))\nplt.show()\n\n\n\n\n\n이렇게, 이미지를 조금 더 구별하기 쉽도록 바꿀 수 있다."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog\nR과 Python, 그 외 공부하는 데 필요했던 자료들이나 대회, 공모전, 연습했던 것들을 올립니다."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "RiverFlow",
    "section": "",
    "text": "Python을 이용한 문제 풀이, Kaggle competition, R 프로그래밍 연습 등 학습 내역과 작업물들을 기록합니다.\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n  \n\n\n\n\n강신성(202014107).html\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n  \n\n\n\n\nPlot | 꺾은선, 산점도, 객체지향화\n\n\n\n\n\n\n\npython\n\n\nmatplotlib\n\n\n\n\n\n\n\n\n\n\n\nOct 5, 2023\n\n\n강신성\n\n\n\n\n\n\n  \n\n\n\n\nIntroduction | 그래프, 이미지 이퀼라이징\n\n\n\n\n\n\n\npython\n\n\nimage\n\n\n\n\n\n\n\n\n\n\n\nOct 5, 2023\n\n\n강신성\n\n\n\n\n\n\n  \n\n\n\n\n[문제 풀이] while을 이용한 간단한 문제풀이\n\n\n\n\n\n\n\nR\n\n\n\n\n\n\n\n\n\n\n\nSep 26, 2023\n\n\n강신성\n\n\n\n\n\n\n  \n\n\n\n\n[문제 풀이] 데이터프레임 : 특정 열의 재가공\n\n\n\n\n\n\n\npython\n\n\ndata visualization\n\n\n\n\n\n\n\n\n\n\n\nSep 25, 2023\n\n\n강신성\n\n\n\n\n\n\n  \n\n\n\n\n[문제 풀이] 특정 단어를 포함하는 열 선택\n\n\n\n\n\n\n\npython\n\n\ndata visualization\n\n\n\n\n\n\n\n\n\n\n\nSep 21, 2023\n\n\n강신성\n\n\n\n\n\n\n  \n\n\n\n\n[Kaggle] titanic_code by alexis cook\n\n\n\n\n\n\n\npython\n\n\nkaggle\n\n\ntitanic\n\n\n\n\n\n\n\n\n\n\n\nSep 13, 2023\n\n\n강신성\n\n\n\n\n\n\n  \n\n\n\n\n[Kaggle] titanic_autogluon\n\n\n\n\n\n\n\npython\n\n\nkaggle\n\n\ntitanic\n\n\n\n\n\n\n\n\n\n\n\nSep 13, 2023\n\n\n강신성\n\n\n\n\n\n\n  \n\n\n\n\n[Kaggle] titanic_1st practice\n\n\n\n\n\n\n\npython\n\n\nkaggle\n\n\ntitanic\n\n\n\n\n\n\n\n\n\n\n\nSep 13, 2023\n\n\n강신성\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/Data Visualization/Review/2. 꺾은선, 산점도, 객체지향화.html",
    "href": "posts/Data Visualization/Review/2. 꺾은선, 산점도, 객체지향화.html",
    "title": "Plot | 꺾은선, 산점도, 객체지향화",
    "section": "",
    "text": "matplotlib를 이용하여 그래프를 그려보자!"
  },
  {
    "objectID": "posts/Data Visualization/Review/2. 꺾은선, 산점도, 객체지향화.html#사전작업",
    "href": "posts/Data Visualization/Review/2. 꺾은선, 산점도, 객체지향화.html#사전작업",
    "title": "Plot | 꺾은선, 산점도, 객체지향화",
    "section": "1. 사전작업",
    "text": "1. 사전작업\n\n라이브러리 import\n\n\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport matplotlib\nmatplotlib.rcParams['figure.figsize'] = (3, 2)\nmatplotlib.rcParams['figure.dpi'] = 150"
  },
  {
    "objectID": "posts/Data Visualization/Review/2. 꺾은선, 산점도, 객체지향화.html#간단한-꺾은선-그래프",
    "href": "posts/Data Visualization/Review/2. 꺾은선, 산점도, 객체지향화.html#간단한-꺾은선-그래프",
    "title": "Plot | 꺾은선, 산점도, 객체지향화",
    "section": "2. 간단한 꺾은선 그래프",
    "text": "2. 간단한 꺾은선 그래프\nplt.plot()을 사용하여 간단하게 그래프를 그릴 수 있다.\n\ny값만 지정한 경우\n\n\nplt.plot([1,2,4,3])\nplt.show()\n\n\n\n\n\nx값과 y값 같이 지정한 경우\n\n\nplt.plot([1,2,3,4],[1,2,4,3])\nplt.show()\n\n\n\n\n\nx값과 y값에 변수를 지정하여 넣어주는 경우\n\n\nx = [1,2,3,4]\ny = [1,2,4,3]\n\nplt.plot(x,y)\nplt.show()\n\n\n\n\n- 이외에도 다양한 옵션을 사용하여 그래프를 다채롭게 그릴 수 있는데, 지금부터 그것들을 알아보도록 하자.\n\nplt.plot의 옵션\nplt.plot()에서 괄호 안에 문자열을 넣음으로서 세 가지 옵션을 간단하게 적용할 수 있다.\nplt.plot(x,y,'--')  ## 파선 그래프\nplt.plot(x,y,':')   ## 점선 그래프\nplt.plot(x,y,'r')   ## 선의 색상이 빨간색\nplt.plot(x,y,'r--') ## 빨간색의 파선 그래프\n...\n- 게다가 세 옵션을 순서 상관없이 집어넣어 적용 가능하다!\n\nLine StylesColorsMarkers\n\n\n\n\n\ncharacter\ndescription\n\n\n\n\n‘-’\nsolid line style\n\n\n‘–’\ndashed line style\n\n\n‘-.’\ndash-dot line style\n\n\n‘:’\ndotted line style\n\n\n\n\n\n\n\n\ncharacter\ncolor\n\n\n\n\n‘b’\nblue\n\n\n‘g’\ngreen\n\n\n‘r’\nred\n\n\n‘c’\ncyan\n\n\n‘m’\nmagenta\n\n\n‘y’\nyellow\n\n\n‘k’\nblack\n\n\n‘w’\nwhite\n\n\n\n\n\n\n\n\ncharacter\ndescription\n\n\n\n\n‘.’\npoint marker\n\n\n‘,’\npixel marker\n\n\n‘o’\ncircle marker\n\n\n‘v’\ntriangle_down marker\n\n\n‘^’\ntriangle_up marker\n\n\n‘&lt;’\ntriangle_left marker\n\n\n‘&gt;’\ntriangle_right marker\n\n\n‘1’\ntri_down marker\n\n\n‘2’\ntri_up marker\n\n\n‘3’\ntri_left marker\n\n\n‘4’\ntri_right marker\n\n\n‘8’\noctagon marker\n\n\n‘s’\nsquare marker\n\n\n‘p’\npentagon marker\n\n\n‘P’\nplus (filled) marker\n\n\n’*’\nstar marker\n\n\n‘h’\nhexagon1 marker\n\n\n‘H’\nhexagon2 marker\n\n\n‘+’\nplus marker\n\n\n‘x’\nx marker\n\n\n‘X’\nx (filled) marker\n\n\n‘D’\ndiamond marker\n\n\n‘d’\nthin_diamond marker\n\n\n‘|’\nvline marker\n\n\n’_’\nhline marker\n\n\n\n\n\n\n그 외에 다른 옵션을 보고 싶다면 아래를 참조하라.\n\nother options or colors\nhttps://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.plot.html\nhttps://matplotlib.org/2.0.2/examples/color/named_colors.html\nhex code\nhttps://htmlcolorcodes.com/\nother linestyles\nhttps://matplotlib.org/stable/gallery/lines_bars_and_markers/linestyles.html\n\n- preset에 있는 색상 외 다른 색상을 적용\n\nplt.plot(x,y,'--',color = 'lime')\n\n\n\n\n\nusing color name\n\n\nplt.plot(x,y,color = '#751F9B')\n\n\n\n\n\nusing hex code\n\n- 선의 형태를 다양하게 변경\n\nplt.plot(x,y,linestyle = 'dashed')\nplt.show()\n\n\n\n\n\n문자열로 직접 지정\n\n\nplt.plot(x,y,linestyle = (0, (1,1)))\n\n\n\n\n\n파선의 길이를 직접 지정\n\n\n\nplt.plot()에서 scatter plot을 생성\nmarker 옵션을 변경하여 scatter plot을 손쉽게 그릴 수도 있다.\n\nplt.plot(x,y,'db')  ## diamonds, blue\n\n\n\n\n\n\ndot connected plot\n\nplt.plot(x,y,':or')  ## dotline(:), circle(o), red\n\n\n\n\n\n\npile up\nplt.show()를 입력하기 전 계속해서 그래프를 그리면 중첩된다.\n\nplt.plot([1,2,3,2], '--o', color = 'orange')\nplt.plot([2,3,1,4], '--o', color = 'skyblue')\n\nplt.show()\n\nplt.plot([4,4,2,1], '--o', color = 'cyan')\n\nplt.show()\n\n\n\n\n\n\n\n\nplt.plot([1,2,3,2], '--o', color = 'C1')\nplt.plot([2,3,1,4], '--o', color = 'C0')\n\nplt.show()\n\n\n\n\n\n위와 같은 경우에는 color를 지정하지 않을 경우 먼저 입력한 그래프에 C0가 지정된다.\n\n\n\n응용 : scatter plot and line plot\n- 유사 단순선형회귀\n설명변수와 오차, 반응변수를 지정해주자.\n\nx = np.arange(-5,5,0.1)\neps = np.random.randn(100)\ny = 2*x + eps ## 벗어나도록 겹치게\n\n\nplt.plot(x,y,'.b')     ## 실제 데이터\nplt.plot(x,2*x,'--r')  ## 회귀선\nplt.show()\n\n\n\n\n\n\n적합한 그래프를 그릴 때\n- summary: boxplot, histogram, lineplot, scatterplot\n\n라인플랏: 추세\n☆★☆ 스캐터플랏: 두 변수의 관계\n박스플랏: 분포(일상용어)의 비교, 이상치\n히스토그램: 분포(통계용어)파악\n바플랏: 크기비교"
  },
  {
    "objectID": "posts/Data Visualization/Review/2. 꺾은선, 산점도, 객체지향화.html#객체지향적-시각화",
    "href": "posts/Data Visualization/Review/2. 꺾은선, 산점도, 객체지향화.html#객체지향적-시각화",
    "title": "Plot | 꺾은선, 산점도, 객체지향화",
    "section": "3. 객체지향적 시각화",
    "text": "3. 객체지향적 시각화\n\nA. 배경지식\n- 그림을 저장해둔 뒤 나중에 꺼내보고 싶다면? | plt.gcf() : Get Current Figure.\n\nplt.plot([1, 2, 3, 2],'--o')\nfig = plt.gcf() ## plt.show()를 하기 전, 현재 표기되는 figure를 얻는다.\n\n\n\n\n\nfig\n\n\n\n\n\n위와 같이 변수에 저장된 것을 알 수 있다.\n\n\n\nB. fig의 해체\nfig\nfig.axes\n\nax = fig.axes[0]\nax.yaxis\nax.xaxis\n\nlines = ax.get_lines()[0]\nlines[0]\n\nfig &gt; 그래프 그 자체\naxes &gt; 그래프의 구역\naxis &gt; x축, y축\nline &gt; 직선형 그래프\n\n등등등…\n아무튼 여러 개체가 나뉘어있다.\n\n개념(비유) : * Figure(fig) : 도화지 * Axes(ax) : 도화지에 존재하는 그림틀 * Axis, Lines : 그림틀 위에 올려지는 물체(object)\n\n\n\nC. plt.plot()없이 그래프 그리기\n\nplt.plot([1,2,4,3], '--o')\nplt.show()\n\n\n\n\n위와 같은 그래프를 plt.plot()없이 만들어보자!\n- 아래의 코드를 하나하나 뜯어보자.\n\nfig = plt.Figure()\n\nax = fig.add_axes([0.125,0.11,0.775,0.77])\nax.set_xlim([-0.15, 3.15])  # setting x axis limit\nax.set_ylim([0.9, 3.1])     # setting y axis limit\nline = matplotlib.lines.Line2D(\n    xdata = [0,1,2,3],\n    ydata = [1,2,3,2],\n    linestyle = '--',\n    marker = 'o'\n)\nax.add_line(line)\n\nfig\n\n\n\n\n1. 최상위 하이라이트(figure) 생성\n\nfig = plt.figure(); fig   ## 최상위 하이라이트인 그림만 만들어냄.\n\n&lt;Figure size 450x300 with 0 Axes&gt;\n\n\n&lt;Figure size 450x300 with 0 Axes&gt;\n\n\n2. 그래프가 들어갈 공간(axes) 생성\n\nax = fig.add_axes([0.125,0.11,0.775,0.77]); fig  ## 가로시작, 세로시작, 종횡비\n\n\n\n\n3. 직선을 지정 후 추가\n\nline = matplotlib.lines.Line2D(\n    xdata = [0,1,2,3],\n    ydata = [1,2,3,2],\n    linestyle = '--',\n    marker = 'o'\n)\n\n\nmatplotlib에서 라인을 만드는 함수가 따로 있었다.\n\n\nax.add_line(line)\n\n&lt;matplotlib.lines.Line2D at 0x1c3c591e380&gt;\n\n\n\nfig\n\n\n\n\n4. 직선이 제대로 표기되지 않는 것 같으니 x축과 y축의 한계를 설정\n\nax.set_xlim([-0.15, 3.15])\nax.set_ylim([0.9, 3.1])\n\nfig\n\n\n\n\n\n\nD. 또 코드의 대체\n1. line2D 오브젝트를 쓰지 않는 방법\n\n## genarally\nfig = plt.Figure()\nax = fig.add_axes([0.125, 0.11, 0.775, 0.77])\nax.plot([1,2,3,2], '--o')\nfig\n\n\n\n\n\nax.plot()을 사용\n\n2. add_axes()를 쓰지 않는 방법(중요!)\n\nfig = plt.Figure()\nax = fig.subplots(1)\nax.plot([1,2,3,2], '--o')\nfig\n\n\n\n\n\nax = fig.subplots()을 사용\n\n3. fig와 ax들을 한번에 지정(중요!)\n\nfig, ax = plt.subplots(1) ## 중요함\nax.plot([1,2,3,2], '--o')\nplt.show()\n\n\n\n\n\n\nE. 정리 (\\(\\star\\star\\star\\))\n아래의 코드는 모두 같은 애들이었다.\n\nplt.plot([1,2,3,2], '--o')\n\n\nfig, ax = plt.subplots()\nax.plot([1,2,3,2], '--o')\n\n\nfig = plt.Figure()\nax = fig.subplots()\nax.plot([1,2,3,2], '--o')\nfig\n\n\nfig = plt.Figure()\nax = fig.add_axes([0.125, 0.11, 0.775, 0.77])\nax.plot([1,2,3,2], '--o')\nfig\n\nplt.subplots()과 ax.plot()의 경우 상당히 유용한 코드이니 꼭 숙지할 것!"
  },
  {
    "objectID": "posts/Data Visualization/Review/2. 꺾은선, 산점도, 객체지향화.html#미니맵과-서브플롯",
    "href": "posts/Data Visualization/Review/2. 꺾은선, 산점도, 객체지향화.html#미니맵과-서브플롯",
    "title": "Plot | 꺾은선, 산점도, 객체지향화",
    "section": "4. 미니맵과 서브플롯",
    "text": "4. 미니맵과 서브플롯\n\nA. 미니맵\nfig.add_axes()를 사용한다.\n\nfig = plt.Figure()\nax = fig.add_axes([0,0,2,2]); fig\n\n\n\n\n\nax_mini = fig.add_axes([1.4,0.2,0.5,0.5])  ## 가로 세로 위치(중심위치), 종횡비\nax.plot([1,5,3,4], '--o')\nax_mini.plot([1,2,3,1], '--or')\n\nfig\n\n\n\n\n\n생성된 fig에 axes를 하나 더 추가하여 만들어냈다.\n\n\n\nB. 서브플롯\nplt.subplots(), fig.subplots()을 이용해보자.\n\nfig, axs = plt.subplots(2)  ## 2행\n\n\n\n\n\naxs\n\narray([&lt;AxesSubplot:&gt;, &lt;AxesSubplot:&gt;], dtype=object)\n\n\n\naxs에 ax들이 array형태로 저장되어 있다.\n\n\naxs[0].plot([1,2,3,2], '--r')\naxs[1].plot([1,2,4,3], '--o')\n\nfig\n\n\n\n\n\n뭔가 레이아웃이 가려져있고 이상하다.\n\n\nfig.tight_layout(); fig\n\n\n\n\n\n왠만해선 fig.tight_layout()을 해주도록 하자.\n\n\n차피 axs가 array 형태로 저장되므로 그것을 따로 지정해주고 싶다면 아래와 같이 사용하는 것을 권장한다.\n\n\nfig, (ax1, ax2) = plt.subplots(2)\nax1.plot([1,2,3,2], '--r')\nax2.plot([1,2,4,3], '--o')\nfig.tight_layout()\n\n\n\n\n\n\nC. 서브플롯 스케일 조정 및 다중화\n- 스케일 변경\n\nfig, (ax1, ax2) = plt.subplots(2, figsize = (3,3))  ## 종횡비\nax1.plot([1,2,3,2], '--r')\nax2.plot([1,2,4,3], '--o')\nfig.tight_layout()\n\n\n\n\n\n미리 설정해줬던 dpi에 의거하여 종횡비가 배수로 적용된다.\n\n- 더 많은 서브플롯 생성\n\nfig, ((ax1, ax2),(ax3,ax4)) = plt.subplots(2,2, figsize = (3,3))\nax1.plot([1,2,4,3], 'o', color = 'C0')\nax2.plot([1,2,4,3], 'o', color = 'C1')\nax3.plot([1,2,4,3], 'o', color = 'C2')\nax4.plot([1,2,4,3], 'o', color = 'C3')\nfig.tight_layout()\n\n\n\n\n- 사용자 정의 서브플롯 생성\nplt.subplot() ## s가 없는 subplot(), 즉, 하나만 만들어진다.\n\nplt.figure(figsize=(3,3))\nplt.subplot(2,2,1)  ## 2×2의 1\nplt.plot([1,2,4,3],'o', color='C0')\nplt.subplot(1,2,2)\nplt.plot([1,2,4,3],'o', color='C1')\nplt.subplot(2,2,3)\nplt.plot([1,2,4,3],'o', color='C2')\nplt.tight_layout()\n\nfig = plt.gcf()\n\n\n\n\n\n이미 생성된 figure의 크기를 조정\n\n\nfig.set_size_inches(2,2); fig"
  },
  {
    "objectID": "posts/Data Visualization/Review/2. 꺾은선, 산점도, 객체지향화.html#title",
    "href": "posts/Data Visualization/Review/2. 꺾은선, 산점도, 객체지향화.html#title",
    "title": "Plot | 꺾은선, 산점도, 객체지향화",
    "section": "5. title",
    "text": "5. title\n\ntitle을 만드는 함수는 어떤 오브젝트에 소속되는 게 좋을까? 1. plt -&gt; subplot의 제목을 설정 가능 2. fig -&gt; 전체제목(super title)을 설정할 수 있음 3. ax -&gt; subplot들의 제목을 설정할 수 있음\n\n\nA. plt.title()\nfigure를 생성하지 않은 기본적인 환경에서 타이틀을 달아준다.\n\n## 가장 평범한 플롯\nplt.plot([1,2,3,2])\nplt.title('asdf')\nplt.show()\n\n\n\n\n\n\nB. ax.set_title()\nfigure와 axes를 생성했을 경우, 각 ax마다 타이틀을 달아줄 수 있다.\n\n## title이 axes에 존재\nfig, ax = plt.subplots()\nax.set_title('asdf')\nax.plot([1,2,3,2])\n\nplt.show()\n\n\n\n\n\n\nC. fig.suptitle() | 권장하지 않는 방법\n원래 figure 자체에 타이틀을 붙이는 것은 불가능하다.\n\n##--------fig : 원래는 불가능--------\nplt.plot([1,2,3,2])\nfig = plt.gcf()\nfig.suptitle('asdf')\n\nplt.show()\n\n\n\n\n\n\nD. 응용\n\nplt.subplots()과 set_title()을 이용\n\n\nfig, (ax1, ax2) = plt.subplots(1,2, figsize = (4,2))\nax1.set_title('asdf')\nax2.set_title('1234')\nax1.plot([1,2,3,2])\nax2.plot([1,2,3,2])\nfig.tight_layout()\n\n\n\n\n\nfigure를 생성하지 않고 plt.subplot()과 plt.title()을 이용하여 손수 지정\n\n\nplt.subplot(1,2,1)\nplt.plot([1,2,3])\nplt.title('asdf')\nplt.subplot(1,2,2)\nplt.plot([1,2,3])\nplt.title('1234')\nplt.tight_layout()\n\n\n\n\n\nfig.suptitle()을 이용한 방법\n\n\nfig, (ax1, ax2) = plt.subplots(1,2)\nax1.set_title('asdf')\nax2.set_title('1234')\nfig.suptitle('asdf1234')\nfig.tight_layout()\n\n\n\n\n\n\nE. plt.gca()\nplt.gca()를 통해 ax개체를 다룰 수도 있다.\n\nplt.plot([1,2,3,2])\nax = plt.gca()\nax.set_title('asdf')  ## 현재의 axis에 바로 타이틀을 설정해준다.\n\nText(0.5, 1.0, 'asdf')"
  },
  {
    "objectID": "posts/Data Visualization/Review/2. 꺾은선, 산점도, 객체지향화.html#산점도의-응용-표본상관계수",
    "href": "posts/Data Visualization/Review/2. 꺾은선, 산점도, 객체지향화.html#산점도의-응용-표본상관계수",
    "title": "Plot | 꺾은선, 산점도, 객체지향화",
    "section": "6. 산점도의 응용 | 표본상관계수",
    "text": "6. 산점도의 응용 | 표본상관계수\n\nA. 산점도와 표본상관계수\n아래처럼 두 연속형 자료가 주어질 경우 산점도로 나타낼 수 있다.\n\nweight = [44,48,49,58,62,68,69,70,76,79]\nheight = [159,160,162,165,167,162,165,175,165,172]\n\nplt.plot(weight,height,'.')  ## option : '.' marker가 .인 산점도 산출\nplt.show()\n\n\n\n\n아래 표본상관계수의 정의에 따라 데이터에서의 표본상관계수를 구해보자.\n- (표본)상관계수의 정의\n\\[r=\\frac{\\sum_{i=1}^{n}(x_i-\\bar{x})(y_i-\\bar{y}) }{\\sqrt{\\sum_{i=1}^{n}(x_i-\\bar{x})^2\\sum_{i=1}^{n}(y_i-\\bar{y})^2 }}=\\sum_{i=1}^{n}\\tilde{x}_i\\tilde{y}_i \\]\n\\[단,~\\tilde{x}_i=\\frac{(x_i-\\bar{x})}{\\sqrt{\\sum_{i=1}^n(x_i-\\bar{x})^2}},~ \\tilde{y}_i=\\frac{(y_i-\\bar{y})}{\\sqrt{\\sum_{i=1}^n(y_i-\\bar{y})^2}}\\]\n\n위 식에서 \\(\\tilde{x}_i\\)와 \\(\\tilde{y}_i\\)는 \\(x_i\\)와 \\(y_i\\)를 표준화한 것이다.\n\n(데이터를 불러오자)\n\nx=[44,48,49,58,62,68,69,70,76,79]\ny=[159,160,162,165,167,162,165,175,165,172]\n\n(평균을 0으로)\n\nxx = x - np.mean(x); print(xx)\nyy = y - np.mean(y); print(yy)\n\n[-18.3 -14.3 -13.3  -4.3  -0.3   5.7   6.7   7.7  13.7  16.7]\n[-6.2 -5.2 -3.2 -0.2  1.8 -3.2 -0.2  9.8 -0.2  6.8]\n\n\n(퍼진 정도를 표준화)\n\nx_standard = xx/np.sqrt(np.sum(xx**2))\ny_standard = yy/np.sqrt(np.sum(yy**2))\n\n(표본상관계수 산출)\n\nnp.sum(x_standard*y_standard)\n\n0.7138620583559141\n\n\n\n이미 정의된 코드를 통해 해당 결과가 맞는지 확인해보자.\n\n\nnp.corrcoef(x,y)\n\narray([[1.        , 0.71386206],\n       [0.71386206, 1.        ]])"
  },
  {
    "objectID": "posts/Data Visualization/Review/2. 꺾은선, 산점도, 객체지향화.html#b.-산점도를-보고-상관계수의-부호를-해석",
    "href": "posts/Data Visualization/Review/2. 꺾은선, 산점도, 객체지향화.html#b.-산점도를-보고-상관계수의-부호를-해석",
    "title": "Plot | 꺾은선, 산점도, 객체지향화",
    "section": "### B. 산점도를 보고 상관계수의 부호를 해석",
    "text": "### B. 산점도를 보고 상관계수의 부호를 해석\n- 아래의 그림은 상관계수 r의 값이 양수인가 음수인가?\n\nx=[44,48,49,58,62,68,69,70,76,79]\ny=[159,160,162,165,167,162,165,175,165,172]\n\nplt.plot(x, y, 'o')\nplt.show()\n\n\n\n\n\nxx = x-np.mean(x)\nyy = y-np.mean(y) \nxxx = xx/np.sqrt(np.sum(xx**2))\nyyy = yy/np.sqrt(np.sum(yy**2))\n\n\nfig, (ax1, ax2, ax3) = plt.subplots(1,3, figsize = (10,3))\nax1.plot(x,y, 'o')\nax1.set_title(r'$(x_i,y_i)$')\nax2.plot(xx,yy,'o') ## mean to 0\nax2.set_title(r'$(x_i-\\bar{x}, y_i-\\bar{y})$')\nax3.plot(xxx,yyy,'o') ## standarized\nax3.set_title(r'$(\\tilde{x}_i,\\tilde{y}_i)$')\n\nplt.show()\n\n\n\n\n\n마지막 \\(\\tilde{x}_i\\), \\(\\tilde{y}_i\\)를 곱한 값이 양수인 것과 음수인 것을 체크해보자.\n\n\n1,3사분면에 점들이 많으므로 상관계수의 부호는 양수일 것이다."
  },
  {
    "objectID": "posts/Data Visualization/Review/2. 꺾은선, 산점도, 객체지향화.html#d.-산점도를-보고-상관계수의-절대값을-해석",
    "href": "posts/Data Visualization/Review/2. 꺾은선, 산점도, 객체지향화.html#d.-산점도를-보고-상관계수의-절대값을-해석",
    "title": "Plot | 꺾은선, 산점도, 객체지향화",
    "section": "### D. 산점도를 보고 상관계수의 절대값을 해석",
    "text": "### D. 산점도를 보고 상관계수의 절대값을 해석\n- 기울기가 동일하지만 직선 근처의 퍼짐이 다른 두 개의 자료\n\nx=np.arange(0,10,0.1)\ny1=x+np.random.normal(loc=0,scale=1.0,size=len(x))  ## N(0,1)\ny2=x+np.random.normal(loc=0,scale=7.0,size=len(x))  ## N(0,7)\n\nplt.plot(x,y1,'.')\nplt.plot(x,y2,'x')\nplt.show()\n\n\n\n\n\n표준화하는 함수 tilde() 정의\n\n\ndef tilde(x):\n    xx = x-np.mean(x)\n    xxx = xx / np.sqrt(np.sum(xx**2))\n    return xxx\n\n\nfig, (ax1, ax2) = plt.subplots(1,2, figsize = (4,2))\nax1.plot(x,y1,'.'); ax1.plot(x,y2,'x'); ax1.set_title(r'$(x_i,y_i)$')\nax2.plot(tilde(x), tilde(y1),'.'); ax2.plot(tilde(x), tilde(y2), 'x'); ax2.set_title(r'$(\\tilde{x}_i,\\tilde{y}_i)$')\nfig.tight_layout()\n\n\n\n\n- 직선 근처의 퍼짐은 동일하지만, 직선의 기울기가 다른 경우\n\nx=np.arange(0,10,0.1)\ny1=x+np.random.normal(loc=0,scale=1.0,size=len(x))  ## 기울기가 1\ny2=0.2*x+np.random.normal(loc=0,scale=1.0,size=len(x))  ## 기울기가 0.2\n\nplt.plot(x,y1,'.')\nplt.plot(x,y2,'x')\n\nplt.show()\n\n\n\n\n\nfig, (ax1,ax2) = plt.subplots(1,2,figsize=(4,2))\nax1.plot(x,y1,'.'); ax1.plot(x,y2,'x'); ax1.set_title(r'$(x_i,y_i)$')\nax2.plot(tilde(x),tilde(y1),'.'); ax2.plot(tilde(x),tilde(y2),'x'); ax2.set_title(r'$(\\tilde{x}_i,\\tilde{y}_i)$')\nfig.tight_layout()\n\n\n\n\n기울기가 클수록, 퍼짐 정도가 작을수록 상관계수의 절댓값이 높다."
  },
  {
    "objectID": "posts/Data Visualization/Review/2. 꺾은선, 산점도, 객체지향화.html#산점도-응용예제2---앤스콤의-4분할",
    "href": "posts/Data Visualization/Review/2. 꺾은선, 산점도, 객체지향화.html#산점도-응용예제2---앤스콤의-4분할",
    "title": "Plot | 꺾은선, 산점도, 객체지향화",
    "section": "7. 산점도 응용예제2 - 앤스콤의 4분할",
    "text": "7. 산점도 응용예제2 - 앤스콤의 4분할\n- 표본상관계수가 모두 동일한 네 자료를 보라.\n\nx1 = [10, 8, 13, 9, 11, 14, 6, 4, 12, 7, 5]\ny1 = [8.04, 6.95, 7.58, 8.81, 8.33, 9.96, 7.24, 4.26, 10.84, 4.82, 5.68]\n\nx2 = x1\ny2 = [9.14, 8.14, 8.74, 8.77, 9.26, 8.10, 6.13, 3.10, 9.13, 7.26, 4.74]\n\nx3 = x1\ny3 = [7.46, 6.77, 12.74, 7.11, 7.81, 8.84, 6.08, 5.39, 8.15, 6.42, 5.73]\n\nx4 = [8, 8, 8, 8, 8, 8, 8, 19, 8, 8, 8]\ny4 = [6.58, 5.76, 7.71, 8.84, 8.47, 7.04, 5.25, 12.50, 5.56, 7.91, 6.89]\n\nnp.corrcoef(x1,y1),np.corrcoef(x2,y2),np.corrcoef(x3,y3),np.corrcoef(x4,y4)\n\n(array([[1.        , 0.81642052],\n        [0.81642052, 1.        ]]),\n array([[1.        , 0.81623651],\n        [0.81623651, 1.        ]]),\n array([[1.        , 0.81628674],\n        [0.81628674, 1.        ]]),\n array([[1.        , 0.81652144],\n        [0.81652144, 1.        ]]))\n\n\n\n음, 다 비슷한 자료겠구나… 양의 상관관계를 띄겠네?\n\n라고 속단하긴 이르다.\n\nfig, ((ax1,ax2),(ax3,ax4)) = plt.subplots(2,2,figsize=(6,4))\nax1.plot(x1,y1,'o'); ax1.set_title(f'corrcoef = {np.corrcoef(x1,y1)[0,1] : .6f}')\nax2.plot(x2,y2,'o'); ax2.set_title(f'corrcoef = {np.corrcoef(x2,y2)[0,1] : .6f}')\nax3.plot(x3,y3,'o'); ax3.set_title(f'corrcoef = {np.corrcoef(x3,y3)[0,1] : .6f}')\nax4.plot(x4,y4,'o'); ax4.set_title(f'corrcoef = {np.corrcoef(x4,y4)[0,1] : .6f}')\nfig.tight_layout()\n\n\n\n\n4개의 그림은 모두 같은 상관계수를 가지나, 그 느낌이 전혀 다르다.\n- 앤스콤플랏의 4개의 그림은 모두 같은 상관계수를 가진다. 하지만, 4개의 그림은 느낌이 전혀 다르다.\n- 같은 표본상관계수를 가진다고 하여 같은 관계성을 가지는 것은 아니다. 표본상관계수는 x,y의 비례정도를 측정하는데 그 값이 1에 가깝다고 하여 꼭 정비례의 관계가 있음을 의미하는 건 아니다.\n\\((x_i,y_i)\\)의 산점도가 선형성을 보일 때만 “표본상관계수가 1에 가까우므로 정비례의 관계에 있다”라는 논리전개가 성립한다.\n\n앤스콤의 첫번째 플랏 : 산점도가 선형 -&gt; 표본상관계수가 0.816 = 정비례의 관계가 0.816 정도\n앤스콤의 두번째 플랏 : 산점도가 선형이 아님 -&gt; 표본상관계수가 크게 의미없음.\n앤스콤의 세번째 플랏 : 산점도가 선형인듯 보이나 하나의 이상치가 있음 -&gt; 하나의 이상치가 표본상관계수의 값을 무너뜨릴 수 있으므로 표본상관계수 값을 신뢰할 수 없음.\n앤스콤의 네번째 플랏 : 산점도를 그려보니 이상한 그림 -&gt; 표본상관계수를 계산할 수는 있으나, 그게 무슨 의미가 있을까?\n\n산점도가 선형성을 보일 때만 표본상관계수가 1에 가까우므로 정비례의 관계에 있다라는 논리전개가 성립한다.\n\n1번만 의미가 있음. 3번의 경우 이상치가 존재하여 신뢰할 수 없음.\n\n\n교훈\n상관계수를 해석하기에 앞서서 산점도가 선형성을 보이는 지 체크할 것! 항상 통계량은 적절한 가정하에서만 말이 된다는 사실을 기억할 것!"
  },
  {
    "objectID": "posts/Data Visualization/Solution Assemble/특정 열의 재가공.html",
    "href": "posts/Data Visualization/Solution Assemble/특정 열의 재가공.html",
    "title": "[문제 풀이] 데이터프레임 : 특정 열의 재가공",
    "section": "",
    "text": "주어진 자료에서 입학년도를 추가하고 싶다면 어떻게 해야 할까?"
  },
  {
    "objectID": "posts/Data Visualization/Solution Assemble/특정 열의 재가공.html#사전작업",
    "href": "posts/Data Visualization/Solution Assemble/특정 열의 재가공.html#사전작업",
    "title": "[문제 풀이] 데이터프레임 : 특정 열의 재가공",
    "section": "1. 사전작업",
    "text": "1. 사전작업\n\n라이브러리 설치\n\n\nimport numpy as np\nimport pandas as pd\n\n\n자료 받아오기 및 확인\n\n\nnp.random.seed(43052)\natt = np.random.choice(np.arange(10,21)*5,20)\nrep = np.random.choice(np.arange(5,21)*5,20)\nmid = np.random.choice(np.arange(0,21)*5,20)\nfin = np.random.choice(np.arange(0,21)*5,20)\nstudent_id = [ '2023-12362', '2022-12471', '2023-12333', '2022-12400', '2022-12377',\n               '2022-12469', '2023-12314', '2022-12363', '2023-12445', '2023-12336',\n               '2023-12426', '2022-12380', '2023-12422', '2022-12488', '2022-12370',\n               '2023-12443', '2022-12463', '2023-12491', '2023-12340', '2022-12312' ]\ndf = pd.DataFrame({'student_id':student_id,'att':att,'rep':rep,'mid':mid,'fin':fin})\ndf.head()\n\n\n\n\n\n\n\n\nstudent_id\natt\nrep\nmid\nfin\n\n\n\n\n0\n2023-12362\n65\n55\n50\n40\n\n\n1\n2022-12471\n95\n100\n50\n80\n\n\n2\n2023-12333\n65\n90\n60\n30\n\n\n3\n2022-12400\n55\n80\n75\n80\n\n\n4\n2022-12377\n80\n30\n30\n100\n\n\n\n\n\n\n\n\n학번(student_id)에서 앞 네자리에 해당하는 숫자를 빼내어 새로운 열로 저장하면 좋을 것 같다."
  },
  {
    "objectID": "posts/Data Visualization/Solution Assemble/특정 열의 재가공.html#가공",
    "href": "posts/Data Visualization/Solution Assemble/특정 열의 재가공.html#가공",
    "title": "[문제 풀이] 데이터프레임 : 특정 열의 재가공",
    "section": "2. 가공",
    "text": "2. 가공\n\n아래의 코드는 student_id 열을 '-'를 기준으로 앞뒤로 나누고 첫번째 것을 취한다. 숫자형으로 바꾼 뒤, 리스트로 산출한다.\n\n\n[int(i.split('-')[0]) for i in df.student_id]\n\n[2023,\n 2022,\n 2023,\n 2022,\n 2022,\n 2022,\n 2023,\n 2022,\n 2023,\n 2023,\n 2023,\n 2022,\n 2023,\n 2022,\n 2022,\n 2023,\n 2022,\n 2023,\n 2023,\n 2022]\n\n\n\nlambda를 이용해 가공할 수도 있다.\n\n\nlist(map((lambda x : int(x.split('-')[0])), df.student_id))\n\n[2023,\n 2022,\n 2023,\n 2022,\n 2022,\n 2022,\n 2023,\n 2022,\n 2023,\n 2023,\n 2023,\n 2022,\n 2023,\n 2022,\n 2022,\n 2023,\n 2022,\n 2023,\n 2023,\n 2022]\n\n\n\n첫번째 코드와 똑같은 결과를 산출한다."
  },
  {
    "objectID": "posts/Data Visualization/Solution Assemble/특정 열의 재가공.html#출력",
    "href": "posts/Data Visualization/Solution Assemble/특정 열의 재가공.html#출력",
    "title": "[문제 풀이] 데이터프레임 : 특정 열의 재가공",
    "section": "3. 출력",
    "text": "3. 출력\n\n상기의 코드를 df에 새로운 열 year에 삽입한다.\n\n\ndf.assign(year = [int(i.split('-')[0]) for i in df.student_id])\n\n\n\n\n\n\n\n\nstudent_id\natt\nrep\nmid\nfin\nyear\n\n\n\n\n0\n2023-12362\n65\n55\n50\n40\n2023\n\n\n1\n2022-12471\n95\n100\n50\n80\n2022\n\n\n2\n2023-12333\n65\n90\n60\n30\n2023\n\n\n3\n2022-12400\n55\n80\n75\n80\n2022\n\n\n4\n2022-12377\n80\n30\n30\n100\n2022\n\n\n5\n2022-12469\n75\n40\n100\n15\n2022\n\n\n6\n2023-12314\n65\n45\n45\n90\n2023\n\n\n7\n2022-12363\n60\n60\n25\n0\n2022\n\n\n8\n2023-12445\n95\n65\n20\n10\n2023\n\n\n9\n2023-12336\n90\n80\n80\n20\n2023\n\n\n10\n2023-12426\n55\n75\n35\n25\n2023\n\n\n11\n2022-12380\n95\n95\n45\n0\n2022\n\n\n12\n2023-12422\n95\n55\n15\n35\n2023\n\n\n13\n2022-12488\n50\n80\n40\n30\n2022\n\n\n14\n2022-12370\n50\n55\n15\n85\n2022\n\n\n15\n2023-12443\n95\n30\n30\n95\n2023\n\n\n16\n2022-12463\n50\n50\n45\n10\n2022\n\n\n17\n2023-12491\n65\n55\n15\n45\n2023\n\n\n18\n2023-12340\n70\n70\n40\n35\n2023\n\n\n19\n2022-12312\n90\n90\n80\n90\n2022\n\n\n\n\n\n\n\n완료\n-감사합니다-"
  },
  {
    "objectID": "posts/Machine Learning in Practice/Titanic/2. code-by-alexis-cook.html",
    "href": "posts/Machine Learning in Practice/Titanic/2. code-by-alexis-cook.html",
    "title": "[Kaggle] titanic_code by alexis cook",
    "section": "",
    "text": "import pandas as pd\nimport numpy as np\n\n\ntrain_data = pd.read_csv(\"/kaggle/input/titanic/train.csv\")\ntrain_data.head()\n\n\ntest_data = pd.read_csv(\"/kaggle/input/titanic/test.csv\")\ntest_data.head()\n\n\nwomen = train_data.loc[train_data.Sex == 'female'][\"Survived\"]\nrate_women = sum(women)/len(women)\n\nprint(\"% of women who survived:\", rate_women)\n\n\nmen = train_data.loc[train_data.Sex == 'male'][\"Survived\"]\nrate_men = sum(men)/len(men)\n\nprint(\"% of men who survived:\", rate_men)\n\n\nfrom sklearn.ensemble import RandomForestClassifier\n\ny = train_data[\"Survived\"]\n\nfeatures = [\"Pclass\", \"Sex\", \"SibSp\", \"Parch\"]\nX = pd.get_dummies(train_data[features])\nX_test = pd.get_dummies(test_data[features])\n\nmodel = RandomForestClassifier(n_estimators=100, max_depth=5, random_state=1)\nmodel.fit(X, y)\npredictions = model.predict(X_test)\n\noutput = pd.DataFrame({'PassengerId': test_data.PassengerId, 'Survived': predictions})\noutput.to_csv('submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")\n\n\noutput\n\n-일단 해당 버전을 저장하도록 하자."
  },
  {
    "objectID": "posts/R Programming/Economatrics_hw1.html",
    "href": "posts/R Programming/Economatrics_hw1.html",
    "title": "강신성(202014107)_hw1.html",
    "section": "",
    "text": "수열문제 a.\n\nx = 0   ## x와 i의 초기값 설정\ni = 0\n\nwhile (i &lt;= 21) {\n  x = x + 1/(2 * (-2)^(i))    ## 분모에 (-2)^i 제곱을 하여 부호 변경\n  i = i + 1\n  \n  if (i == 20) {    ## 반복문이 종료될 때 결과값(x) 산출\n    print(x)    ## output : 0.333333\n  }\n}\n\n[1] 0.333333\n\n\n\n\n수열문제 b.\n\ny = 1   ## y와 i의 초기값 설정\nj = 1\n\nwhile (j &lt;= 19) {\n  y = y + 1/((j+1)*j)\n  j = j + 1\n  \n  if (j == 19) {\n    print(y)    ## output : 1.967368\n  }\n}\n\n[1] 1.947368"
  },
  {
    "objectID": "unrefined file/datavisuallization/learning materials/2. 꺾은선, 산점도, 객체지향화.html",
    "href": "unrefined file/datavisuallization/learning materials/2. 꺾은선, 산점도, 객체지향화.html",
    "title": "Plot | 꺾은선, 산점도, 객체지향화",
    "section": "",
    "text": "matplotlib를 이용하여 그래프를 그려보자!"
  },
  {
    "objectID": "unrefined file/datavisuallization/learning materials/2. 꺾은선, 산점도, 객체지향화.html#사전작업",
    "href": "unrefined file/datavisuallization/learning materials/2. 꺾은선, 산점도, 객체지향화.html#사전작업",
    "title": "Plot | 꺾은선, 산점도, 객체지향화",
    "section": "1. 사전작업",
    "text": "1. 사전작업\n\n라이브러리 import\n\n\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport matplotlib\nmatplotlib.rcParams['figure.figsize'] = (3, 2)\nmatplotlib.rcParams['figure.dpi'] = 150"
  },
  {
    "objectID": "unrefined file/datavisuallization/learning materials/2. 꺾은선, 산점도, 객체지향화.html#간단한-꺾은선-그래프",
    "href": "unrefined file/datavisuallization/learning materials/2. 꺾은선, 산점도, 객체지향화.html#간단한-꺾은선-그래프",
    "title": "Plot | 꺾은선, 산점도, 객체지향화",
    "section": "2. 간단한 꺾은선 그래프",
    "text": "2. 간단한 꺾은선 그래프\nplt.plot()을 사용하여 간단하게 그래프를 그릴 수 있다.\n\ny값만 지정한 경우\n\n\nplt.plot([1,2,4,3])\nplt.show()\n\n\n\n\n\nx값과 y값 같이 지정한 경우\n\n\nplt.plot([1,2,3,4],[1,2,4,3])\nplt.show()\n\n\n\n\n\nx값과 y값에 변수를 지정하여 넣어주는 경우\n\n\nx = [1,2,3,4]\ny = [1,2,4,3]\n\nplt.plot(x,y)\nplt.show()\n\n\n\n\n- 이외에도 다양한 옵션을 사용하여 그래프를 다채롭게 그릴 수 있는데, 지금부터 그것들을 알아보도록 하자.\n\nplt.plot의 옵션\nplt.plot()에서 괄호 안에 문자열을 넣음으로서 세 가지 옵션을 간단하게 적용할 수 있다.\nplt.plot(x,y,'--')  ## 파선 그래프\nplt.plot(x,y,':')   ## 점선 그래프\nplt.plot(x,y,'r')   ## 선의 색상이 빨간색\nplt.plot(x,y,'r--') ## 빨간색의 파선 그래프\n...\n- 게다가 세 옵션을 순서 상관없이 집어넣어 적용 가능하다!\n\nLine StylesColorsMarkers\n\n\n\n\n\ncharacter\ndescription\n\n\n\n\n‘-’\nsolid line style\n\n\n‘–’\ndashed line style\n\n\n‘-.’\ndash-dot line style\n\n\n‘:’\ndotted line style\n\n\n\n\n\n\n\n\ncharacter\ncolor\n\n\n\n\n‘b’\nblue\n\n\n‘g’\ngreen\n\n\n‘r’\nred\n\n\n‘c’\ncyan\n\n\n‘m’\nmagenta\n\n\n‘y’\nyellow\n\n\n‘k’\nblack\n\n\n‘w’\nwhite\n\n\n\n\n\n\n\n\ncharacter\ndescription\n\n\n\n\n‘.’\npoint marker\n\n\n‘,’\npixel marker\n\n\n‘o’\ncircle marker\n\n\n‘v’\ntriangle_down marker\n\n\n‘^’\ntriangle_up marker\n\n\n‘&lt;’\ntriangle_left marker\n\n\n‘&gt;’\ntriangle_right marker\n\n\n‘1’\ntri_down marker\n\n\n‘2’\ntri_up marker\n\n\n‘3’\ntri_left marker\n\n\n‘4’\ntri_right marker\n\n\n‘8’\noctagon marker\n\n\n‘s’\nsquare marker\n\n\n‘p’\npentagon marker\n\n\n‘P’\nplus (filled) marker\n\n\n’*’\nstar marker\n\n\n‘h’\nhexagon1 marker\n\n\n‘H’\nhexagon2 marker\n\n\n‘+’\nplus marker\n\n\n‘x’\nx marker\n\n\n‘X’\nx (filled) marker\n\n\n‘D’\ndiamond marker\n\n\n‘d’\nthin_diamond marker\n\n\n‘|’\nvline marker\n\n\n’_’\nhline marker\n\n\n\n\n\n\n그 외에 다른 옵션을 보고 싶다면 아래를 참조하라.\n\nother options or colors\nhttps://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.plot.html\nhttps://matplotlib.org/2.0.2/examples/color/named_colors.html\nhex code\nhttps://htmlcolorcodes.com/\nother linestyles\nhttps://matplotlib.org/stable/gallery/lines_bars_and_markers/linestyles.html\n\n- preset에 있는 색상 외 다른 색상을 적용\n\nplt.plot(x,y,'--',color = 'lime')\n\n\n\n\n\nusing color name\n\n\nplt.plot(x,y,color = '#751F9B')\n\n\n\n\n\nusing hex code\n\n- 선의 형태를 다양하게 변경\n\nplt.plot(x,y,linestyle = 'dashed')\nplt.show()\n\n\n\n\n\n문자열로 직접 지정\n\n\nplt.plot(x,y,linestyle = (0, (1,1)))\n\n\n\n\n\n파선의 길이를 직접 지정\n\n\n\nplt.plot()에서 scatter plot을 생성\nmarker 옵션을 변경하여 scatter plot을 손쉽게 그릴 수도 있다.\n\nplt.plot(x,y,'db')  ## diamonds, blue\n\n\n\n\n\n\ndot connected plot\n\nplt.plot(x,y,':or')  ## dotline(:), circle(o), red\n\n\n\n\n\n\npile up\nplt.show()를 입력하기 전 계속해서 그래프를 그리면 중첩된다.\n\nplt.plot([1,2,3,2], '--o', color = 'orange')\nplt.plot([2,3,1,4], '--o', color = 'skyblue')\n\nplt.show()\n\nplt.plot([4,4,2,1], '--o', color = 'cyan')\n\nplt.show()\n\n\n\n\n\n\n\n\nplt.plot([1,2,3,2], '--o', color = 'C1')\nplt.plot([2,3,1,4], '--o', color = 'C0')\n\nplt.show()\n\n\n\n\n\n위와 같은 경우에는 color를 지정하지 않을 경우 먼저 입력한 그래프에 C0가 지정된다.\n\n\n\n응용 : scatter plot and line plot\n- 유사 단순선형회귀\n설명변수와 오차, 반응변수를 지정해주자.\n\nx = np.arange(-5,5,0.1)\neps = np.random.randn(100)\ny = 2*x + eps ## 벗어나도록 겹치게\n\n\nplt.plot(x,y,'.b')     ## 실제 데이터\nplt.plot(x,2*x,'--r')  ## 회귀선\nplt.show()\n\n\n\n\n\n\n적합한 그래프를 그릴 때\n- summary: boxplot, histogram, lineplot, scatterplot\n\n라인플랏: 추세\n☆★☆ 스캐터플랏: 두 변수의 관계\n박스플랏: 분포(일상용어)의 비교, 이상치\n히스토그램: 분포(통계용어)파악\n바플랏: 크기비교"
  },
  {
    "objectID": "unrefined file/datavisuallization/learning materials/2. 꺾은선, 산점도, 객체지향화.html#객체지향적-시각화",
    "href": "unrefined file/datavisuallization/learning materials/2. 꺾은선, 산점도, 객체지향화.html#객체지향적-시각화",
    "title": "Plot | 꺾은선, 산점도, 객체지향화",
    "section": "3. 객체지향적 시각화",
    "text": "3. 객체지향적 시각화\n\nA. 배경지식\n- 그림을 저장해둔 뒤 나중에 꺼내보고 싶다면? | plt.gcf() : Get Current Figure.\n\nplt.plot([1, 2, 3, 2],'--o')\nfig = plt.gcf() ## plt.show()를 하기 전, 현재 표기되는 figure를 얻는다.\n\n\n\n\n\nfig\n\n\n\n\n\n위와 같이 변수에 저장된 것을 알 수 있다.\n\n\n\nB. fig의 해체\nfig\nfig.axes\n\nax = fig.axes[0]\nax.yaxis\nax.xaxis\n\nlines = ax.get_lines()[0]\nlines[0]\n\nfig &gt; 그래프 그 자체\naxes &gt; 그래프의 구역\naxis &gt; x축, y축\nline &gt; 직선형 그래프\n\n등등등…\n아무튼 여러 개체가 나뉘어있다.\n\n개념(비유) : * Figure(fig) : 도화지 * Axes(ax) : 도화지에 존재하는 그림틀 * Axis, Lines : 그림틀 위에 올려지는 물체(object)\n\n\n\nC. plt.plot()없이 그래프 그리기\n\nplt.plot([1,2,4,3], '--o')\nplt.show()\n\n\n\n\n위와 같은 그래프를 plt.plot()없이 만들어보자!\n- 아래의 코드를 하나하나 뜯어보자.\n\nfig = plt.Figure()\n\nax = fig.add_axes([0.125,0.11,0.775,0.77])\nax.set_xlim([-0.15, 3.15])  # setting x axis limit\nax.set_ylim([0.9, 3.1])     # setting y axis limit\nline = matplotlib.lines.Line2D(\n    xdata = [0,1,2,3],\n    ydata = [1,2,3,2],\n    linestyle = '--',\n    marker = 'o'\n)\nax.add_line(line)\n\nfig\n\n\n\n\n1. 최상위 하이라이트(figure) 생성\n\nfig = plt.figure(); fig   ## 최상위 하이라이트인 그림만 만들어냄.\n\n&lt;Figure size 450x300 with 0 Axes&gt;\n\n\n&lt;Figure size 450x300 with 0 Axes&gt;\n\n\n2. 그래프가 들어갈 공간(axes) 생성\n\nax = fig.add_axes([0.125,0.11,0.775,0.77]); fig  ## 가로시작, 세로시작, 종횡비\n\n\n\n\n3. 직선을 지정 후 추가\n\nline = matplotlib.lines.Line2D(\n    xdata = [0,1,2,3],\n    ydata = [1,2,3,2],\n    linestyle = '--',\n    marker = 'o'\n)\n\n\nmatplotlib에서 라인을 만드는 함수가 따로 있었다.\n\n\nax.add_line(line)\n\n&lt;matplotlib.lines.Line2D at 0x1c3c591e380&gt;\n\n\n\nfig\n\n\n\n\n4. 직선이 제대로 표기되지 않는 것 같으니 x축과 y축의 한계를 설정\n\nax.set_xlim([-0.15, 3.15])\nax.set_ylim([0.9, 3.1])\n\nfig\n\n\n\n\n\n\nD. 또 코드의 대체\n1. line2D 오브젝트를 쓰지 않는 방법\n\n## genarally\nfig = plt.Figure()\nax = fig.add_axes([0.125, 0.11, 0.775, 0.77])\nax.plot([1,2,3,2], '--o')\nfig\n\n\n\n\n\nax.plot()을 사용\n\n2. add_axes()를 쓰지 않는 방법(중요!)\n\nfig = plt.Figure()\nax = fig.subplots(1)\nax.plot([1,2,3,2], '--o')\nfig\n\n\n\n\n\nax = fig.subplots()을 사용\n\n3. fig와 ax들을 한번에 지정(중요!)\n\nfig, ax = plt.subplots(1) ## 중요함\nax.plot([1,2,3,2], '--o')\nplt.show()\n\n\n\n\n\n\nE. 정리 (\\(\\star\\star\\star\\))\n아래의 코드는 모두 같은 애들이었다.\n\nplt.plot([1,2,3,2], '--o')\n\n\nfig, ax = plt.subplots()\nax.plot([1,2,3,2], '--o')\n\n\nfig = plt.Figure()\nax = fig.subplots()\nax.plot([1,2,3,2], '--o')\nfig\n\n\nfig = plt.Figure()\nax = fig.add_axes([0.125, 0.11, 0.775, 0.77])\nax.plot([1,2,3,2], '--o')\nfig\n\nplt.subplots()과 ax.plot()의 경우 상당히 유용한 코드이니 꼭 숙지할 것!"
  },
  {
    "objectID": "unrefined file/datavisuallization/learning materials/2. 꺾은선, 산점도, 객체지향화.html#미니맵과-서브플롯",
    "href": "unrefined file/datavisuallization/learning materials/2. 꺾은선, 산점도, 객체지향화.html#미니맵과-서브플롯",
    "title": "Plot | 꺾은선, 산점도, 객체지향화",
    "section": "4. 미니맵과 서브플롯",
    "text": "4. 미니맵과 서브플롯\n\nA. 미니맵\nfig.add_axes()를 사용한다.\n\nfig = plt.Figure()\nax = fig.add_axes([0,0,2,2]); fig\n\n\n\n\n\nax_mini = fig.add_axes([1.4,0.2,0.5,0.5])  ## 가로 세로 위치(중심위치), 종횡비\nax.plot([1,5,3,4], '--o')\nax_mini.plot([1,2,3,1], '--or')\n\nfig\n\n\n\n\n\n생성된 fig에 axes를 하나 더 추가하여 만들어냈다.\n\n\n\nB. 서브플롯\nplt.subplots(), fig.subplots()을 이용해보자.\n\nfig, axs = plt.subplots(2)  ## 2행\n\n\n\n\n\naxs\n\narray([&lt;AxesSubplot:&gt;, &lt;AxesSubplot:&gt;], dtype=object)\n\n\n\naxs에 ax들이 array형태로 저장되어 있다.\n\n\naxs[0].plot([1,2,3,2], '--r')\naxs[1].plot([1,2,4,3], '--o')\n\nfig\n\n\n\n\n\n뭔가 레이아웃이 가려져있고 이상하다.\n\n\nfig.tight_layout(); fig\n\n\n\n\n\n왠만해선 fig.tight_layout()을 해주도록 하자.\n\n\n차피 axs가 array 형태로 저장되므로 그것을 따로 지정해주고 싶다면 아래와 같이 사용하는 것을 권장한다.\n\n\nfig, (ax1, ax2) = plt.subplots(2)\nax1.plot([1,2,3,2], '--r')\nax2.plot([1,2,4,3], '--o')\nfig.tight_layout()\n\n\n\n\n\n\nC. 서브플롯 스케일 조정 및 다중화\n- 스케일 변경\n\nfig, (ax1, ax2) = plt.subplots(2, figsize = (3,3))  ## 종횡비\nax1.plot([1,2,3,2], '--r')\nax2.plot([1,2,4,3], '--o')\nfig.tight_layout()\n\n\n\n\n\n미리 설정해줬던 dpi에 의거하여 종횡비가 배수로 적용된다.\n\n- 더 많은 서브플롯 생성\n\nfig, ((ax1, ax2),(ax3,ax4)) = plt.subplots(2,2, figsize = (3,3))\nax1.plot([1,2,4,3], 'o', color = 'C0')\nax2.plot([1,2,4,3], 'o', color = 'C1')\nax3.plot([1,2,4,3], 'o', color = 'C2')\nax4.plot([1,2,4,3], 'o', color = 'C3')\nfig.tight_layout()\n\n\n\n\n- 사용자 정의 서브플롯 생성\nplt.subplot() ## s가 없는 subplot(), 즉, 하나만 만들어진다.\n\nplt.figure(figsize=(3,3))\nplt.subplot(2,2,1)  ## 2×2의 1\nplt.plot([1,2,4,3],'o', color='C0')\nplt.subplot(1,2,2)\nplt.plot([1,2,4,3],'o', color='C1')\nplt.subplot(2,2,3)\nplt.plot([1,2,4,3],'o', color='C2')\nplt.tight_layout()\n\nfig = plt.gcf()\n\n\n\n\n\n이미 생성된 figure의 크기를 조정\n\n\nfig.set_size_inches(2,2); fig"
  },
  {
    "objectID": "unrefined file/datavisuallization/learning materials/2. 꺾은선, 산점도, 객체지향화.html#title",
    "href": "unrefined file/datavisuallization/learning materials/2. 꺾은선, 산점도, 객체지향화.html#title",
    "title": "Plot | 꺾은선, 산점도, 객체지향화",
    "section": "5. title",
    "text": "5. title\n\ntitle을 만드는 함수는 어떤 오브젝트에 소속되는 게 좋을까? 1. plt -&gt; subplot의 제목을 설정 가능 2. fig -&gt; 전체제목(super title)을 설정할 수 있음 3. ax -&gt; subplot들의 제목을 설정할 수 있음\n\n\nA. plt.title()\nfigure를 생성하지 않은 기본적인 환경에서 타이틀을 달아준다.\n\n## 가장 평범한 플롯\nplt.plot([1,2,3,2])\nplt.title('asdf')\nplt.show()\n\n\n\n\n\n\nB. ax.set_title()\nfigure와 axes를 생성했을 경우, 각 ax마다 타이틀을 달아줄 수 있다.\n\n## title이 axes에 존재\nfig, ax = plt.subplots()\nax.set_title('asdf')\nax.plot([1,2,3,2])\n\nplt.show()\n\n\n\n\n\n\nC. fig.suptitle() | 권장하지 않는 방법\n원래 figure 자체에 타이틀을 붙이는 것은 불가능하다.\n\n##--------fig : 원래는 불가능--------\nplt.plot([1,2,3,2])\nfig = plt.gcf()\nfig.suptitle('asdf')\n\nplt.show()\n\n\n\n\n\n\nD. 응용\n\nplt.subplots()과 set_title()을 이용\n\n\nfig, (ax1, ax2) = plt.subplots(1,2, figsize = (4,2))\nax1.set_title('asdf')\nax2.set_title('1234')\nax1.plot([1,2,3,2])\nax2.plot([1,2,3,2])\nfig.tight_layout()\n\n\n\n\n\nfigure를 생성하지 않고 plt.subplot()과 plt.title()을 이용하여 손수 지정\n\n\nplt.subplot(1,2,1)\nplt.plot([1,2,3])\nplt.title('asdf')\nplt.subplot(1,2,2)\nplt.plot([1,2,3])\nplt.title('1234')\nplt.tight_layout()\n\n\n\n\n\nfig.suptitle()을 이용한 방법\n\n\nfig, (ax1, ax2) = plt.subplots(1,2)\nax1.set_title('asdf')\nax2.set_title('1234')\nfig.suptitle('asdf1234')\nfig.tight_layout()\n\n\n\n\n\n\nE. plt.gca()\nplt.gca()를 통해 ax개체를 다룰 수도 있다.\n\nplt.plot([1,2,3,2])\nax = plt.gca()\nax.set_title('asdf')  ## 현재의 axis에 바로 타이틀을 설정해준다.\n\nText(0.5, 1.0, 'asdf')"
  },
  {
    "objectID": "unrefined file/datavisuallization/learning materials/2. 꺾은선, 산점도, 객체지향화.html#산점도의-응용-표본상관계수",
    "href": "unrefined file/datavisuallization/learning materials/2. 꺾은선, 산점도, 객체지향화.html#산점도의-응용-표본상관계수",
    "title": "Plot | 꺾은선, 산점도, 객체지향화",
    "section": "6. 산점도의 응용 | 표본상관계수",
    "text": "6. 산점도의 응용 | 표본상관계수\n\nA. 산점도와 표본상관계수\n아래처럼 두 연속형 자료가 주어질 경우 산점도로 나타낼 수 있다.\n\nweight = [44,48,49,58,62,68,69,70,76,79]\nheight = [159,160,162,165,167,162,165,175,165,172]\n\nplt.plot(weight,height,'.')  ## option : '.' marker가 .인 산점도 산출\nplt.show()\n\n\n\n\n아래 표본상관계수의 정의에 따라 데이터에서의 표본상관계수를 구해보자.\n- (표본)상관계수의 정의\n\\[r=\\frac{\\sum_{i=1}^{n}(x_i-\\bar{x})(y_i-\\bar{y}) }{\\sqrt{\\sum_{i=1}^{n}(x_i-\\bar{x})^2\\sum_{i=1}^{n}(y_i-\\bar{y})^2 }}=\\sum_{i=1}^{n}\\tilde{x}_i\\tilde{y}_i \\]\n\\[단,~\\tilde{x}_i=\\frac{(x_i-\\bar{x})}{\\sqrt{\\sum_{i=1}^n(x_i-\\bar{x})^2}},~ \\tilde{y}_i=\\frac{(y_i-\\bar{y})}{\\sqrt{\\sum_{i=1}^n(y_i-\\bar{y})^2}}\\]\n\n위 식에서 \\(\\tilde{x}_i\\)와 \\(\\tilde{y}_i\\)는 \\(x_i\\)와 \\(y_i\\)를 표준화한 것이다.\n\n(데이터를 불러오자)\n\nx=[44,48,49,58,62,68,69,70,76,79]\ny=[159,160,162,165,167,162,165,175,165,172]\n\n(평균을 0으로)\n\nxx = x - np.mean(x); print(xx)\nyy = y - np.mean(y); print(yy)\n\n[-18.3 -14.3 -13.3  -4.3  -0.3   5.7   6.7   7.7  13.7  16.7]\n[-6.2 -5.2 -3.2 -0.2  1.8 -3.2 -0.2  9.8 -0.2  6.8]\n\n\n(퍼진 정도를 표준화)\n\nx_standard = xx/np.sqrt(np.sum(xx**2))\ny_standard = yy/np.sqrt(np.sum(yy**2))\n\n(표본상관계수 산출)\n\nnp.sum(x_standard*y_standard)\n\n0.7138620583559141\n\n\n\n이미 정의된 코드를 통해 해당 결과가 맞는지 확인해보자.\n\n\nnp.corrcoef(x,y)\n\narray([[1.        , 0.71386206],\n       [0.71386206, 1.        ]])"
  },
  {
    "objectID": "unrefined file/datavisuallization/learning materials/2. 꺾은선, 산점도, 객체지향화.html#b.-산점도를-보고-상관계수의-부호를-해석",
    "href": "unrefined file/datavisuallization/learning materials/2. 꺾은선, 산점도, 객체지향화.html#b.-산점도를-보고-상관계수의-부호를-해석",
    "title": "Plot | 꺾은선, 산점도, 객체지향화",
    "section": "### B. 산점도를 보고 상관계수의 부호를 해석",
    "text": "### B. 산점도를 보고 상관계수의 부호를 해석\n- 아래의 그림은 상관계수 r의 값이 양수인가 음수인가?\n\nx=[44,48,49,58,62,68,69,70,76,79]\ny=[159,160,162,165,167,162,165,175,165,172]\n\nplt.plot(x, y, 'o')\nplt.show()\n\n\n\n\n\nxx = x-np.mean(x)\nyy = y-np.mean(y) \nxxx = xx/np.sqrt(np.sum(xx**2))\nyyy = yy/np.sqrt(np.sum(yy**2))\n\n\nfig, (ax1, ax2, ax3) = plt.subplots(1,3, figsize = (10,3))\nax1.plot(x,y, 'o')\nax1.set_title(r'$(x_i,y_i)$')\nax2.plot(xx,yy,'o') ## mean to 0\nax2.set_title(r'$(x_i-\\bar{x}, y_i-\\bar{y})$')\nax3.plot(xxx,yyy,'o') ## standarized\nax3.set_title(r'$(\\tilde{x}_i,\\tilde{y}_i)$')\n\nplt.show()\n\n\n\n\n\n마지막 \\(\\tilde{x}_i\\), \\(\\tilde{y}_i\\)를 곱한 값이 양수인 것과 음수인 것을 체크해보자.\n\n\n1,3사분면에 점들이 많으므로 상관계수의 부호는 양수일 것이다."
  },
  {
    "objectID": "unrefined file/datavisuallization/learning materials/2. 꺾은선, 산점도, 객체지향화.html#d.-산점도를-보고-상관계수의-절대값을-해석",
    "href": "unrefined file/datavisuallization/learning materials/2. 꺾은선, 산점도, 객체지향화.html#d.-산점도를-보고-상관계수의-절대값을-해석",
    "title": "Plot | 꺾은선, 산점도, 객체지향화",
    "section": "### D. 산점도를 보고 상관계수의 절대값을 해석",
    "text": "### D. 산점도를 보고 상관계수의 절대값을 해석\n- 기울기가 동일하지만 직선 근처의 퍼짐이 다른 두 개의 자료\n\nx=np.arange(0,10,0.1)\ny1=x+np.random.normal(loc=0,scale=1.0,size=len(x))  ## N(0,1)\ny2=x+np.random.normal(loc=0,scale=7.0,size=len(x))  ## N(0,7)\n\nplt.plot(x,y1,'.')\nplt.plot(x,y2,'x')\nplt.show()\n\n\n\n\n\n표준화하는 함수 tilde() 정의\n\n\ndef tilde(x):\n    xx = x-np.mean(x)\n    xxx = xx / np.sqrt(np.sum(xx**2))\n    return xxx\n\n\nfig, (ax1, ax2) = plt.subplots(1,2, figsize = (4,2))\nax1.plot(x,y1,'.'); ax1.plot(x,y2,'x'); ax1.set_title(r'$(x_i,y_i)$')\nax2.plot(tilde(x), tilde(y1),'.'); ax2.plot(tilde(x), tilde(y2), 'x'); ax2.set_title(r'$(\\tilde{x}_i,\\tilde{y}_i)$')\nfig.tight_layout()\n\n\n\n\n- 직선 근처의 퍼짐은 동일하지만, 직선의 기울기가 다른 경우\n\nx=np.arange(0,10,0.1)\ny1=x+np.random.normal(loc=0,scale=1.0,size=len(x))  ## 기울기가 1\ny2=0.2*x+np.random.normal(loc=0,scale=1.0,size=len(x))  ## 기울기가 0.2\n\nplt.plot(x,y1,'.')\nplt.plot(x,y2,'x')\n\nplt.show()\n\n\n\n\n\nfig, (ax1,ax2) = plt.subplots(1,2,figsize=(4,2))\nax1.plot(x,y1,'.'); ax1.plot(x,y2,'x'); ax1.set_title(r'$(x_i,y_i)$')\nax2.plot(tilde(x),tilde(y1),'.'); ax2.plot(tilde(x),tilde(y2),'x'); ax2.set_title(r'$(\\tilde{x}_i,\\tilde{y}_i)$')\nfig.tight_layout()\n\n\n\n\n기울기가 클수록, 퍼짐 정도가 작을수록 상관계수의 절댓값이 높다."
  },
  {
    "objectID": "unrefined file/datavisuallization/learning materials/2. 꺾은선, 산점도, 객체지향화.html#산점도-응용예제2---앤스콤의-4분할",
    "href": "unrefined file/datavisuallization/learning materials/2. 꺾은선, 산점도, 객체지향화.html#산점도-응용예제2---앤스콤의-4분할",
    "title": "Plot | 꺾은선, 산점도, 객체지향화",
    "section": "7. 산점도 응용예제2 - 앤스콤의 4분할",
    "text": "7. 산점도 응용예제2 - 앤스콤의 4분할\n- 표본상관계수가 모두 동일한 네 자료를 보라.\n\nx1 = [10, 8, 13, 9, 11, 14, 6, 4, 12, 7, 5]\ny1 = [8.04, 6.95, 7.58, 8.81, 8.33, 9.96, 7.24, 4.26, 10.84, 4.82, 5.68]\n\nx2 = x1\ny2 = [9.14, 8.14, 8.74, 8.77, 9.26, 8.10, 6.13, 3.10, 9.13, 7.26, 4.74]\n\nx3 = x1\ny3 = [7.46, 6.77, 12.74, 7.11, 7.81, 8.84, 6.08, 5.39, 8.15, 6.42, 5.73]\n\nx4 = [8, 8, 8, 8, 8, 8, 8, 19, 8, 8, 8]\ny4 = [6.58, 5.76, 7.71, 8.84, 8.47, 7.04, 5.25, 12.50, 5.56, 7.91, 6.89]\n\nnp.corrcoef(x1,y1),np.corrcoef(x2,y2),np.corrcoef(x3,y3),np.corrcoef(x4,y4)\n\n(array([[1.        , 0.81642052],\n        [0.81642052, 1.        ]]),\n array([[1.        , 0.81623651],\n        [0.81623651, 1.        ]]),\n array([[1.        , 0.81628674],\n        [0.81628674, 1.        ]]),\n array([[1.        , 0.81652144],\n        [0.81652144, 1.        ]]))\n\n\n\n음, 다 비슷한 자료겠구나… 양의 상관관계를 띄겠네?\n\n라고 속단하긴 이르다.\n\nfig, ((ax1,ax2),(ax3,ax4)) = plt.subplots(2,2,figsize=(6,4))\nax1.plot(x1,y1,'o'); ax1.set_title(f'corrcoef = {np.corrcoef(x1,y1)[0,1] : .6f}')\nax2.plot(x2,y2,'o'); ax2.set_title(f'corrcoef = {np.corrcoef(x2,y2)[0,1] : .6f}')\nax3.plot(x3,y3,'o'); ax3.set_title(f'corrcoef = {np.corrcoef(x3,y3)[0,1] : .6f}')\nax4.plot(x4,y4,'o'); ax4.set_title(f'corrcoef = {np.corrcoef(x4,y4)[0,1] : .6f}')\nfig.tight_layout()\n\n\n\n\n4개의 그림은 모두 같은 상관계수를 가지나, 그 느낌이 전혀 다르다.\n- 앤스콤플랏의 4개의 그림은 모두 같은 상관계수를 가진다. 하지만, 4개의 그림은 느낌이 전혀 다르다.\n- 같은 표본상관계수를 가진다고 하여 같은 관계성을 가지는 것은 아니다. 표본상관계수는 x,y의 비례정도를 측정하는데 그 값이 1에 가깝다고 하여 꼭 정비례의 관계가 있음을 의미하는 건 아니다.\n\\((x_i,y_i)\\)의 산점도가 선형성을 보일 때만 “표본상관계수가 1에 가까우므로 정비례의 관계에 있다”라는 논리전개가 성립한다.\n\n앤스콤의 첫번째 플랏 : 산점도가 선형 -&gt; 표본상관계수가 0.816 = 정비례의 관계가 0.816 정도\n앤스콤의 두번째 플랏 : 산점도가 선형이 아님 -&gt; 표본상관계수가 크게 의미없음.\n앤스콤의 세번째 플랏 : 산점도가 선형인듯 보이나 하나의 이상치가 있음 -&gt; 하나의 이상치가 표본상관계수의 값을 무너뜨릴 수 있으므로 표본상관계수 값을 신뢰할 수 없음.\n앤스콤의 네번째 플랏 : 산점도를 그려보니 이상한 그림 -&gt; 표본상관계수를 계산할 수는 있으나, 그게 무슨 의미가 있을까?\n\n산점도가 선형성을 보일 때만 표본상관계수가 1에 가까우므로 정비례의 관계에 있다라는 논리전개가 성립한다.\n\n1번만 의미가 있음. 3번의 경우 이상치가 존재하여 신뢰할 수 없음.\n\n\n교훈\n상관계수를 해석하기에 앞서서 산점도가 선형성을 보이는 지 체크할 것! 항상 통계량은 적절한 가정하에서만 말이 된다는 사실을 기억할 것!"
  },
  {
    "objectID": "unrefined file/datavisuallization/learning materials/exam_practice.html",
    "href": "unrefined file/datavisuallization/learning materials/exam_practice.html",
    "title": "RiverFlow",
    "section": "",
    "text": "import pandas as pd\nimport numpy as np\nimport json\nimport requests\nimport folium\nimport plotly.express as px\nfrom plotnine import *"
  },
  {
    "objectID": "unrefined file/datavisuallization/learning materials/강신성_0913(seaborn).html",
    "href": "unrefined file/datavisuallization/learning materials/강신성_0913(seaborn).html",
    "title": "Seaborn",
    "section": "",
    "text": "import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\ndf = pd.read_csv(\"https://raw.githubusercontent.com/guebin/DV2023/main/posts/titanic.csv\")\ndf.head()\n\n\n  \n    \n\n\n\n\n\n\nPassengerId\nSurvived\nPclass\nName\nSex\nAge\nSibSp\nParch\nTicket\nFare\nCabin\nEmbarked\nlogFare\n\n\n\n\n0\n1\n0\n3\nBraund, Mr. Owen Harris\nmale\n22.0\n1\n0\nA/5 21171\n7.2500\nNaN\nS\n1.981001\n\n\n1\n2\n1\n1\nCumings, Mrs. John Bradley (Florence Briggs Th...\nfemale\n38.0\n1\n0\nPC 17599\n71.2833\nC85\nC\n4.266662\n\n\n2\n3\n1\n3\nHeikkinen, Miss. Laina\nfemale\n26.0\n0\n0\nSTON/O2. 3101282\n7.9250\nNaN\nS\n2.070022\n\n\n3\n4\n1\n1\nFutrelle, Mrs. Jacques Heath (Lily May Peel)\nfemale\n35.0\n1\n0\n113803\n53.1000\nC123\nS\n3.972177\n\n\n4\n5\n0\n3\nAllen, Mr. William Henry\nmale\n35.0\n0\n0\n373450\n8.0500\nNaN\nS\n2.085672\nsns.scatterplot(\n    df,\n    x = 'logFare',  ## 요금에 로그를 취한 값(너무 변동이 크니까)\n    y = 'Age',\n    hue = 'Sex',    ## 색상, 색조. 변수 별 색상을 나눠 표기한다.\n    style = 'Survived', style_order = [1,0],  ## Survived 여부로 마커 표시, style_order의 디폴트 값이 [0 =&gt; O,1 =&gt; X]이므로 그 순서를 변경\n    alpha = 0.6     ## 투명도 조절\n)\n\n&lt;Axes: xlabel='logFare', ylabel='Age'&gt;\nplt.hist(df.Age)\n\n(array([ 54.,  46., 177., 169., 118.,  70.,  45.,  24.,   9.,   2.]),\n array([ 0.42 ,  8.378, 16.336, 24.294, 32.252, 40.21 , 48.168, 56.126,\n        64.084, 72.042, 80.   ]),\n &lt;BarContainer object of 10 artists&gt;)\nplt.hist(df.Age)\nplt.hist(df.Age[df.Survived == 1])  ## 그냥 그리면 겹쳐짐\n\nplt.show()\n- seaborn은 데이터과학에서 거의 표준적인 패키지. * 안하는 이유 * 간단한 시각화는 matplotlib가 유리 * seaborn에 대한 고급기능은 matplotlib에 대한 통찰이 있어야 가능 * plotline이 더 우수함(ggplot2) * plotly가 모든 면에서 seaborn을 압도하는 추세임\nsns.scatterplot(\n    df,\n    x = 'logFare',\n    y = 'Age',\n    hue = 'Sex',\n    style = 'Survived', style_order = [1,0],\n    alpha = 0.8\n)\n\nfig = plt.gcf()\nax = plt.gca()\nax.set_title('Scattor Plot')\n\nfig.add_axes([0.6,0.2,0.25,0.25])\nax_mini = plt.gca()\nax_mini.hist(df.Age)\nax_mini.hist(df.Age[df.Survived == 1])\nax_mini.set_title('Histogram')\nfig.suptitle('TITANIC')\n\nText(0.5, 0.98, 'TITANIC')\nfig\ntype(fig) ## seaborn으로 제작하였음에도 Figure의 형식을 지닌다.\n\nmatplotlib.figure.Figure"
  },
  {
    "objectID": "unrefined file/datavisuallization/learning materials/강신성_0913(seaborn).html#훌륭한-시각화",
    "href": "unrefined file/datavisuallization/learning materials/강신성_0913(seaborn).html#훌륭한-시각화",
    "title": "Seaborn",
    "section": "훌륭한 시각화",
    "text": "훌륭한 시각화\n\n애드워드 터프티\n\n엄격한 미니멀리즘\n최소한의 잉크로 많은 정보를 전달할 수 있다면 그것이 바로 좋은 그래프이다.\n\n\n너무 구시대적인 사고일 수도 있음. 적합할 수도 있고.\n\n\n\n찰스미나드의 도표\n\n\n터프티도 극찬하고 중국이 놀라고, 일본이 경악하고…\n\n\n군대의 크기, 2차원 평면상의 위치, 군대의 이동방향, 모스크바에서 퇴각하는 동안의 여러 날짜와 그 시점에서의 온도 -&gt; 6차원의 변수를 한 평면상에 표현\n\n미나드는 여러 그림을 그리는 방법 대신에 한 그림에서 패널을 늘리는 방법을 선택함."
  },
  {
    "objectID": "unrefined file/datavisuallization/learning materials/강신성_0913(seaborn).html#미나드처럼-그리는-게-왜-어려운가",
    "href": "unrefined file/datavisuallization/learning materials/강신성_0913(seaborn).html#미나드처럼-그리는-게-왜-어려운가",
    "title": "Seaborn",
    "section": "미나드처럼 그리는 게 왜 어려운가?",
    "text": "미나드처럼 그리는 게 왜 어려운가?\n- 몸무게, 키, 성별, 국적\n\ndf1=pd.read_csv('https://raw.githubusercontent.com/guebin/DV2022/master/posts/male1.csv')   ## 남성의 키\ndf2=pd.read_csv('https://raw.githubusercontent.com/guebin/DV2022/master/posts/male2.csv')   ## 남성의 몸무게\ndf3=pd.read_csv('https://raw.githubusercontent.com/guebin/DV2022/master/posts/female.csv')  ## 여성의 키와 몸무게\ndf4=pd.read_csv('https://raw.githubusercontent.com/guebin/DV2022/master/posts/foreign.csv') ## 외국인의 키와 몸무게, 성별, 국적\n\n\n_df = pd.concat([pd.concat([df1,df2],axis=1)\\\n                 .assign(g='m'),df3.assign(g='f')])\ndf = pd.concat([_df.assign(g2='korea'),df4.assign(g2='foreign')])\\\n.reset_index(drop=True)\ndf\n\n\n  \n    \n\n\n\n\n\n\nw\nh\ng\ng2\n\n\n\n\n0\n72.788217\n183.486773\nm\nkorea\n\n\n1\n66.606430\n173.599877\nm\nkorea\n\n\n2\n69.806324\n173.237903\nm\nkorea\n\n\n3\n67.449439\n173.223805\nm\nkorea\n\n\n4\n70.463183\n174.931946\nm\nkorea\n\n\n...\n...\n...\n...\n...\n\n\n1525\n78.154632\n188.324350\nm\nforeign\n\n\n1526\n74.754308\n183.017979\nf\nforeign\n\n\n1527\n91.196208\n190.100456\nm\nforeign\n\n\n1528\n87.770394\n187.987255\nm\nforeign\n\n\n1529\n88.021995\n193.456798\nm\nforeign\n\n\n\n\n\n1530 rows × 4 columns\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n\nsns.scatterplot(\n    data=df,\n    x='w',\n    y='h',\n    hue='g',    ## group 1 : gender\n    style='g2',  ## group 2 : region\n    alpha=0.6\n)\n\n&lt;Axes: xlabel='w', ylabel='h'&gt;\n\n\n\n\n\n-어려운 점 :\n\n센스 부족 : 센스가 없어서 그룹 구분할 생각을 못함\n개념 부족 : 타이디데이터( =tidy dataframe, long form dataframe) 형태로 데이터를 정리할 생각을 못함.\n코딩 못함 : 타이디테이터로 데이터를 변형하는 코드를 모름."
  },
  {
    "objectID": "unrefined file/datavisuallization/learning materials/강신성_0920.html",
    "href": "unrefined file/datavisuallization/learning materials/강신성_0920.html",
    "title": "A. 열의 선택",
    "section": "",
    "text": "판다스 기본\nimport numpy as np\nimport pandas as pd\n- 같은 자료, 다른 두 형태의 데이터프레임\ndf = pd.DataFrame({'date': ['12/30','12/31','01/01','01/02','01/03'], 'X1': [65,95,65,55,80], 'X2': [55,100,90,80,30], 'X3': [50,50,60,75,30], 'X4': [40,80,30,80,100]})\ndf\n\n\n  \n    \n\n\n\n\n\n\ndate\nX1\nX2\nX3\nX4\n\n\n\n\n0\n12/30\n65\n55\n50\n40\n\n\n1\n12/31\n95\n100\n50\n80\n\n\n2\n01/01\n65\n90\n60\n30\n\n\n3\n01/02\n55\n80\n75\n80\n\n\n4\n01/03\n80\n30\n30\n100\nts = pd.DataFrame({'X1': [65,95,65,55,80], 'X2': [55,100,90,80,30], 'X3': [50,50,60,75,30], 'X4': [40,80,30,80,100]}, index=['12/30','12/31','01/01','01/02','01/03'])\nts  ## 중요한 코드는 아님, 근데 그냥 index 지정해주는 거잖아\n\n\n  \n    \n\n\n\n\n\n\nX1\nX2\nX3\nX4\n\n\n\n\n12/30\n65\n55\n50\n40\n\n\n12/31\n95\n100\n50\n80\n\n\n01/01\n65\n90\n60\n30\n\n\n01/02\n55\n80\n75\n80\n\n\n01/03\n80\n30\n30\n100\nts.reset_index()  ## 결국 이렇게 하는 게 다루기 편하다.\n\n\n  \n    \n\n\n\n\n\n\nindex\nX1\nX2\nX3\nX4\n\n\n\n\n0\n12/30\n65\n55\n50\n40\n\n\n1\n12/31\n95\n100\n50\n80\n\n\n2\n01/01\n65\n90\n60\n30\n\n\n3\n01/02\n55\n80\n75\n80\n\n\n4\n01/03\n80\n30\n30\n100\ndf.X1   ## df 또한 하나의 object이므로\n\n0    65\n1    95\n2    65\n3    55\n4    80\nName: X1, dtype: int64\ndf['X1']  ## df를 일종의 딕셔너리처럼 취급하는 방법\n\n0    65\n1    95\n2    65\n3    55\n4    80\nName: X1, dtype: int64\ndct = dict({'date': ['12/30','12/31','01/01','01/02','01/03'], 'X1': [65,95,65,55,80], 'X2': [55,100,90,80,30], 'X3': [50,50,60,75,30], 'X4': [40,80,30,80,100]})\ndct['X1']\n\n[65, 95, 65, 55, 80]\ndf.keys()\n\nIndex(['date', 'X1', 'X2', 'X3', 'X4'], dtype='object')\ndct.keys()\n\ndict_keys(['date', 'X1', 'X2', 'X3', 'X4'])\ndf[['X1']]  ## 프레임으로 산출\n\n\n  \n    \n\n\n\n\n\n\nX1\n\n\n\n\n0\n65\n\n\n1\n95\n\n\n2\n65\n\n\n3\n55\n\n\n4\n80\ndf[['X1', 'X2']]  ## 2개 이상 산출 가능\n\n\n  \n    \n\n\n\n\n\n\nX1\nX2\n\n\n\n\n0\n65\n55\n\n\n1\n95\n100\n\n\n2\n65\n90\n\n\n3\n55\n80\n\n\n4\n80\n30\ndf.iloc[:, 0] ## numpy에서 행렬을 다루는 것과 완전히 같게 사용 가능.\n\n0    12/30\n1    12/31\n2    01/01\n3    01/02\n4    01/03\nName: date, dtype: object\n# df.iloc[:,0] # int\n# df.iloc[:,-2:] # int:int - 슬라이싱\n# df.iloc[:,1::2] # int:int - 스트라이딩\n# df.iloc[:,[0]] # [int]\n# df.iloc[:,[0,1]] # [int,int]\n# df.iloc[:,[True,True,False,False,False]] # bool의 list\n# df.iloc[:,range(2)] # range\n# df.iloc[:, 0:2]\n\n\n  \n    \n\n\n\n\n\n\ndate\nX1\n\n\n\n\n0\n12/30\n65\n\n\n1\n12/31\n95\n\n\n2\n01/01\n65\n\n\n3\n01/02\n55\n\n\n4\n01/03\n80\n# df.loc[:,'X1'] # str\n# df.loc[:,'X1':'X3'] # 'str':'str' -- 칼럼이름으로 슬라이싱 **\n# df.loc[:,'X1'::2] # 'str':'str' -- 칼럼이름으로 스트라이딩 **\n# df.loc[:,['X1']] # [str] : 판다스 프레임으로 산출하고 싶음.\n# df.loc[:,['X1','X4']] # [str,str]\n# df.loc[:,[True,False,False,True,False]] # bool의 list\n\n\"\"\"\n그냥 왠만해선 다 됨\n\"\"\"\ndf.loc[:, 'date':]\n\n\n  \n    \n\n\n\n\n\n\ndate\nX1\nX2\nX3\nX4\n\n\n\n\n0\n12/30\n65\n55\n50\n40\n\n\n1\n12/31\n95\n100\n50\n80\n\n\n2\n01/01\n65\n90\n60\n30\n\n\n3\n01/02\n55\n80\n75\n80\n\n\n4\n01/03\n80\n30\n30\n100\ndf.loc[:, [True, False, True, False, True]]   ## columns의 이름에 어떤 조건을 걸어서 True에 해당하는 열만 산출 가능\n\n\n  \n    \n\n\n\n\n\n\ndate\nX2\nX4\n\n\n\n\n0\n12/30\n55\n40\n\n\n1\n12/31\n100\n80\n\n\n2\n01/01\n90\n30\n\n\n3\n01/02\n80\n80\n\n\n4\n01/03\n30\n100\ndf.loc[::2, :]  ## 2 간격으로 스트라이딩\n\n\n  \n    \n\n\n\n\n\n\ndate\nX1\nX2\nX3\nX4\n\n\n\n\n0\n12/30\n65\n55\n50\n40\n\n\n2\n01/01\n65\n90\n60\n30\n\n\n4\n01/03\n80\n30\n30\n100\ndf.loc[df['X1'] &gt;= 60, :]\n\n\n  \n    \n\n\n\n\n\n\ndate\nX1\nX2\nX3\nX4\n\n\n\n\n0\n12/30\n65\n55\n50\n40\n\n\n1\n12/31\n95\n100\n50\n80\n\n\n2\n01/01\n65\n90\n60\n30\n\n\n4\n01/03\n80\n30\n30\n100"
  },
  {
    "objectID": "unrefined file/datavisuallization/learning materials/강신성_0920.html#b.-행의-선택",
    "href": "unrefined file/datavisuallization/learning materials/강신성_0920.html#b.-행의-선택",
    "title": "A. 열의 선택",
    "section": "B. 행의 선택",
    "text": "B. 행의 선택\n\n방법1 : df[]\n\n\ndf[:2]    ## int:int -- 슬라이싱 // df.iloc[:2, :], df.iloc[:2] 와 같음\n\n\n  \n    \n\n\n\n\n\n\ndate\nX1\nX2\nX3\nX4\n\n\n\n\n0\n12/30\n65\n55\n50\n40\n\n\n1\n12/31\n95\n100\n50\n80\n\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n\ndf[::2]\n\n\n  \n    \n\n\n\n\n\n\ndate\nX1\nX2\nX3\nX4\n\n\n\n\n0\n12/30\n65\n55\n50\n40\n\n\n2\n01/01\n65\n90\n60\n30\n\n\n4\n01/03\n80\n30\n30\n100\n\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n\n# df[:2] # int:int -- 슬라이싱 // df.iloc[:2,:], df.iloc[:2] 와 같음\n# df[::2] # int:int -- 스트라이딩\n# ts['12/30':'01/02'] # str:str -- 슬라이싱 &gt; 인덱스가 문자열 등일 경우\n# ts['12/31'::2] # str:str -- 스트라이딩\n# df[['12' in date for date in df.date]] # [bool,bool]\n# df[df.X1 &lt; 70] # pd.Series([bool,bool])\n\n\n방법2 : df.iloc[]\n\n\n# df.iloc[0] # int  df.iloc[0, :]에서 생략된 표현\n# df.iloc[-2:] # int:int -- 슬라이싱\n# df.iloc[1::2] # int:int -- 스트라이딩\n# df.iloc[[0]] # [int]\n# df.iloc[[0,1]] # [int,int]\n# df.iloc[['12' in date for date in df.date]] # [bool,bool]\n# df.iloc[range(2)] # range\n\n\nlst = [[1,2,3], [3,4,5]]\nlst[0]\n\n[1, 2, 3]\n\n\n\nary = np.array(lst)\nary[0]\n\narray([1, 2, 3])\n\n\n\n방법3 : df.loc[]\n\n\n# df.iloc[0,:] # int\n# df.iloc[-2:,:] # int:int -- 슬라이싱\n# df.iloc[1::2,:] # int:int -- 스트라이딩\n# df.iloc[[0],:] # [int]\n# df.iloc[[0,1],:] # [int,int]\n# df.iloc[['12' in date for date in df.date],:] # [bool,bool]\n# df.iloc[range(2),:] # range\n\n\ndf.iloc[:2]\n\n\n  \n    \n\n\n\n\n\n\ndate\nX1\nX2\nX3\nX4\n\n\n\n\n0\n12/30\n65\n55\n50\n40\n\n\n1\n12/31\n95\n100\n50\n80\n\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n\ndf.loc[:2]  ## character와 비슷한 형식이기 때문에 2까지 포함이 된다.\n\n\n  \n    \n\n\n\n\n\n\ndate\nX1\nX2\nX3\nX4\n\n\n\n\n0\n12/30\n65\n55\n50\n40\n\n\n1\n12/31\n95\n100\n50\n80\n\n\n2\n01/01\n65\n90\n60\n30\n\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n\n['12' in date for date in df.date]  ## data열에서 '12'가 포함된 행\n\n[True, True, False, False, False]\n\n\n\ndf.loc[df.X1 &gt; 70]\n\n\n  \n    \n\n\n\n\n\n\ndate\nX1\nX2\nX3\nX4\n\n\n\n\n1\n12/31\n95\n100\n50\n80\n\n\n4\n01/03\n80\n30\n30\n100\n\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n\n## df.iloc[df.X1 &gt; 70] &gt; 오류, bool을 받을 수 있으나, 튜플의 형태로 들어가면 반환하지 않는다.\ndf.iloc[list(df.X1 &gt; 70)]\n\n\n  \n    \n\n\n\n\n\n\ndate\nX1\nX2\nX3\nX4\n\n\n\n\n1\n12/31\n95\n100\n50\n80\n\n\n4\n01/03\n80\n30\n30\n100"
  },
  {
    "objectID": "unrefined file/datavisuallization/learning materials/강신성_0920.html#d.-교수님-방식",
    "href": "unrefined file/datavisuallization/learning materials/강신성_0920.html#d.-교수님-방식",
    "title": "A. 열의 선택",
    "section": "D. 교수님 방식",
    "text": "D. 교수님 방식\n-가장 안전한 코드\n\ndf.loc[:,:] ## 해당 코드를 써놓고 시작, generally\n\n\n  \n    \n\n\n\n\n\n\ndate\nX1\nX2\nX3\nX4\n\n\n\n\n0\n12/30\n65\n55\n50\n40\n\n\n1\n12/31\n95\n100\n50\n80\n\n\n2\n01/01\n65\n90\n60\n30\n\n\n3\n01/02\n55\n80\n75\n80\n\n\n4\n01/03\n80\n30\n30\n100\n\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n\n하나의 col을 뽑으려 할 때\n\n\n# df.X1       ## 제일 간단함. 게다가 눌러보면 변수 이름들이 나옴\n# df['X1']\n# df[['X1']]\n\n\nrow를 슬라이싱\n\n\n# df[:5]\n# ts[:'01/02']  # 시계열일 경우\n\n\n조건에 맞는 row를 뽑을 때 좋은 코드\n\n\n# df[df.X1&lt;60]  ## 이게 좋기는 한데, True, False를 직접 만들어야 하는 경우도 많음.\n# df.loc[['12' in date for date in df.date]]\n\n\n['12' in date for date in df.date]\n\n[True, True, False, False, False]\n\n\n\n하나의 row를 뽑으려 할 때 좋은 코드\n\n\n# df.iloc[0]\n# df.loc[0]\n\n\nts.iloc[[0]]\n# ts.iloc[0]의 경우 오류가 남(인덱스 이름이 숫자열이 아님\n\n\n  \n    \n\n\n\n\n\n\nX1\nX2\nX3\nX4\n\n\n\n\n12/30\n65\n55\n50\n40\n\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n    \n  \n\n\n\n(row,col)을 뽑으려 할 때 좋은 코드\n\n\n# df.X1[0]    ## &lt;- pd.Series를 뽑고 인덱스로 접근\n# df['X1'][0]\n\n\n# df.iloc[0,0]\n# df.loc[0,'X1']\n\n*위의 상황 이외에는 df.loc[:,:]를 사용하는 것이 유리하다.\n\n요약\n\n알아두면 좋은 규칙\n.iloc[] 와 .iloc[,:]는 완전히 동등하다.\n.loc[] 와 .loc[,:]는 완전히 동등하다.\n결과를 pd.Series 형태가 아닌 pd.DataFrame 형태로 얻고 싶다면 [[?]]를 사용하면 된다.\n\n\n\nROW\n\n\n\n\n\n\n\n\n\n\n\ntype of indexer\n.\n[]\n.iloc\n.loc\n내가 쓴다면?\n\n\n\n\nint\nX\nX\nO\n\\(\\Delta\\)\ndf.iloc[3,:]\n\n\nint:int\nX\nO\nO\n\\(\\Delta\\)\ndf[3:5]\n\n\n[int,int]\nX\nX\nO\n\\(\\Delta\\)\ndf.iloc[idx,:]\n\n\nstr\nX\nX\nX\nO\nts.loc['time1',:]\n\n\nstr:str\nX\nO\nX\nO\nts.loc['time1':'time2',:]\n\n\n[str,str]\nX\nX\nX\nO\n안할 듯\n\n\n[bool,bool]\nX\nO\nO\nO\ndf[filtered_idx]\n\n\npd.Series([bool,bool])\nX\nO\nX\nO\ndf[df.X1&gt;20]\n\n\n\n\n\nCOL\n\n\n\n\n\n\n\n\n\n\n\n\ntype of indexer\ntarget\n.\n[]\n.iloc\n.loc\n내가 쓴다면?\n\n\n\n\nint\ncol\nX\nX\nO\nX\ndf.iloc[:,0]\n\n\nint:int\ncol\nX\nX\nO\nX\ndf.iloc[:,0:2]\n\n\n[int,int]\ncol\nX\nX\nO\nX\ndf.iloc[:,idx]\n\n\nstr\ncol\nO\nO\nX\nO\ndf.loc[:,'X1']\n\n\nstr:str\ncol\nX\nX\nX\nO\ndf.loc[:,'X1':'X4']\n\n\n[str,str]\ncol\nX\nO\nX\nO\ndf.loc[:,colname_list]\n\n\n[bool,bool]\ncol\nX\nX\nO\nO\ndf.loc[:,bool_list]"
  },
  {
    "objectID": "unrefined file/datavisuallization/learning materials/강신성_1004(transform column _ 꿀팁).html",
    "href": "unrefined file/datavisuallization/learning materials/강신성_1004(transform column _ 꿀팁).html",
    "title": "1. pabdas : transform column",
    "section": "",
    "text": "import numpy as np\nimport pandas as pd\nfrom plotnine import *"
  },
  {
    "objectID": "unrefined file/datavisuallization/learning materials/강신성_1004(transform column _ 꿀팁).html#fifa23-시각화",
    "href": "unrefined file/datavisuallization/learning materials/강신성_1004(transform column _ 꿀팁).html#fifa23-시각화",
    "title": "1. pabdas : transform column",
    "section": "3. FIFA23 시각화",
    "text": "3. FIFA23 시각화\n# DV2022-중간고사-4-(2)의 변형:\n\ndf = pd.read_csv('https://raw.githubusercontent.com/guebin/DV2021/master/_notebooks/2021-10-25-FIFA22_official_data.csv')\ndf.head()\n\n\n  \n    \n\n\n\n\n\n\nID\nName\nAge\nPhoto\nNationality\nFlag\nOverall\nPotential\nClub\nClub Logo\n...\nSlidingTackle\nGKDiving\nGKHandling\nGKKicking\nGKPositioning\nGKReflexes\nBest Position\nBest Overall Rating\nRelease Clause\nDefensiveAwareness\n\n\n\n\n0\n212198\nBruno Fernandes\n26\nhttps://cdn.sofifa.com/players/212/198/22_60.png\nPortugal\nhttps://cdn.sofifa.com/flags/pt.png\n88\n89\nManchester United\nhttps://cdn.sofifa.com/teams/11/30.png\n...\n65.0\n12.0\n14.0\n15.0\n8.0\n14.0\nCAM\n88.0\n€206.9M\n72.0\n\n\n1\n209658\nL. Goretzka\n26\nhttps://cdn.sofifa.com/players/209/658/22_60.png\nGermany\nhttps://cdn.sofifa.com/flags/de.png\n87\n88\nFC Bayern München\nhttps://cdn.sofifa.com/teams/21/30.png\n...\n77.0\n13.0\n8.0\n15.0\n11.0\n9.0\nCM\n87.0\n€160.4M\n74.0\n\n\n2\n176580\nL. Suárez\n34\nhttps://cdn.sofifa.com/players/176/580/22_60.png\nUruguay\nhttps://cdn.sofifa.com/flags/uy.png\n88\n88\nAtlético de Madrid\nhttps://cdn.sofifa.com/teams/240/30.png\n...\n38.0\n27.0\n25.0\n31.0\n33.0\n37.0\nST\n88.0\n€91.2M\n42.0\n\n\n3\n192985\nK. De Bruyne\n30\nhttps://cdn.sofifa.com/players/192/985/22_60.png\nBelgium\nhttps://cdn.sofifa.com/flags/be.png\n91\n91\nManchester City\nhttps://cdn.sofifa.com/teams/10/30.png\n...\n53.0\n15.0\n13.0\n5.0\n10.0\n13.0\nCM\n91.0\n€232.2M\n68.0\n\n\n4\n224334\nM. Acuña\n29\nhttps://cdn.sofifa.com/players/224/334/22_60.png\nArgentina\nhttps://cdn.sofifa.com/flags/ar.png\n84\n84\nSevilla FC\nhttps://cdn.sofifa.com/teams/481/30.png\n...\n82.0\n8.0\n14.0\n13.0\n13.0\n14.0\nLB\n84.0\n€77.7M\n80.0\n\n\n\n\n\n5 rows × 65 columns\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n포지션별로 선수들의 능력치(ShotPower,SlidingTackle)와 급여(Wage)를 시각화하고 싶다. 아래의 세부지침에 맞추어 포지션별 ShotPower와 SlidingTackle의 산점도를 그려라. – (30점)\n세부지침\nA. Column의 이름에서 공백을 제거하라.\nB. 결측치가 50%이상인 컬럼을 찾고 이를 제거하라. 그 뒤에 .dropna()를 사용하여 결측치가 포함된 행을 제거하라.\nC. position_dict를 이용하여 df.Position을 적절하게 변환하라. 변환된 값을 df.Position에 저장하라.\n\nposition_dict = {\n    'GOALKEEPER':{'GK'},\n    'DEFENDER':{'CB','RCB','LCB','RB','LB','RWB','LWB'},\n    'MIDFIELDER':{'CM','RCM','LCM','CDM','RDM','LDM','CAM','RAM','LAM','RM','LM'},\n    'FORWARD':{'ST','CF','RF','LF','RW','LW','RS','LS'},\n    'SUB':{'SUB'},\n    'RES':{'RES'}\n}\nposition_dict\n\n{'GOALKEEPER': {'GK'},\n 'DEFENDER': {'CB', 'LB', 'LCB', 'LWB', 'RB', 'RCB', 'RWB'},\n 'MIDFIELDER': {'CAM',\n  'CDM',\n  'CM',\n  'LAM',\n  'LCM',\n  'LDM',\n  'LM',\n  'RAM',\n  'RCM',\n  'RDM',\n  'RM'},\n 'FORWARD': {'CF', 'LF', 'LS', 'LW', 'RF', 'RS', 'RW', 'ST'},\n 'SUB': {'SUB'},\n 'RES': {'RES'}}\n\n\n\nA. 열의 이름에서 공백 제거\n\n_df = df.set_axis(df.columns.str.replace(' ', ''),axis = 1)\n_df.columns\n\nIndex(['ID', 'Name', 'Age', 'Photo', 'Nationality', 'Flag', 'Overall',\n       'Potential', 'Club', 'ClubLogo', 'Value', 'Wage', 'Special',\n       'PreferredFoot', 'InternationalReputation', 'WeakFoot', 'SkillMoves',\n       'WorkRate', 'BodyType', 'RealFace', 'Position', 'JerseyNumber',\n       'Joined', 'LoanedFrom', 'ContractValidUntil', 'Height', 'Weight',\n       'Crossing', 'Finishing', 'HeadingAccuracy', 'ShortPassing', 'Volleys',\n       'Dribbling', 'Curve', 'FKAccuracy', 'LongPassing', 'BallControl',\n       'Acceleration', 'SprintSpeed', 'Agility', 'Reactions', 'Balance',\n       'ShotPower', 'Jumping', 'Stamina', 'Strength', 'LongShots',\n       'Aggression', 'Interceptions', 'Positioning', 'Vision', 'Penalties',\n       'Composure', 'Marking', 'StandingTackle', 'SlidingTackle', 'GKDiving',\n       'GKHandling', 'GKKicking', 'GKPositioning', 'GKReflexes',\n       'BestPosition', 'BestOverallRating', 'ReleaseClause',\n       'DefensiveAwareness'],\n      dtype='object')\n\n\n\n\nB. 결측치 제거\n\n__df = _df.loc[:, lambda __df : __df.isna().mean() &lt; 0.5].dropna()\n\n\n  \n    \n\n\n\n\n\n\nID\nName\nAge\nPhoto\nNationality\nFlag\nOverall\nPotential\nClub\nClubLogo\n...\nSlidingTackle\nGKDiving\nGKHandling\nGKKicking\nGKPositioning\nGKReflexes\nBestPosition\nBestOverallRating\nReleaseClause\nDefensiveAwareness\n\n\n\n\n0\n212198\nBruno Fernandes\n26\nhttps://cdn.sofifa.com/players/212/198/22_60.png\nPortugal\nhttps://cdn.sofifa.com/flags/pt.png\n88\n89\nManchester United\nhttps://cdn.sofifa.com/teams/11/30.png\n...\n65.0\n12.0\n14.0\n15.0\n8.0\n14.0\nCAM\n88.0\n€206.9M\n72.0\n\n\n1\n209658\nL. Goretzka\n26\nhttps://cdn.sofifa.com/players/209/658/22_60.png\nGermany\nhttps://cdn.sofifa.com/flags/de.png\n87\n88\nFC Bayern München\nhttps://cdn.sofifa.com/teams/21/30.png\n...\n77.0\n13.0\n8.0\n15.0\n11.0\n9.0\nCM\n87.0\n€160.4M\n74.0\n\n\n2\n176580\nL. Suárez\n34\nhttps://cdn.sofifa.com/players/176/580/22_60.png\nUruguay\nhttps://cdn.sofifa.com/flags/uy.png\n88\n88\nAtlético de Madrid\nhttps://cdn.sofifa.com/teams/240/30.png\n...\n38.0\n27.0\n25.0\n31.0\n33.0\n37.0\nST\n88.0\n€91.2M\n42.0\n\n\n3\n192985\nK. De Bruyne\n30\nhttps://cdn.sofifa.com/players/192/985/22_60.png\nBelgium\nhttps://cdn.sofifa.com/flags/be.png\n91\n91\nManchester City\nhttps://cdn.sofifa.com/teams/10/30.png\n...\n53.0\n15.0\n13.0\n5.0\n10.0\n13.0\nCM\n91.0\n€232.2M\n68.0\n\n\n4\n224334\nM. Acuña\n29\nhttps://cdn.sofifa.com/players/224/334/22_60.png\nArgentina\nhttps://cdn.sofifa.com/flags/ar.png\n84\n84\nSevilla FC\nhttps://cdn.sofifa.com/teams/481/30.png\n...\n82.0\n8.0\n14.0\n13.0\n13.0\n14.0\nLB\n84.0\n€77.7M\n80.0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n16703\n259718\nF. Gebhardt\n19\nhttps://cdn.sofifa.com/players/259/718/22_60.png\nGermany\nhttps://cdn.sofifa.com/flags/de.png\n52\n66\nFC Basel 1893\nhttps://cdn.sofifa.com/teams/896/30.png\n...\n10.0\n53.0\n45.0\n47.0\n52.0\n57.0\nGK\n52.0\n€361K\n6.0\n\n\n16704\n251433\nB. Voll\n20\nhttps://cdn.sofifa.com/players/251/433/22_60.png\nGermany\nhttps://cdn.sofifa.com/flags/de.png\n58\n69\nF.C. Hansa Rostock\nhttps://cdn.sofifa.com/teams/27/30.png\n...\n10.0\n59.0\n60.0\n56.0\n55.0\n61.0\nGK\n58.0\n€656K\n5.0\n\n\n16706\n262846\n�. Dobre\n20\nhttps://cdn.sofifa.com/players/262/846/22_60.png\nRomania\nhttps://cdn.sofifa.com/flags/ro.png\n53\n63\nFC Academica Clinceni\nhttps://cdn.sofifa.com/teams/113391/30.png\n...\n12.0\n57.0\n52.0\n53.0\n48.0\n58.0\nGK\n53.0\n€279K\n5.0\n\n\n16707\n241317\n21 Xue Qinghao\n19\nhttps://cdn.sofifa.com/players/241/317/21_60.png\nChina PR\nhttps://cdn.sofifa.com/flags/cn.png\n47\n60\nShanghai Shenhua FC\nhttps://cdn.sofifa.com/teams/110955/30.png\n...\n9.0\n49.0\n48.0\n45.0\n38.0\n52.0\nGK\n47.0\n€223K\n21.0\n\n\n16708\n259646\nA. Shaikh\n18\nhttps://cdn.sofifa.com/players/259/646/22_60.png\nIndia\nhttps://cdn.sofifa.com/flags/in.png\n47\n67\nATK Mohun Bagan FC\nhttps://cdn.sofifa.com/teams/113146/30.png\n...\n13.0\n49.0\n41.0\n39.0\n45.0\n49.0\nGK\n47.0\n€259K\n7.0\n\n\n\n\n\n14398 rows × 63 columns\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n\n\nC. position 칼럼의 변환\n\ntemp = df.set_axis(df.columns.str.replace(' ',''),axis=1)\\\n.loc[:,lambda _df: _df.isna().mean() &lt;0.5].dropna()\\\n.assign(Position = lambda _df: _df.Position.str.split('&gt;').str[-1].apply(lambda x: [k for k,v in position_dict.items() if x in v][0]))\n\n\ntemp.Position\n\n0        MIDFIELDER\n1        MIDFIELDER\n2           FORWARD\n3        MIDFIELDER\n4          DEFENDER\n            ...    \n16703           RES\n16704           RES\n16706           RES\n16707           RES\n16708           SUB\nName: Position, Length: 14398, dtype: object"
  },
  {
    "objectID": "unrefined file/datavisuallization/강신성(202014107)_2.html",
    "href": "unrefined file/datavisuallization/강신성(202014107)_2.html",
    "title": "RiverFlow",
    "section": "",
    "text": "1. 라이브러리 설치\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n2. 벡터 지정\n\nx = np.arange(-5,5,0.1)\ny1 = np.sin(x)\ny2 = np.sin(2*x) + 2\ny3 = np.sin(4*x) + 4\ny4 = np.sin(8*x) + 6\n\n3. 그래프 산출\n\nplt.plot(x,y1,'--',color = '#ff3333')\nplt.plot(x,y2,'--',color = '#128912')\nplt.plot(x,y3,'--b')\nplt.plot(x,y4,'--',color = '#ca2eca')\n\nplt.show()\n\n\n\n\n\n%%shell\njupyter nbconvert --to html /content/강신성_데이터시각화_01wk_2.ipynb\n\n[NbConvertApp] Converting notebook /content/강신성_데이터시각화_01wk_2.ipynb to html\n[NbConvertApp] Writing 645143 bytes to /content/강신성_데이터시각화_01wk_2.html"
  },
  {
    "objectID": "unrefined file/datavisuallization/강신성(202014107)_4.html",
    "href": "unrefined file/datavisuallization/강신성(202014107)_4.html",
    "title": "1. 사전작업",
    "section": "",
    "text": "라이브러리 설치\n\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\n데이터 파일 불러오기 및 확인\n\n\ndf = pd.read_csv(\"https://raw.githubusercontent.com/guebin/DV2023/main/posts/titanic.csv\")\ndf.head()\n\n\n\n\n\n\n\n\nPassengerId\nSurvived\nPclass\nName\nSex\nAge\nSibSp\nParch\nTicket\nFare\nCabin\nEmbarked\nlogFare\n\n\n\n\n0\n1\n0\n3\nBraund, Mr. Owen Harris\nmale\n22.0\n1\n0\nA/5 21171\n7.2500\nNaN\nS\n1.981001\n\n\n1\n2\n1\n1\nCumings, Mrs. John Bradley (Florence Briggs Th...\nfemale\n38.0\n1\n0\nPC 17599\n71.2833\nC85\nC\n4.266662\n\n\n2\n3\n1\n3\nHeikkinen, Miss. Laina\nfemale\n26.0\n0\n0\nSTON/O2. 3101282\n7.9250\nNaN\nS\n2.070022\n\n\n3\n4\n1\n1\nFutrelle, Mrs. Jacques Heath (Lily May Peel)\nfemale\n35.0\n1\n0\n113803\n53.1000\nC123\nS\n3.972177\n\n\n4\n5\n0\n3\nAllen, Mr. William Henry\nmale\n35.0\n0\n0\n373450\n8.0500\nNaN\nS\n2.085672\n\n\n\n\n\n\n\n\n2. 그래프 산출\n\nplt.hist(df.Age, label = 'AgeDist of All')\nplt.hist(df.Age[df.Survived == 1], label = 'AgeDist of Survivors')\n\nplt.legend()\nplt.show()"
  },
  {
    "objectID": "unrefined file/datavisuallization/강신성(202014107)_6.html",
    "href": "unrefined file/datavisuallization/강신성(202014107)_6.html",
    "title": "[문제 풀이] 특정 단어를 포함하는 열 선택",
    "section": "",
    "text": "데이터프레임 df의 열이름에 actor라는 단어가 포함된 column만을 선택하는 코드를 작성하라"
  },
  {
    "objectID": "unrefined file/datavisuallization/강신성(202014107)_6.html#사전작업",
    "href": "unrefined file/datavisuallization/강신성(202014107)_6.html#사전작업",
    "title": "[문제 풀이] 특정 단어를 포함하는 열 선택",
    "section": "1. 사전작업",
    "text": "1. 사전작업\n\n라이브러리 설치\n\n\nimport pandas as pd\nimport numpy as np\n\n\n데이터 불러오기 및 확인\n\n\ndf=pd.read_csv('https://raw.githubusercontent.com/PacktPublishing/Pandas-Cookbook/master/data/movie.csv')\ndf.head()\n\n\n\n\n\n\n\n\ncolor\ndirector_name\nnum_critic_for_reviews\nduration\ndirector_facebook_likes\nactor_3_facebook_likes\nactor_2_name\nactor_1_facebook_likes\ngross\ngenres\n...\nnum_user_for_reviews\nlanguage\ncountry\ncontent_rating\nbudget\ntitle_year\nactor_2_facebook_likes\nimdb_score\naspect_ratio\nmovie_facebook_likes\n\n\n\n\n0\nColor\nJames Cameron\n723.0\n178.0\n0.0\n855.0\nJoel David Moore\n1000.0\n760505847.0\nAction|Adventure|Fantasy|Sci-Fi\n...\n3054.0\nEnglish\nUSA\nPG-13\n237000000.0\n2009.0\n936.0\n7.9\n1.78\n33000\n\n\n1\nColor\nGore Verbinski\n302.0\n169.0\n563.0\n1000.0\nOrlando Bloom\n40000.0\n309404152.0\nAction|Adventure|Fantasy\n...\n1238.0\nEnglish\nUSA\nPG-13\n300000000.0\n2007.0\n5000.0\n7.1\n2.35\n0\n\n\n2\nColor\nSam Mendes\n602.0\n148.0\n0.0\n161.0\nRory Kinnear\n11000.0\n200074175.0\nAction|Adventure|Thriller\n...\n994.0\nEnglish\nUK\nPG-13\n245000000.0\n2015.0\n393.0\n6.8\n2.35\n85000\n\n\n3\nColor\nChristopher Nolan\n813.0\n164.0\n22000.0\n23000.0\nChristian Bale\n27000.0\n448130642.0\nAction|Thriller\n...\n2701.0\nEnglish\nUSA\nPG-13\n250000000.0\n2012.0\n23000.0\n8.5\n2.35\n164000\n\n\n4\nNaN\nDoug Walker\nNaN\nNaN\n131.0\nNaN\nRob Walker\n131.0\nNaN\nDocumentary\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n12.0\n7.1\nNaN\n0\n\n\n\n\n5 rows × 28 columns\n\n\n\n\ndf.columns\n\nIndex(['color', 'director_name', 'num_critic_for_reviews', 'duration',\n       'director_facebook_likes', 'actor_3_facebook_likes', 'actor_2_name',\n       'actor_1_facebook_likes', 'gross', 'genres', 'actor_1_name',\n       'movie_title', 'num_voted_users', 'cast_total_facebook_likes',\n       'actor_3_name', 'facenumber_in_poster', 'plot_keywords',\n       'movie_imdb_link', 'num_user_for_reviews', 'language', 'country',\n       'content_rating', 'budget', 'title_year', 'actor_2_facebook_likes',\n       'imdb_score', 'aspect_ratio', 'movie_facebook_likes'],\n      dtype='object')\n\n\n\n열 이름에서 단어의 구분이 모두 '_'로 되어있으므로, 열이름에 split()함수를 적용시킬 수 있을 것 같다."
  },
  {
    "objectID": "unrefined file/datavisuallization/강신성(202014107)_6.html#풀이",
    "href": "unrefined file/datavisuallization/강신성(202014107)_6.html#풀이",
    "title": "[문제 풀이] 특정 단어를 포함하는 열 선택",
    "section": "2. 풀이",
    "text": "2. 풀이\n\nfor 문을 이용하여 풀이해보자.\n\n\n['actor' in i.split('_') for i in df.columns]\n\n[False,\n False,\n False,\n False,\n False,\n True,\n True,\n True,\n False,\n False,\n True,\n False,\n False,\n False,\n True,\n False,\n False,\n False,\n False,\n False,\n False,\n False,\n False,\n False,\n True,\n False,\n False,\n False]"
  },
  {
    "objectID": "unrefined file/datavisuallization/강신성(202014107)_6.html#결과",
    "href": "unrefined file/datavisuallization/강신성(202014107)_6.html#결과",
    "title": "[문제 풀이] 특정 단어를 포함하는 열 선택",
    "section": "3. 결과",
    "text": "3. 결과\n\ndf.loc[:, ['actor' in i.split('_') for i in df.columns]]\n\n\n\n\n\n\n\n\nactor_3_facebook_likes\nactor_2_name\nactor_1_facebook_likes\nactor_1_name\nactor_3_name\nactor_2_facebook_likes\n\n\n\n\n0\n855.0\nJoel David Moore\n1000.0\nCCH Pounder\nWes Studi\n936.0\n\n\n1\n1000.0\nOrlando Bloom\n40000.0\nJohnny Depp\nJack Davenport\n5000.0\n\n\n2\n161.0\nRory Kinnear\n11000.0\nChristoph Waltz\nStephanie Sigman\n393.0\n\n\n3\n23000.0\nChristian Bale\n27000.0\nTom Hardy\nJoseph Gordon-Levitt\n23000.0\n\n\n4\nNaN\nRob Walker\n131.0\nDoug Walker\nNaN\n12.0\n\n\n...\n...\n...\n...\n...\n...\n...\n\n\n4911\n318.0\nDaphne Zuniga\n637.0\nEric Mabius\nCrystal Lowe\n470.0\n\n\n4912\n319.0\nValorie Curry\n841.0\nNatalie Zea\nSam Underwood\n593.0\n\n\n4913\n0.0\nMaxwell Moody\n0.0\nEva Boehnke\nDavid Chandler\n0.0\n\n\n4914\n489.0\nDaniel Henney\n946.0\nAlan Ruck\nEliza Coupe\n719.0\n\n\n4915\n16.0\nBrian Herzlinger\n86.0\nJohn August\nJon Gunn\n23.0\n\n\n\n\n4916 rows × 6 columns\n\n\n\n완료"
  }
]